; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG123011 DB	0aH, 'usage: playraw N fs file <device> <channelOffset>', 0aH
	DB	00H
$SG123188 DB	'rb', 00H
	ORG $+1
$SG123012 DB	'    where N = number of channels,', 0aH, 00H
	ORG $+1
$SG123195 DB	').', 00H
	ORG $+1
$SG123013 DB	'    fs = the sample rate, ', 0aH, 00H
	ORG $+4
$SG123014 DB	'    file = the raw file to play,', 0aH, 00H
	ORG $+6
$SG123015 DB	'    device = optional device to use (default = 0),', 0aH
	DB	00H
	ORG $+4
$SG123016 DB	'    and channelOffset = an optional channel offset on th'
	DB	'e device (default = 0).', 0aH, 0aH, 00H
	ORG $+6
$SG123185 DB	0aH, 'No audio devices found!', 0aH, 00H
	ORG $+6
$SG123190 DB	'Unable to find or open file!', 0aH, 00H
	ORG $+2
$SG123196 DB	' (buffer frames = ', 00H
	ORG $+5
$SG123197 DB	0aH, 'Playing raw file ', 00H
CONST	ENDS
PUBLIC	fabsl
PUBLIC	frexpl
PUBLIC	__local_stdio_printf_options
PUBLIC	??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
PUBLIC	_vsprintf_s_l
PUBLIC	sprintf_s
PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?length@?$char_traits@D@std@@SA_KPEBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z	; std::char_traits<char>::assign
PUBLIC	?assign@?$char_traits@D@std@@SAXAEADAEBD@Z	; std::char_traits<char>::assign
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHAEBD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?_Allocate@std@@YAPEAX_K0_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPEAX_K1@Z			; std::_Deallocate
PUBLIC	?_Init_atomic_counter@std@@YAXAEAKK@Z		; std::_Init_atomic_counter
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	??0?$allocator@D@std@@QEAA@AEBV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QEBA_KXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Copy_alloc
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
PUBLIC	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
PUBLIC	??0runtime_error@std@@QEAA@PEBD@Z		; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UEAA@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QEAA@AEBV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UEAAPEAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0bad_cast@std@@QEAA@XZ			; std::bad_cast::bad_cast
PUBLIC	??1bad_cast@std@@UEAA@XZ			; std::bad_cast::~bad_cast
PUBLIC	??0bad_cast@std@@QEAA@AEBV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??_Gbad_cast@std@@UEAAPEAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	??0_Locinfo@std@@QEAA@PEBD@Z			; std::_Locinfo::_Locinfo
PUBLIC	??1_Locinfo@std@@QEAA@XZ			; std::_Locinfo::~_Locinfo
PUBLIC	?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ	; std::_Locinfo::_Getctype
PUBLIC	?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ	; std::_Locinfo::_Getcvt
PUBLIC	?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ	; std::_Locinfo::_Getlconv
PUBLIC	?_Getfalse@_Locinfo@std@@QEBAPEBDXZ		; std::_Locinfo::_Getfalse
PUBLIC	?_Gettrue@_Locinfo@std@@QEBAPEBDXZ		; std::_Locinfo::_Gettrue
PUBLIC	??0?$_Yarn@D@std@@QEAA@XZ			; std::_Yarn<char>::_Yarn<char>
PUBLIC	??1?$_Yarn@D@std@@QEAA@XZ			; std::_Yarn<char>::~_Yarn<char>
PUBLIC	?c_str@?$_Yarn@D@std@@QEBAPEBDXZ		; std::_Yarn<char>::c_str
PUBLIC	?_Tidy@?$_Yarn@D@std@@AEAAXXZ			; std::_Yarn<char>::_Tidy
PUBLIC	??0?$_Yarn@_W@std@@QEAA@XZ			; std::_Yarn<wchar_t>::_Yarn<wchar_t>
PUBLIC	??1?$_Yarn@_W@std@@QEAA@XZ			; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
PUBLIC	?_Tidy@?$_Yarn@_W@std@@AEAAXXZ			; std::_Yarn<wchar_t>::_Tidy
PUBLIC	??1_Facet_base@std@@UEAA@XZ			; std::_Facet_base::~_Facet_base
PUBLIC	??0_Facet_base@std@@QEAA@XZ			; std::_Facet_base::_Facet_base
PUBLIC	??_G_Facet_base@std@@UEAAPEAXI@Z		; std::_Facet_base::`scalar deleting destructor'
PUBLIC	??0id@locale@std@@QEAA@_K@Z			; std::locale::id::id
PUBLIC	??Bid@locale@std@@QEAA_KXZ			; std::locale::id::operator unsigned __int64
PUBLIC	?_Incref@facet@locale@std@@UEAAXXZ		; std::locale::facet::_Incref
PUBLIC	?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref
PUBLIC	??0facet@locale@std@@IEAA@_K@Z			; std::locale::facet::facet
PUBLIC	??1facet@locale@std@@MEAA@XZ			; std::locale::facet::~facet
PUBLIC	??_Gfacet@locale@std@@MEAAPEAXI@Z		; std::locale::facet::`scalar deleting destructor'
PUBLIC	??0locale@std@@QEAA@AEBV01@@Z			; std::locale::locale
PUBLIC	??1locale@std@@QEAA@XZ				; std::locale::~locale
PUBLIC	?c_str@locale@std@@QEBAPEBDXZ			; std::locale::c_str
PUBLIC	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z	; std::locale::_Getfacet
PUBLIC	??0ctype_base@std@@QEAA@_K@Z			; std::ctype_base::ctype_base
PUBLIC	??1ctype_base@std@@UEAA@XZ			; std::ctype_base::~ctype_base
PUBLIC	??_Gctype_base@std@@UEAAPEAXI@Z			; std::ctype_base::`scalar deleting destructor'
PUBLIC	?widen@?$ctype@D@std@@QEBADD@Z			; std::ctype<char>::widen
PUBLIC	?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z	; std::ctype<char>::widen
PUBLIC	??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z	; std::ctype<char>::ctype<char>
PUBLIC	?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::ctype<char>::_Getcat
PUBLIC	??1?$ctype@D@std@@MEAA@XZ			; std::ctype<char>::~ctype<char>
PUBLIC	?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z	; std::ctype<char>::_Init
PUBLIC	?_Tidy@?$ctype@D@std@@IEAAXXZ			; std::ctype<char>::_Tidy
PUBLIC	?do_tolower@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_tolower
PUBLIC	?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z	; std::ctype<char>::do_tolower
PUBLIC	?do_toupper@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_toupper
PUBLIC	?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z	; std::ctype<char>::do_toupper
PUBLIC	?do_widen@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_widen
PUBLIC	?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z	; std::ctype<char>::do_widen
PUBLIC	?do_narrow@?$ctype@D@std@@MEBADDD@Z		; std::ctype<char>::do_narrow
PUBLIC	?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z	; std::ctype<char>::do_narrow
PUBLIC	??_G?$ctype@D@std@@MEAAPEAXI@Z			; std::ctype<char>::`scalar deleting destructor'
PUBLIC	??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
PUBLIC	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
PUBLIC	?iostream_category@std@@YAAEBVerror_category@1@XZ ; std::iostream_category
PUBLIC	??0error_category@std@@QEAA@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UEAA@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QEBA_NAEBV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UEAAPEAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_code::error_code
PUBLIC	?value@error_code@std@@QEBAHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QEBAAEBVerror_category@2@XZ ; std::error_code::category
PUBLIC	?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
PUBLIC	??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QEBAHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8std@@YA_NAEBVerror_condition@0@0@Z		; std::operator==
PUBLIC	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
PUBLIC	??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
PUBLIC	??1_System_error@std@@UEAA@XZ			; std::_System_error::~_System_error
PUBLIC	??0_System_error@std@@QEAA@AEBV01@@Z		; std::_System_error::_System_error
PUBLIC	??_G_System_error@std@@UEAAPEAXI@Z		; std::_System_error::`scalar deleting destructor'
PUBLIC	??0system_error@std@@QEAA@Verror_code@1@PEBD@Z	; std::system_error::system_error
PUBLIC	??1system_error@std@@UEAA@XZ			; std::system_error::~system_error
PUBLIC	??0system_error@std@@QEAA@AEBV01@@Z		; std::system_error::system_error
PUBLIC	??_Gsystem_error@std@@UEAAPEAXI@Z		; std::system_error::`scalar deleting destructor'
PUBLIC	??0_Generic_error_category@std@@QEAA@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UEBAPEBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UEAA@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UEAAPEAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QEAA@XZ	; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UEBAPEBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UEAA@XZ	; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UEAAPEAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>
PUBLIC	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
PUBLIC	??1failure@ios_base@std@@UEAA@XZ		; std::ios_base::failure::~failure
PUBLIC	??0failure@ios_base@std@@QEAA@AEBV012@@Z	; std::ios_base::failure::failure
PUBLIC	??_Gfailure@ios_base@std@@UEAAPEAXI@Z		; std::ios_base::failure::`scalar deleting destructor'
PUBLIC	?clear@ios_base@std@@QEAAXH_N@Z			; std::ios_base::clear
PUBLIC	?rdstate@ios_base@std@@QEBAHXZ			; std::ios_base::rdstate
PUBLIC	?good@ios_base@std@@QEBA_NXZ			; std::ios_base::good
PUBLIC	?flags@ios_base@std@@QEBAHXZ			; std::ios_base::flags
PUBLIC	?precision@ios_base@std@@QEBA_JXZ		; std::ios_base::precision
PUBLIC	?width@ios_base@std@@QEBA_JXZ			; std::ios_base::width
PUBLIC	?width@ios_base@std@@QEAA_J_J@Z			; std::ios_base::width
PUBLIC	?getloc@ios_base@std@@QEBA?AVlocale@2@XZ	; std::ios_base::getloc
PUBLIC	?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
PUBLIC	?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
PUBLIC	?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
PUBLIC	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
PUBLIC	?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
PUBLIC	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
PUBLIC	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
PUBLIC	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??0StreamParameters@RtAudio@@QEAA@XZ		; RtAudio::StreamParameters::StreamParameters
PUBLIC	?getDeviceCount@RtAudio@@QEAAIXZ		; RtAudio::getDeviceCount
PUBLIC	?getDefaultOutputDevice@RtAudio@@QEAAIXZ	; RtAudio::getDefaultOutputDevice
PUBLIC	?closeStream@RtAudio@@QEAAXXZ			; RtAudio::closeStream
PUBLIC	?startStream@RtAudio@@QEAAXXZ			; RtAudio::startStream
PUBLIC	?isStreamRunning@RtAudio@@QEBA_NXZ		; RtAudio::isStreamRunning
PUBLIC	?isStreamRunning@RtApi@@QEBA_NXZ		; RtApi::isStreamRunning
PUBLIC	?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
PUBLIC	?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
PUBLIC	?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputn
PUBLIC	?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
PUBLIC	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
PUBLIC	?usage@@YAXXZ					; usage
PUBLIC	?output@@YAHPEAX0INI0@Z				; output
PUBLIC	main
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
PUBLIC	?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
PUBLIC	??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
PUBLIC	?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init
PUBLIC	??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
PUBLIC	?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt
PUBLIC	?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
PUBLIC	?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
PUBLIC	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
PUBLIC	?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
PUBLIC	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
PUBLIC	??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor'
PUBLIC	??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >
PUBLIC	??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=
PUBLIC	??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*
PUBLIC	??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++
PUBLIC	?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed
PUBLIC	??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
PUBLIC	?decimal_point@?$numpunct@D@std@@QEBADXZ	; std::numpunct<char>::decimal_point
PUBLIC	?thousands_sep@?$numpunct@D@std@@QEBADXZ	; std::numpunct<char>::thousands_sep
PUBLIC	?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
PUBLIC	?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::falsename
PUBLIC	?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::truename
PUBLIC	??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z	; std::numpunct<char>::numpunct<char>
PUBLIC	?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::numpunct<char>::_Getcat
PUBLIC	??1?$numpunct@D@std@@MEAA@XZ			; std::numpunct<char>::~numpunct<char>
PUBLIC	?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z ; std::numpunct<char>::_Init
PUBLIC	?do_decimal_point@?$numpunct@D@std@@MEBADXZ	; std::numpunct<char>::do_decimal_point
PUBLIC	?do_thousands_sep@?$numpunct@D@std@@MEBADXZ	; std::numpunct<char>::do_thousands_sep
PUBLIC	?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_grouping
PUBLIC	?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_falsename
PUBLIC	?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_truename
PUBLIC	?_Tidy@?$numpunct@D@std@@AEAAXXZ		; std::numpunct<char>::_Tidy
PUBLIC	??_G?$numpunct@D@std@@MEAAPEAXI@Z		; std::numpunct<char>::`scalar deleting destructor'
PUBLIC	??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char * __ptr64>
PUBLIC	??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$?9DD@std@@YA_NAEBV?$allocator@D@0@0@Z	; std::operator!=<char,char>
PUBLIC	??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::operator!=<std::allocator<char>,std::allocator<char> >
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>
PUBLIC	??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>
PUBLIC	??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
PUBLIC	??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z	; std::forward<char * __ptr64 & __ptr64>
PUBLIC	??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::operator==<std::allocator<char>,std::allocator<char> >
PUBLIC	??$?8DD@std@@YA_NAEBV?$allocator@D@0@0@Z	; std::operator==<char,char>
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
PUBLIC	??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z	; std::_Maklocchr<char>
PUBLIC	??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z ; std::numpunct<char>::_Getvals<char>
PUBLIC	??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z ; std::allocator<char>::destroy<char * __ptr64>
PUBLIC	??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception?$AA@	; `string'
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	_TI2?AVruntime_error@std@@
PUBLIC	_CTA2?AVruntime_error@std@@
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVruntime_error@std@@@824
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@824
PUBLIC	??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@	; `string'
PUBLIC	??_C@_05LAPONLG@false?$AA@			; `string'
PUBLIC	??_C@_04LOAJBDKD@true?$AA@			; `string'
PUBLIC	??_7_Facet_base@std@@6B@			; std::_Facet_base::`vftable'
PUBLIC	??_7facet@locale@std@@6B@			; std::locale::facet::`vftable'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7ctype_base@std@@6B@				; std::ctype_base::`vftable'
PUBLIC	??_7?$ctype@D@std@@6B@				; std::ctype<char>::`vftable'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_System_error@std@@6B@			; std::_System_error::`vftable'
PUBLIC	??_C@_02LMMGGCAJ@?3?5?$AA@			; `string'
PUBLIC	??_7system_error@std@@6B@			; std::system_error::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7failure@ios_base@std@@6B@			; std::ios_base::failure::`vftable'
PUBLIC	_TI5?AVfailure@ios_base@std@@
PUBLIC	_CTA5?AVfailure@ios_base@std@@
PUBLIC	??_R0?AVfailure@ios_base@std@@@8		; std::ios_base::failure `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVfailure@ios_base@std@@@840
PUBLIC	??_R0?AVsystem_error@std@@@8			; std::system_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVsystem_error@std@@@840
PUBLIC	??_R0?AV_System_error@std@@@8			; std::_System_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AV_System_error@std@@@840
PUBLIC	??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@	; `string'
PUBLIC	??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ ; `string'
PUBLIC	??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@	; `string'
PUBLIC	??_R0?AVRtAudioError@@@8			; RtAudioError `RTTI Type Descriptor'
PUBLIC	?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vftable'
PUBLIC	??_C@_02BBAHNLBA@?$CFp?$AA@			; `string'
PUBLIC	??_C@_02CLHGNPPK@Lu?$AA@			; `string'
PUBLIC	??_C@_02HIKPPMOK@Ld?$AA@			; `string'
PUBLIC	??_C@_02BDDLJJBK@lu?$AA@			; `string'
PUBLIC	??_C@_02EAOCLKAK@ld?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	??_7?$numpunct@D@std@@6B@			; std::numpunct<char>::`vftable'
PUBLIC	??_C@_02MDKMJEGG@eE?$AA@			; `string'
PUBLIC	??_C@_02OOPEBDOJ@pP?$AA@			; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<char> >::_Psave
PUBLIC	_TI2?AVbad_cast@std@@
PUBLIC	_CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_cast@std@@@824
PUBLIC	?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
PUBLIC	?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
PUBLIC	?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
PUBLIC	?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::numpunct<char> >::_Psave
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Facet_base@std@@6B@			; std::_Facet_base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Facet_base@std@@@8			; std::_Facet_base `RTTI Type Descriptor'
PUBLIC	??_R3_Facet_base@std@@8				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Facet_base@std@@8				; std::_Facet_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Facet_base@std@@8		; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@facet@locale@std@@8		; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVfacet@locale@std@@@8			; std::locale::facet `RTTI Type Descriptor'
PUBLIC	??_R3facet@locale@std@@8			; std::locale::facet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2facet@locale@std@@8			; std::locale::facet::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AU_Crt_new_delete@std@@@8			; std::_Crt_new_delete `RTTI Type Descriptor'
PUBLIC	??_R3_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4facet@locale@std@@6B@			; std::locale::facet::`RTTI Complete Object Locator'
PUBLIC	??_R4ctype_base@std@@6B@			; std::ctype_base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUctype_base@std@@@8			; std::ctype_base `RTTI Type Descriptor'
PUBLIC	??_R3ctype_base@std@@8				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ctype_base@std@@8				; std::ctype_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ctype_base@std@@8			; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ctype@D@std@@6B@				; std::ctype<char>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ctype@D@std@@@8			; std::ctype<char> `RTTI Type Descriptor'
PUBLIC	??_R3?$ctype@D@std@@8				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ctype@D@std@@8				; std::ctype<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ctype@D@std@@8			; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error@std@@6B@			; std::_System_error::`RTTI Complete Object Locator'
PUBLIC	??_R3_System_error@std@@8			; std::_System_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error@std@@8			; std::_System_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error@std@@8		; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4system_error@std@@6B@			; std::system_error::`RTTI Complete Object Locator'
PUBLIC	??_R3system_error@std@@8			; std::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2system_error@std@@8			; std::system_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@system_error@std@@8		; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4failure@ios_base@std@@6B@			; std::ios_base::failure::`RTTI Complete Object Locator'
PUBLIC	??_R3failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@failure@ios_base@std@@8		; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$numpunct@D@std@@6B@			; std::numpunct<char>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$numpunct@D@std@@@8			; std::numpunct<char> `RTTI Type Descriptor'
PUBLIC	??_R3?$numpunct@D@std@@8			; std::numpunct<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$numpunct@D@std@@8			; std::numpunct<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$numpunct@D@std@@8		; std::numpunct<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@4202a05f20000000
EXTRN	_purecall:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	atexit:PROC
EXTRN	_Init_thread_header:PROC
EXTRN	_Init_thread_abort:PROC
EXTRN	_Init_thread_footer:PROC
EXTRN	_invalid_parameter_noinfo_noreturn:PROC
EXTRN	??0_Lockit@std@@QEAA@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QEAA@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	abs:PROC
EXTRN	fabs:PROC
EXTRN	frexp:PROC
EXTRN	calloc:PROC
EXTRN	free:PROC
EXTRN	exit:PROC
EXTRN	atoi:PROC
EXTRN	fclose:PROC
EXTRN	fopen:PROC
EXTRN	fread:PROC
EXTRN	__stdio_common_vsprintf_s:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	strcspn:PROC
EXTRN	strlen:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eruntime_error@std@@UEAAPEAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	??_Ebad_cast@std@@UEAAPEAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	localeconv:PROC
EXTRN	_Getctype:PROC
EXTRN	_Getcvt:PROC
EXTRN	_Tolower:PROC
EXTRN	_Toupper:PROC
EXTRN	?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z:PROC ; std::_Locinfo::_Locinfo_ctor
EXTRN	?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z:PROC	; std::_Locinfo::_Locinfo_dtor
EXTRN	??_E_Facet_base@std@@UEAAPEAXI@Z:PROC		; std::_Facet_base::`vector deleting destructor'
EXTRN	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	??_Efacet@locale@std@@MEAAPEAXI@Z:PROC		; std::locale::facet::`vector deleting destructor'
EXTRN	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	??_Ectype_base@std@@UEAAPEAXI@Z:PROC		; std::ctype_base::`vector deleting destructor'
EXTRN	??_E?$ctype@D@std@@MEAAPEAXI@Z:PROC		; std::ctype<char>::`vector deleting destructor'
EXTRN	??_Eerror_category@std@@UEAAPEAXI@Z:PROC	; std::error_category::`vector deleting destructor'
EXTRN	??_E_System_error@std@@UEAAPEAXI@Z:PROC		; std::_System_error::`vector deleting destructor'
EXTRN	??_Esystem_error@std@@UEAAPEAXI@Z:PROC		; std::system_error::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPEBDH@Z:PROC		; std::_Syserror_map
EXTRN	??_E_Generic_error_category@std@@UEAAPEAXI@Z:PROC ; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UEAAPEAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_Efailure@ios_base@std@@UEAAPEAXI@Z:PROC	; std::ios_base::failure::`vector deleting destructor'
EXTRN	??0RtAudio@@QEAA@W4Api@0@@Z:PROC		; RtAudio::RtAudio
EXTRN	??1RtAudio@@QEAA@XZ:PROC			; RtAudio::~RtAudio
EXTRN	?openStream@RtAudio@@QEAAXPEAUStreamParameters@1@0KIPEAIP6AHPEAX2INI2@Z2PEAUStreamOptions@1@P6AXW4Type@RtAudioError@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z:PROC ; RtAudio::openStream
EXTRN	__imp_Sleep:PROC
EXTRN	??_E?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z:PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vector deleting destructor'
EXTRN	??_E?$numpunct@D@std@@MEAAPEAXI@Z:PROC		; std::numpunct<char>::`vector deleting destructor'
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	_Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	?_Id_cnt@id@locale@std@@0HA:DWORD		; std::locale::id::_Id_cnt
EXTRN	?id@?$ctype@D@std@@2V0locale@2@A:QWORD		; std::ctype<char>::id
EXTRN	?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE ; std::cout
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
EXTRN	_tls_index:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DQ 01H DUP (?) ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DQ 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::ctype<char> >::_Psave
_BSS	ENDS
;	COMDAT ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A
_BSS	SEGMENT
?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A DB 010H DUP (?) ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
_BSS	ENDS
;	COMDAT ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::numpunct<char> >::_Psave
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fabsl DD	imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$fabsl
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$frexpl DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$frexpl
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$_vsprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf_s DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$sprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+56
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$char_traits@D@std@@SA_KPEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+57
	DD	imagerel $unwind$?length@?$char_traits@D@std@@SA_KPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+55
	DD	imagerel $unwind$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@std@@YAPEAX_K0_N@Z DD imagerel $LN10
	DD	imagerel $LN10+248
	DD	imagerel $unwind$?_Allocate@std@@YAPEAX_K0_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Deallocate@std@@YAXPEAX_K1@Z DD imagerel $LN9
	DD	imagerel $LN9+228
	DD	imagerel $unwind$?_Deallocate@std@@YAXPEAX_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+75
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD imagerel $LN4
	DD	imagerel $LN4+86
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+187
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z DD imagerel $LN5
	DD	imagerel $LN5+283
	DD	imagerel $unwind$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+143
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN5
	DD	imagerel $LN5+265
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+268
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN5
	DD	imagerel $LN5+177
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN6
	DD	imagerel $LN6+225
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN5
	DD	imagerel $LN5+165
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN5
	DD	imagerel $LN5+116
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD imagerel $LN5
	DD	imagerel $LN5+287
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z DD imagerel $LN6
	DD	imagerel $LN6+206
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z DD imagerel $LN5
	DD	imagerel $LN5+104
	DD	imagerel $unwind$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+53
	DD	imagerel $unwind$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z DD imagerel $LN5
	DD	imagerel $LN5+101
	DD	imagerel $unwind$?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD imagerel $LN23
	DD	imagerel $LN23+560
	DD	imagerel $unwind$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+90
	DD	imagerel $unwind$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+54
	DD	imagerel $unwind$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN13
	DD	imagerel $LN13+238
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+95
	DD	imagerel $unwind$?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD imagerel $LN7
	DD	imagerel $LN7+262
	DD	imagerel $unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@PEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1runtime_error@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??1runtime_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gruntime_error@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_Gruntime_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_cast@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??1bad_cast@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_cast@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_Gbad_cast@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Locinfo@std@@QEAA@PEBD@Z DD imagerel $LN12
	DD	imagerel $LN12+215
	DD	imagerel $unwind$??0_Locinfo@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD imagerel ?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD imagerel ?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD imagerel ?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	imagerel ?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD imagerel ?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	imagerel ?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA+28
	DD	imagerel $unwind$?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD imagerel ?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	imagerel ?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA+28
	DD	imagerel $unwind$?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD imagerel ?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	imagerel ?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA+28
	DD	imagerel $unwind$?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD imagerel ?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	imagerel ?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA+28
	DD	imagerel $unwind$?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Locinfo@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??1_Locinfo@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ DD imagerel $LN3
	DD	imagerel $LN3+122
	DD	imagerel $unwind$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ DD imagerel $LN3
	DD	imagerel $LN3+19
	DD	imagerel $unwind$?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Yarn@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??1?$_Yarn@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$_Yarn@D@std@@QEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+56
	DD	imagerel $unwind$?c_str@?$_Yarn@D@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Yarn@D@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$?_Tidy@?$_Yarn@D@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Yarn@_W@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??1?$_Yarn@_W@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Facet_base@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_G_Facet_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bid@locale@std@@QEAA_KXZ DD imagerel $LN6
	DD	imagerel $LN6+95
	DD	imagerel $unwind$??Bid@locale@std@@QEAA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0facet@locale@std@@IEAA@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??0facet@locale@std@@IEAA@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0facet@locale@std@@IEAA@_K@Z@4HA DD imagerel ?dtor$0@?0???0facet@locale@std@@IEAA@_K@Z@4HA
	DD	imagerel ?dtor$0@?0???0facet@locale@std@@IEAA@_K@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0facet@locale@std@@IEAA@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1facet@locale@std@@MEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$??1facet@locale@std@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfacet@locale@std@@MEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_Gfacet@locale@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0locale@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??0locale@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1locale@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+120
	DD	imagerel $unwind$??1locale@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@locale@std@@QEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+71
	DD	imagerel $unwind$?c_str@locale@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD imagerel $LN10
	DD	imagerel $LN10+186
	DD	imagerel $unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ctype_base@std@@QEAA@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??0ctype_base@std@@QEAA@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ctype_base@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$??1ctype_base@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gctype_base@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_Gctype_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?widen@?$ctype@D@std@@QEBADD@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?widen@?$ctype@D@std@@QEBADD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+85
	DD	imagerel $unwind$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA DD imagerel ?dtor$0@?0???0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN10
	DD	imagerel $LN10+241
	DD	imagerel $unwind$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+29
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$1@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ctype@D@std@@MEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??1?$ctype@D@std@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$ctype@D@std@@IEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+90
	DD	imagerel $unwind$?_Tidy@?$ctype@D@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_tolower@?$ctype@D@std@@MEBADD@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?do_tolower@?$ctype@D@std@@MEBADD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+90
	DD	imagerel $unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_toupper@?$ctype@D@std@@MEBADD@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?do_toupper@?$ctype@D@std@@MEBADD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+90
	DD	imagerel $unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$ctype@D@std@@MEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_G?$ctype@D@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD imagerel $LN11
	DD	imagerel $LN11+258
	DD	imagerel $unwind$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?iostream_category@std@@YAAEBVerror_category@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?iostream_category@std@@YAAEBVerror_category@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z DD imagerel $LN5
	DD	imagerel $LN5+93
	DD	imagerel $unwind$?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8error_category@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+59
	DD	imagerel $unwind$??8error_category@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gerror_category@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_Gerror_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8std@@YA_NAEBVerror_condition@0@0@Z DD imagerel $LN5
	DD	imagerel $LN5+122
	DD	imagerel $unwind$??8std@@YA_NAEBVerror_condition@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD imagerel $LN8
	DD	imagerel $LN8+224
	DD	imagerel $unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA DD imagerel ?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA DD imagerel ?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA+24
	DD	imagerel $unwind$?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+256
	DD	imagerel $unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA DD imagerel ?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA+27
	DD	imagerel $unwind$?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_System_error@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??1_System_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??0_System_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_System_error@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_G_System_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+167
	DD	imagerel $unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA DD imagerel ?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1system_error@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??1system_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??0system_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gsystem_error@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_Gsystem_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Generic_error_category@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0_Generic_error_category@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD imagerel $LN5
	DD	imagerel $LN5+70
	DD	imagerel $unwind$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Generic_error_category@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??1_Generic_error_category@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Generic_error_category@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_G_Generic_error_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iostream_error_category@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0_Iostream_error_category@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD imagerel $LN7
	DD	imagerel $LN7+112
	DD	imagerel $unwind$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iostream_error_category@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??1_Iostream_error_category@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Iostream_error_category@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_G_Iostream_error_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ DD imagerel $LN5
	DD	imagerel $LN5+120
	DD	imagerel $unwind$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@4HA DD imagerel ?dtor$0@?0???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@4HA
	DD	imagerel ?dtor$0@?0???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@4HA+27
	DD	imagerel $unwind$?dtor$0@?0???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD imagerel $LN4
	DD	imagerel $LN4+88
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1failure@ios_base@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??1failure@ios_base@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@ios_base@std@@QEAAXH_N@Z DD imagerel $LN11
	DD	imagerel $LN11+340
	DD	imagerel $unwind$?clear@ios_base@std@@QEAAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?good@ios_base@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+51
	DD	imagerel $unwind$?good@ios_base@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?width@ios_base@std@@QEAA_J_J@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?width@ios_base@std@@QEAA_J_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+62
	DD	imagerel $unwind$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA DD imagerel ?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA
	DD	imagerel ?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+216
	DD	imagerel $unwind$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DD imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA+27
	DD	imagerel $unwind$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z DD imagerel $LN15
	DD	imagerel $LN15+513
	DD	imagerel $unwind$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA DD imagerel ?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	imagerel ?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA DD imagerel ?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	imagerel ?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA+27
	DD	imagerel $unwind$?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA DD imagerel ?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	imagerel ?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA+71
	DD	imagerel $unwind$?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD imagerel $LN13
	DD	imagerel $LN13+251
	DD	imagerel $unwind$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA DD imagerel ?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	imagerel ?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA DD imagerel ?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	imagerel ?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA+65
	DD	imagerel $unwind$?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD imagerel $LN6
	DD	imagerel $LN6+191
	DD	imagerel $unwind$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA DD imagerel ?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
	DD	imagerel ?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+940
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+71
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD imagerel $LN23
	DD	imagerel $LN23+885
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+71
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getDeviceCount@RtAudio@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$?getDeviceCount@RtAudio@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getDefaultOutputDevice@RtAudio@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$?getDefaultOutputDevice@RtAudio@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?closeStream@RtAudio@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$?closeStream@RtAudio@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?startStream@RtAudio@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$?startStream@RtAudio@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isStreamRunning@RtAudio@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?isStreamRunning@RtAudio@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isStreamRunning@RtApi@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+48
	DD	imagerel $unwind$?isStreamRunning@RtApi@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z DD imagerel $LN5
	DD	imagerel $LN5+122
	DD	imagerel $unwind$?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ DD imagerel $LN5
	DD	imagerel $LN5+56
	DD	imagerel $unwind$?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?usage@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$?usage@@YAXXZ
$pdata$?output@@YAHPEAX0INI0@Z DD imagerel $LN4
	DD	imagerel $LN4+185
	DD	imagerel $unwind$?output@@YAHPEAX0INI0@Z
$pdata$main DD	imagerel $LN25
	DD	imagerel $LN25+760
	DD	imagerel $unwind$main
pdata	ENDS
pdata	SEGMENT
$pdata$main$dtor$0 DD imagerel main$dtor$0
	DD	imagerel main$dtor$0+24
	DD	imagerel $unwind$main$dtor$0
$pdata$main$catch$2 DD imagerel main$catch$2
	DD	imagerel main$catch$2+152
	DD	imagerel $unwind$main$catch$2
$pdata$main$dtor$1 DD imagerel main$dtor$1
	DD	imagerel main$dtor$1+27
	DD	imagerel $unwind$main$dtor$1
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD imagerel $LN25
	DD	imagerel $LN25+942
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA DD imagerel ?dtor$0@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA DD imagerel ?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
	DD	imagerel ?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA+71
	DD	imagerel $unwind$?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+52
	DD	imagerel $unwind$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+151
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+140
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN5
	DD	imagerel $LN5+239
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD imagerel $LN11
	DD	imagerel $LN11+258
	DD	imagerel $unwind$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN10
	DD	imagerel $LN10+241
	DD	imagerel $unwind$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+29
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$1@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+85
	DD	imagerel $unwind$??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA DD imagerel ?dtor$0@?0???0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z DD imagerel $LN3
	DD	imagerel $LN3+112
	DD	imagerel $unwind$?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD imagerel $LN14
	DD	imagerel $LN14+916
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA DD imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA DD imagerel ?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA
	DD	imagerel ?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA+27
	DD	imagerel $unwind$?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z DD imagerel $LN3
	DD	imagerel $LN3+234
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z DD imagerel $LN3
	DD	imagerel $LN3+234
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z DD imagerel $LN3
	DD	imagerel $LN3+234
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z DD imagerel $LN3
	DD	imagerel $LN3+234
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD imagerel $LN9
	DD	imagerel $LN9+604
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA DD imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD imagerel $LN9
	DD	imagerel $LN9+604
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA DD imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z DD imagerel $LN3
	DD	imagerel $LN3+197
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z DD imagerel $LN20
	DD	imagerel $LN20+434
	DD	imagerel $unwind$?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z DD imagerel $LN26
	DD	imagerel $LN26+1995
	DD	imagerel $unwind$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA DD imagerel ?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	imagerel ?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA DD imagerel ?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	imagerel ?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA+27
	DD	imagerel $unwind$?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA DD imagerel ?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	imagerel ?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA+27
	DD	imagerel $unwind$?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA DD imagerel ?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	imagerel ?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA+27
	DD	imagerel $unwind$?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z DD imagerel $LN13
	DD	imagerel $LN13+390
	DD	imagerel $unwind$?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD imagerel $LN22
	DD	imagerel $LN22+1735
	DD	imagerel $unwind$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA DD imagerel ?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	imagerel ?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA DD imagerel ?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	imagerel ?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA+27
	DD	imagerel $unwind$?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA DD imagerel ?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	imagerel ?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA+27
	DD	imagerel $unwind$?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA DD imagerel ?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	imagerel ?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA+27
	DD	imagerel $unwind$?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+129
	DD	imagerel $unwind$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z DD imagerel $LN6
	DD	imagerel $LN6+113
	DD	imagerel $unwind$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z DD imagerel $LN5
	DD	imagerel $LN5+97
	DD	imagerel $unwind$??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD imagerel $LN11
	DD	imagerel $LN11+258
	DD	imagerel $unwind$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?decimal_point@?$numpunct@D@std@@QEBADXZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?decimal_point@?$numpunct@D@std@@QEBADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?thousands_sep@?$numpunct@D@std@@QEBADXZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?thousands_sep@?$numpunct@D@std@@QEBADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD imagerel $LN4
	DD	imagerel $LN4+96
	DD	imagerel $unwind$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA DD imagerel ?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN10
	DD	imagerel $LN10+244
	DD	imagerel $unwind$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+29
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$numpunct@D@std@@MEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??1?$numpunct@D@std@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD imagerel $LN14
	DD	imagerel $LN14+512
	DD	imagerel $unwind$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA DD imagerel ?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA+49
	DD	imagerel $unwind$?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+62
	DD	imagerel $unwind$?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+62
	DD	imagerel $unwind$?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+62
	DD	imagerel $unwind$?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$numpunct@D@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Tidy@?$numpunct@D@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$numpunct@D@std@@MEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_G?$numpunct@D@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+46
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+21
	DD	imagerel $unwind$??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD imagerel $LN7
	DD	imagerel $LN7+156
	DD	imagerel $unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ DD imagerel ??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
	DD	imagerel ??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ+23
	DD	imagerel $unwind$??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ DD imagerel ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
	DD	imagerel ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ+23
	DD	imagerel $unwind$??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??id$initializer$@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZEA@@3P6AXXZEA DQ FLAT:??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; ??id$initializer$@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZEA@@3P6AXXZEA
CRT$XCU	ENDS
;	COMDAT __real@4202a05f20000000
CONST	SEGMENT
__real@4202a05f20000000 DQ 04202a05f20000000r	; 1e+10
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$numpunct@D@std@@8 DD imagerel ??_R0?AV?$numpunct@D@std@@@8 ; std::numpunct<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$numpunct@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R2?$numpunct@D@std@@8 DD imagerel ??_R1A@?0A@EA@?$numpunct@D@std@@8 ; std::numpunct<char>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R3?$numpunct@D@std@@8 DD 00H				; std::numpunct<char>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2?$numpunct@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
data$r	SEGMENT
??_R0?AV?$numpunct@D@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::numpunct<char> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$numpunct@D@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT
??_R4?$numpunct@D@std@@6B@ DD 01H			; std::numpunct<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$numpunct@D@std@@@8
	DD	imagerel ??_R3?$numpunct@D@std@@8
	DD	imagerel ??_R4?$numpunct@D@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD imagerel ??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD 00H ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@'
	DB	'std@@@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ DD 01H ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8
	DD	imagerel ??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
	DD	imagerel ??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@failure@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@failure@ios_base@std@@8 DD imagerel ??_R0?AVfailure@ios_base@std@@@8 ; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2failure@ios_base@std@@8
rdata$r	SEGMENT
??_R2failure@ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@failure@ios_base@std@@8 ; std::ios_base::failure::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@system_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3failure@ios_base@std@@8
rdata$r	SEGMENT
??_R3failure@ios_base@std@@8 DD 00H			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R4failure@ios_base@std@@6B@
rdata$r	SEGMENT
??_R4failure@ios_base@std@@6B@ DD 01H			; std::ios_base::failure::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	imagerel ??_R3failure@ios_base@std@@8
	DD	imagerel ??_R4failure@ios_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD imagerel ??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD imagerel ??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	imagerel ??_R1A@?0A@EA@error_category@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 01H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Iostream_error_category@std@@@8
	DD	imagerel ??_R3_Iostream_error_category@std@@8
	DD	imagerel ??_R4_Iostream_error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD imagerel ??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD imagerel ??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@error_category@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 01H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Generic_error_category@std@@@8
	DD	imagerel ??_R3_Generic_error_category@std@@8
	DD	imagerel ??_R4_Generic_error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@std@@8 DD imagerel ??_R0?AVsystem_error@std@@@8 ; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2system_error@std@@8
rdata$r	SEGMENT
??_R2system_error@std@@8 DD imagerel ??_R1A@?0A@EA@system_error@std@@8 ; std::system_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3system_error@std@@8
rdata$r	SEGMENT
??_R3system_error@std@@8 DD 00H				; std::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4system_error@std@@6B@
rdata$r	SEGMENT
??_R4system_error@std@@6B@ DD 01H			; std::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	imagerel ??_R3system_error@std@@8
	DD	imagerel ??_R4system_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error@std@@8 DD imagerel ??_R0?AV_System_error@std@@@8 ; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error@std@@8
rdata$r	SEGMENT
??_R2_System_error@std@@8 DD imagerel ??_R1A@?0A@EA@_System_error@std@@8 ; std::_System_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_System_error@std@@8
rdata$r	SEGMENT
??_R3_System_error@std@@8 DD 00H			; std::_System_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4_System_error@std@@6B@
rdata$r	SEGMENT
??_R4_System_error@std@@6B@ DD 01H			; std::_System_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	imagerel ??_R3_System_error@std@@8
	DD	imagerel ??_R4_System_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD imagerel ??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD imagerel ??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 01H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVerror_category@std@@@8
	DD	imagerel ??_R3error_category@std@@8
	DD	imagerel ??_R4error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ctype@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ctype@D@std@@8 DD imagerel ??_R0?AV?$ctype@D@std@@@8 ; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT
??_R2?$ctype@D@std@@8 DD imagerel ??_R1A@?0A@EA@?$ctype@D@std@@8 ; std::ctype<char>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ctype_base@std@@8
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT
??_R3?$ctype@D@std@@8 DD 00H				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	imagerel ??_R2?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
data$r	SEGMENT
??_R0?AV?$ctype@D@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ctype<char> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$ctype@D@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT
??_R4?$ctype@D@std@@6B@ DD 01H				; std::ctype<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$ctype@D@std@@@8
	DD	imagerel ??_R3?$ctype@D@std@@8
	DD	imagerel ??_R4?$ctype@D@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ctype_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ctype_base@std@@8 DD imagerel ??_R0?AUctype_base@std@@@8 ; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ctype_base@std@@8
rdata$r	SEGMENT
??_R2ctype_base@std@@8 DD imagerel ??_R1A@?0A@EA@ctype_base@std@@8 ; std::ctype_base::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ctype_base@std@@8
rdata$r	SEGMENT
??_R3ctype_base@std@@8 DD 00H				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
data$r	SEGMENT
??_R0?AUctype_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ctype_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUctype_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4ctype_base@std@@6B@
rdata$r	SEGMENT
??_R4ctype_base@std@@6B@ DD 01H				; std::ctype_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AUctype_base@std@@@8
	DD	imagerel ??_R3ctype_base@std@@8
	DD	imagerel ??_R4ctype_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R4facet@locale@std@@6B@
rdata$r	SEGMENT
??_R4facet@locale@std@@6B@ DD 01H			; std::locale::facet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfacet@locale@std@@@8
	DD	imagerel ??_R3facet@locale@std@@8
	DD	imagerel ??_R4facet@locale@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R2_Crt_new_delete@std@@8 DD imagerel ??_R1A@?0A@EA@_Crt_new_delete@std@@8 ; std::_Crt_new_delete::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R3_Crt_new_delete@std@@8 DD 00H			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU_Crt_new_delete@std@@@8
data$r	SEGMENT
??_R0?AU_Crt_new_delete@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Crt_new_delete `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU_Crt_new_delete@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R2facet@locale@std@@8
rdata$r	SEGMENT
??_R2facet@locale@std@@8 DD imagerel ??_R1A@?0A@EA@facet@locale@std@@8 ; std::locale::facet::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3facet@locale@std@@8
rdata$r	SEGMENT
??_R3facet@locale@std@@8 DD 00H				; std::locale::facet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	imagerel ??_R2facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
data$r	SEGMENT
??_R0?AVfacet@locale@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::locale::facet `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfacet@locale@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@facet@locale@std@@8 DD imagerel ??_R0?AVfacet@locale@std@@@8 ; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Facet_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Facet_base@std@@8 DD imagerel ??_R0?AV_Facet_base@std@@@8 ; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Facet_base@std@@8
rdata$r	SEGMENT
??_R2_Facet_base@std@@8 DD imagerel ??_R1A@?0A@EA@_Facet_base@std@@8 ; std::_Facet_base::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Facet_base@std@@8
rdata$r	SEGMENT
??_R3_Facet_base@std@@8 DD 00H				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Facet_base@std@@@8
data$r	SEGMENT
??_R0?AV_Facet_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Facet_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Facet_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Facet_base@std@@6B@
rdata$r	SEGMENT
??_R4_Facet_base@std@@6B@ DD 01H			; std::_Facet_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Facet_base@std@@@8
	DD	imagerel ??_R3_Facet_base@std@@8
	DD	imagerel ??_R4_Facet_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD imagerel ??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD imagerel ??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 01H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	imagerel ??_R3bad_cast@std@@8
	DD	imagerel ??_R4bad_cast@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD imagerel ??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD imagerel ??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 01H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	imagerel ??_R3runtime_error@std@@8
	DD	imagerel ??_R4runtime_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT _CT??_R0?AVbad_cast@std@@@824
xdata$x	SEGMENT
_CT??_R0?AVbad_cast@std@@@824 DD 00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_cast@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
_CTA2?AVbad_cast@std@@ DD 02H
	DD	imagerel _CT??_R0?AVbad_cast@std@@@824
	DD	imagerel _CT??_R0?AVexception@std@@@824
xdata$x	ENDS
;	COMDAT _TI2?AVbad_cast@std@@
xdata$x	SEGMENT
_TI2?AVbad_cast@std@@ DD 00H
	DD	imagerel ??1bad_cast@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OOPEBDOJ@pP?$AA@
CONST	SEGMENT
??_C@_02OOPEBDOJ@pP?$AA@ DB 'pP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MDKMJEGG@eE?$AA@
CONST	SEGMENT
??_C@_02MDKMJEGG@eE?$AA@ DB 'eE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7?$numpunct@D@std@@6B@
CONST	SEGMENT
??_7?$numpunct@D@std@@6B@ DQ FLAT:??_R4?$numpunct@D@std@@6B@ ; std::numpunct<char>::`vftable'
	DQ	FLAT:??_E?$numpunct@D@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_decimal_point@?$numpunct@D@std@@MEBADXZ
	DQ	FLAT:?do_thousands_sep@?$numpunct@D@std@@MEBADXZ
	DQ	FLAT:?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DQ	FLAT:?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DQ	FLAT:?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
CONST	ENDS
;	COMDAT ??_C@_02EAOCLKAK@ld?$AA@
CONST	SEGMENT
??_C@_02EAOCLKAK@ld?$AA@ DB 'ld', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BDDLJJBK@lu?$AA@
CONST	SEGMENT
??_C@_02BDDLJJBK@lu?$AA@ DB 'lu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HIKPPMOK@Ld?$AA@
CONST	SEGMENT
??_C@_02HIKPPMOK@Ld?$AA@ DB 'Ld', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CLHGNPPK@Lu?$AA@
CONST	SEGMENT
??_C@_02CLHGNPPK@Lu?$AA@ DB 'Lu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BBAHNLBA@?$CFp?$AA@
CONST	SEGMENT
??_C@_02BBAHNLBA@?$CFp?$AA@ DB '%p', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
CONST	SEGMENT
??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ DQ FLAT:??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vftable'
	DQ	FLAT:??_E?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
CONST	ENDS
;	COMDAT ??_R0?AVRtAudioError@@@8
data$r	SEGMENT
??_R0?AVRtAudioError@@@8 DQ FLAT:??_7type_info@@6B@	; RtAudioError `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVRtAudioError@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@ DB 'ios_base::eofbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
CONST	SEGMENT
??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ DB 'ios_base::failbit se'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@ DB 'ios_base::badbit set', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AV_System_error@std@@@840
xdata$x	SEGMENT
_CT??_R0?AV_System_error@std@@@840 DD 00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0_System_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AV_System_error@std@@@8
data$r	SEGMENT
??_R0?AV_System_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_System_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_System_error@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVsystem_error@std@@@840
xdata$x	SEGMENT
_CT??_R0?AVsystem_error@std@@@840 DD 00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0system_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVsystem_error@std@@@8
data$r	SEGMENT
??_R0?AVsystem_error@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::system_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVsystem_error@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVfailure@ios_base@std@@@840
xdata$x	SEGMENT
_CT??_R0?AVfailure@ios_base@std@@@840 DD 00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0failure@ios_base@std@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
data$r	SEGMENT
??_R0?AVfailure@ios_base@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::ios_base::failure `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfailure@ios_base@std@@', 00H
data$r	ENDS
;	COMDAT _CTA5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_CTA5?AVfailure@ios_base@std@@ DD 05H
	DD	imagerel _CT??_R0?AVfailure@ios_base@std@@@840
	DD	imagerel _CT??_R0?AVsystem_error@std@@@840
	DD	imagerel _CT??_R0?AV_System_error@std@@@840
	DD	imagerel _CT??_R0?AVruntime_error@std@@@824
	DD	imagerel _CT??_R0?AVexception@std@@@824
xdata$x	ENDS
;	COMDAT _TI5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_TI5?AVfailure@ios_base@std@@ DD 00H
	DD	imagerel ??1failure@ios_base@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA5?AVfailure@ios_base@std@@
xdata$x	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT
??_7failure@ios_base@std@@6B@ DQ FLAT:??_R4failure@ios_base@std@@6B@ ; std::ios_base::failure::`vftable'
	DQ	FLAT:??_Efailure@ios_base@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DQ FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DQ	FLAT:??_E_Iostream_error_category@std@@UEAAPEAXI@Z
	DQ	FLAT:?name@_Iostream_error_category@std@@UEBAPEBDXZ
	DQ	FLAT:?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DQ FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DQ	FLAT:??_E_Generic_error_category@std@@UEAAPEAXI@Z
	DQ	FLAT:?name@_Generic_error_category@std@@UEBAPEBDXZ
	DQ	FLAT:?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7system_error@std@@6B@
CONST	SEGMENT
??_7system_error@std@@6B@ DQ FLAT:??_R4system_error@std@@6B@ ; std::system_error::`vftable'
	DQ	FLAT:??_Esystem_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5?$AA@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5?$AA@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7_System_error@std@@6B@
CONST	SEGMENT
??_7_System_error@std@@6B@ DQ FLAT:??_R4_System_error@std@@6B@ ; std::_System_error::`vftable'
	DQ	FLAT:??_E_System_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DQ FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DQ	FLAT:??_Eerror_category@std@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7?$ctype@D@std@@6B@
CONST	SEGMENT
??_7?$ctype@D@std@@6B@ DQ FLAT:??_R4?$ctype@D@std@@6B@	; std::ctype<char>::`vftable'
	DQ	FLAT:??_E?$ctype@D@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
	DQ	FLAT:?do_tolower@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
	DQ	FLAT:?do_toupper@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
	DQ	FLAT:?do_widen@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
	DQ	FLAT:?do_narrow@?$ctype@D@std@@MEBADDD@Z
CONST	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT
??_7ctype_base@std@@6B@ DQ FLAT:??_R4ctype_base@std@@6B@ ; std::ctype_base::`vftable'
	DQ	FLAT:??_Ectype_base@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_7facet@locale@std@@6B@
CONST	SEGMENT
??_7facet@locale@std@@6B@ DQ FLAT:??_R4facet@locale@std@@6B@ ; std::locale::facet::`vftable'
	DQ	FLAT:??_Efacet@locale@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_7_Facet_base@std@@6B@
CONST	SEGMENT
??_7_Facet_base@std@@6B@ DQ FLAT:??_R4_Facet_base@std@@6B@ ; std::_Facet_base::`vftable'
	DQ	FLAT:??_E_Facet_base@std@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT
??_C@_04LOAJBDKD@true?$AA@ DB 'true', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT
??_C@_05LAPONLG@false?$AA@ DB 'false', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@
CONST	SEGMENT
??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@ DB 'bad locale name', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@824
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@824 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVruntime_error@std@@@824
xdata$x	SEGMENT
_CT??_R0?AVruntime_error@std@@@824 DD 00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0runtime_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
_CTA2?AVruntime_error@std@@ DD 02H
	DD	imagerel _CT??_R0?AVruntime_error@std@@@824
	DD	imagerel _CT??_R0?AVexception@std@@@824
xdata$x	ENDS
;	COMDAT _TI2?AVruntime_error@std@@
xdata$x	SEGMENT
_TI2?AVruntime_error@std@@ DD 00H
	DD	imagerel ??1runtime_error@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DQ FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DQ	FLAT:??_Ebad_cast@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DQ FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DQ	FLAT:??_Eruntime_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB DQ ffffffffffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception?$AA@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z DD 011201H
	DD	04212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$numpunct@D@std@@MEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$numpunct@D@std@@AEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD imagerel ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	0ffffffffH
	DD	imagerel ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z+138
	DD	00H
	DD	imagerel ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z+363
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA+35
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	01H
	DD	imagerel $tryMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	06H
	DD	imagerel $ip2state$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	060H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 043319H
	DD	0230118H
	DD	060107011H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	0103H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$numpunct@D@std@@MEAA@XZ DD imagerel ??1?$numpunct@D@std@@MEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$numpunct@D@std@@MEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$numpunct@D@std@@MEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$numpunct@D@std@@MEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$numpunct@D@std@@MEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	0ffffffffH
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+82
	DD	00H
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+131
	DD	01H
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+170
	DD	00H
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+179
	DD	01H
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+189
	DD	02H
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+205
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	050H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 021a11H
	DD	0190111H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD imagerel ??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
	DD	0ffffffffH
	DD	imagerel ??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z+49
	DD	00H
	DD	imagerel ??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z+86
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD 012111H
	DD	06218H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?thousands_sep@?$numpunct@D@std@@QEBADXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?decimal_point@?$numpunct@D@std@@QEBADXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD imagerel ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z+31
	DD	00H
	DD	imagerel ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z+238
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
	DD	050H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD 011211H
	DD	0e209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z DD 010d01H
	DD	0620dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z DD 031a01H
	DD	07016421aH
	DD	06015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z DD 031a01H
	DD	07016421aH
	DD	06015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
	DD	0ffffffffH
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+307
	DD	00H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+322
	DD	0ffffffffH
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+360
	DD	01H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+481
	DD	02H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+499
	DD	01H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+531
	DD	03H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+1674
	DD	01H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+1688
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
	DD	00H
	DD	00H
	DD	09H
	DD	imagerel $ip2state$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
	DD	098H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD 043b19H
	DD	03d011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
	DD	01d2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z DD 011801H
	DD	02218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z DD imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
	DD	0ffffffffH
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+485
	DD	00H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+506
	DD	0ffffffffH
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+544
	DD	01H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+668
	DD	02H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+686
	DD	01H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+718
	DD	03H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+1934
	DD	01H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+1948
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
	DD	00H
	DD	00H
	DD	09H
	DD	imagerel $ip2state$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
	DD	0c8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z DD 043b19H
	DD	043011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
	DD	0202H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z DD 042f19H
	DD	015011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z+73
	DD	00H
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z+557
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DD	080H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD 043b19H
	DD	01b011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DD	0caH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z+73
	DD	00H
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z+557
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DD	080H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD 043b19H
	DD	01b011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DD	0caH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z DD 042f19H
	DD	017011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z DD 042f19H
	DD	017011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z DD 042f19H
	DD	017011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z DD 042f19H
	DD	017011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z+241
	DD	00H
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z+256
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z+283
	DD	01H
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z+869
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
	DD	088H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD 043b19H
	DD	02f011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
	DD	0162H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z DD 031a01H
	DD	07016821aH
	DD	06015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z DD imagerel ??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z
	DD	0ffffffffH
	DD	imagerel ??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z+44
	DD	00H
	DD	imagerel ??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z+75
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z DD 011c11H
	DD	06213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	0ffffffffH
	DD	imagerel ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+82
	DD	00H
	DD	imagerel ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+131
	DD	01H
	DD	imagerel ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+167
	DD	00H
	DD	imagerel ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+176
	DD	01H
	DD	imagerel ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+186
	DD	02H
	DD	imagerel ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+202
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	050H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 021a11H
	DD	0190111H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD imagerel ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z+31
	DD	00H
	DD	imagerel ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z+238
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
	DD	050H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD 011211H
	DD	0e209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	0ffffffffH
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+39
	DD	00H
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+229
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	038H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 011219H
	DD	08209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD imagerel ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z+231
	DD	00H
	DD	imagerel ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z+267
	DD	01H
	DD	imagerel ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z+851
	DD	00H
	DD	imagerel ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z+913
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA+13
	DD	02H
	DD	imagerel ?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA+57
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
	DD	00H
	DD	00H
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	08H
	DD	imagerel $ip2state$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	098H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 021d19H
	DD	0150111H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
xdata	ENDS
CONST	SEGMENT
	ORG $+5
$cppxdata$main DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$main
	DD	01H
	DD	imagerel $tryMap$main
	DD	0aH
	DD	imagerel $ip2state$main
	DD	0b8H
	DD	00H
	DD	01H
CONST	ENDS
xdata	SEGMENT
$unwind$?usage@@YAXXZ DD 010401H
	DD	04204H
$unwind$?output@@YAHPEAX0INI0@Z DD 011901H
	DD	08219H
$unwind$main DD	022e19H
	DD	01f0110H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$main
	DD	0e3H
$stateUnwindMap$main DD 0ffffffffH
	DD	imagerel main$dtor$0
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel main$dtor$1
$tryMap$main DD	01H
	DD	01H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$main
$handlerMap$0$main DD 08H
	DD	FLAT:??_R0?AVRtAudioError@@@8
	DD	0a0H
	DD	imagerel main$catch$2
	DD	068H
$ip2state$main DD imagerel main
	DD	0ffffffffH
	DD	imagerel main+100
	DD	00H
	DD	imagerel main+455
	DD	01H
	DD	imagerel main+551
	DD	00H
	DD	imagerel main+722
	DD	0ffffffffH
	DD	imagerel main$catch$2
	DD	00H
	DD	imagerel main$catch$2+13
	DD	02H
	DD	imagerel main$catch$2+61
	DD	03H
	DD	imagerel main$catch$2+116
	DD	02H
	DD	imagerel main$catch$2+129
	DD	00H
$unwind$main$dtor$0 DD 020601H
	DD	050023206H
$unwind$main$catch$2 DD 020a19H
	DD	05006920aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$main
$unwind$main$dtor$1 DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z DD 010d01H
	DD	0820dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isStreamRunning@RtApi@@QEBA_NXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isStreamRunning@RtAudio@@QEBA_NXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?startStream@RtAudio@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?closeStream@RtAudio@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getDefaultOutputDevice@RtAudio@@QEAAIXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getDeviceCount@RtAudio@@QEAAIXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	0ffffffffH
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z+58
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z+191
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z+761
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z+859
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+13
	DD	02H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+57
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	00H
	DD	00H
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	01H
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	08H
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	090H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 021c19H
	DD	0150110H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+231
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+267
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+849
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+911
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+13
	DD	02H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+57
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	00H
	DD	00H
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	01H
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	08H
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	098H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 021d19H
	DD	0150111H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	0ffffffffH
	DD	imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ+70
	DD	00H
	DD	imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ+171
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD 011211H
	DD	08209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	0ffffffffH
	DD	imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z+46
	DD	00H
	DD	imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z+76
	DD	01H
	DD	imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z+181
	DD	00H
	DD	imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z+231
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA+13
	DD	02H
	DD	imagerel ?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA+51
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	imagerel $handlerMap$0$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	00H
	DD	00H
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	01H
	DD	imagerel $tryMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	08H
	DD	imagerel $ip2state$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 011619H
	DD	0c20dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA DD 020a19H
	DD	05006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z DD imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
	DD	0ffffffffH
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z+57
	DD	00H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z+138
	DD	01H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z+153
	DD	00H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z+167
	DD	02H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z+429
	DD	00H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z+488
	DD	0ffffffffH
	DD	imagerel ?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	00H
	DD	imagerel ?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA+57
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	00H
	DD	00H
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
	DD	01H
	DD	imagerel $tryMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
	DD	0aH
	DD	imagerel $ip2state$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
	DD	080H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z DD 041e19H
	DD	01b0112H
	DD	0600a700bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	0ffffffffH
	DD	imagerel ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ+18
	DD	00H
	DD	imagerel ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ+209
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	01H
	DD	imagerel $tryMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	04H
	DD	imagerel $ip2state$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	038H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 011219H
	DD	08209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD imagerel ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	DD	0ffffffffH
	DD	imagerel ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z+52
	DD	00H
	DD	imagerel ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z+67
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	DD	038H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD 011611H
	DD	0a20dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z DD 011201H
	DD	04212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z DD 011201H
	DD	06212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?width@ios_base@std@@QEAA_J_J@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?good@ios_base@std@@QEBA_NXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@ios_base@std@@QEAAXH_N@Z DD 021501H
	DD	01b0115H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1failure@ios_base@std@@UEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ DD imagerel ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
	DD	0ffffffffH
	DD	imagerel ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ+71
	DD	00H
	DD	imagerel ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ+96
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ DD 010d11H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Iostream_error_category@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iostream_error_category@std@@UEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iostream_error_category@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Generic_error_category@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Generic_error_category@std@@UEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Generic_error_category@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gsystem_error@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@AEBV01@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1system_error@std@@UEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z+64
	DD	00H
	DD	imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z+111
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 032d19H
	DD	07011e215H
	DD	06010H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_System_error@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@QEAA@AEBV01@@Z DD 031001H
	DD	0700c4210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_System_error@std@@UEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	0ffffffffH
	DD	imagerel ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z+145
	DD	00H
	DD	imagerel ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z+164
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 043319H
	DD	0170118H
	DD	060107011H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	0a2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	0ffffffffH
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+51
	DD	00H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+124
	DD	01H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+143
	DD	00H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+185
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	038H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 012b19H
	DD	0e213H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8std@@YA_NAEBVerror_condition@0@0@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gerror_category@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8error_category@std@@QEBA_NAEBV01@@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD 011201H
	DD	06212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?iostream_category@std@@YAAEBVerror_category@1@XZ DD imagerel ?iostream_category@std@@YAAEBVerror_category@1@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?iostream_category@std@@YAAEBVerror_category@1@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?iostream_category@std@@YAAEBVerror_category@1@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?iostream_category@std@@YAAEBVerror_category@1@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?iostream_category@std@@YAAEBVerror_category@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD imagerel ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z+31
	DD	00H
	DD	imagerel ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z+238
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
	DD	050H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD 011211H
	DD	0e209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$ctype@D@std@@MEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_toupper@?$ctype@D@std@@MEBADD@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_tolower@?$ctype@D@std@@MEBADD@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$ctype@D@std@@IEAAXXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z DD 031001H
	DD	0700c8210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ctype@D@std@@MEAA@XZ DD imagerel ??1?$ctype@D@std@@MEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$ctype@D@std@@MEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$ctype@D@std@@MEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ctype@D@std@@MEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$ctype@D@std@@MEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	0ffffffffH
	DD	imagerel ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+82
	DD	00H
	DD	imagerel ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+131
	DD	01H
	DD	imagerel ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+167
	DD	00H
	DD	imagerel ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+176
	DD	01H
	DD	imagerel ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+186
	DD	02H
	DD	imagerel ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+202
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	050H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 021a11H
	DD	0190111H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z DD imagerel ??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
	DD	0ffffffffH
	DD	imagerel ??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z+44
	DD	00H
	DD	imagerel ??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z+75
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z DD 011c11H
	DD	06213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?widen@?$ctype@D@std@@QEBADD@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gctype_base@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ctype_base@std@@UEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ctype_base@std@@QEAA@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@locale@std@@QEBAPEBDXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1locale@std@@QEAA@XZ DD imagerel ??1locale@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1locale@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1locale@std@@QEAA@XZ
	DD	038H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1locale@std@@QEAA@XZ DD 011219H
	DD	08209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1locale@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0locale@std@@QEAA@AEBV01@@Z DD imagerel ??0locale@std@@QEAA@AEBV01@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0locale@std@@QEAA@AEBV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0locale@std@@QEAA@AEBV01@@Z
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0locale@std@@QEAA@AEBV01@@Z DD 011719H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0locale@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfacet@locale@std@@MEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1facet@locale@std@@MEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0facet@locale@std@@IEAA@_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0facet@locale@std@@IEAA@_K@Z DD imagerel ??0facet@locale@std@@IEAA@_K@Z
	DD	0ffffffffH
	DD	imagerel ??0facet@locale@std@@IEAA@_K@Z+34
	DD	00H
	DD	imagerel ??0facet@locale@std@@IEAA@_K@Z+71
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0facet@locale@std@@IEAA@_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0facet@locale@std@@IEAA@_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0facet@locale@std@@IEAA@_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0facet@locale@std@@IEAA@_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0facet@locale@std@@IEAA@_K@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0facet@locale@std@@IEAA@_K@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0facet@locale@std@@IEAA@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bid@locale@std@@QEAA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Facet_base@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Yarn@_W@std@@QEAA@XZ DD imagerel ??1?$_Yarn@_W@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Yarn@_W@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Yarn@_W@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Yarn@_W@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Yarn@_W@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Yarn@D@std@@AEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$_Yarn@D@std@@QEBAPEBDXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Yarn@D@std@@QEAA@XZ DD imagerel ??1?$_Yarn@D@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Yarn@D@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Yarn@D@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Yarn@D@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Yarn@D@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ DD 042519H
	DD	0130113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ DD 031001H
	DD	0700cc210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Locinfo@std@@QEAA@XZ DD imagerel ??1_Locinfo@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Locinfo@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Locinfo@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Locinfo@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Locinfo@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Locinfo@std@@QEAA@PEBD@Z DD imagerel ??0_Locinfo@std@@QEAA@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+39
	DD	00H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+57
	DD	01H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+75
	DD	02H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+93
	DD	03H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+111
	DD	04H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+129
	DD	05H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+147
	DD	06H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+205
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	03H
	DD	imagerel ?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	04H
	DD	imagerel ?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	05H
	DD	imagerel ?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z DD 019930522H
	DD	07H
	DD	imagerel $stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z
	DD	00H
	DD	00H
	DD	09H
	DD	imagerel $ip2state$??0_Locinfo@std@@QEAA@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Locinfo@std@@QEAA@PEBD@Z DD 011711H
	DD	0820eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_cast@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@AEBV01@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_cast@std@@UEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gruntime_error@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV01@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1runtime_error@std@@UEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@PEBD@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD 011201H
	DD	08212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	0ffffffffH
	DD	imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z+310
	DD	00H
	DD	imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z+367
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+24
	DD	02H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+74
	DD	01H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+76
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+40
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$1$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$1$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	imagerel $tryMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	0aH
	DD	imagerel $ip2state$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	080H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 022219H
	DD	0130116H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z DD 010e01H
	DD	0a20eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD imagerel ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
	DD	030H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD 011719H
	DD	0820eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 011719H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD imagerel ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
	DD	0ffffffffH
	DD	imagerel ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z+39
	DD	00H
	DD	imagerel ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z+76
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD 011c11H
	DD	06213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD imagerel ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z+34
	DD	00H
	DD	imagerel ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z+65
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z+66
	DD	00H
	DD	imagerel ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z+107
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Deallocate@std@@YAXPEAX_K1@Z DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@std@@YAPEAX_K0_N@Z DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$char_traits@D@std@@SA_KPEBD@Z DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf_s DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$frexpl DD 010f01H
	DD	0420fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fabsl DD 010a01H
	DD	0420aH
xdata	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??id$initializer$@?$numpunct@D@std@@2P6AXXZEA@@3P6AXXZEA DQ FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; ??id$initializer$@?$numpunct@D@std@@2P6AXXZEA@@3P6AXXZEA
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
$T1 = 32
tv73 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z PROC ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00013	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00018	b9 08 00 00 00	 mov	 ecx, 8
  0001d	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00022	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00027	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  0002d	74 21		 je	 SHORT $LN3@construct
  0002f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00034	e8 00 00 00 00	 call	 ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ; std::forward<char * __ptr64 & __ptr64>
  00039	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 89 01	 mov	 QWORD PTR [rcx], rax
  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR $T1[rsp]
  00049	48 89 44 24 28	 mov	 QWORD PTR tv73[rsp], rax
  0004e	eb 09		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00050	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv73[rsp], 0
$LN4@construct:

; 738  : 		}

  00059	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005d	c3		 ret	 0
??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z ENDP ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z PROC	; std::allocator<char>::destroy<char * __ptr64>, COMDAT

; 743  : 		{	// destroy object at _Ptr

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

  0000a	c3		 ret	 0
??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z ENDP	; std::allocator<char>::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 294  : 	__PURE_APPDOMAIN_GLOBAL locale::id numpunct<_Elem>::id;

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	33 d2		 xor	 edx, edx
  00006	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
  0000d	e8 00 00 00 00	 call	 ??0id@locale@std@@QEAA@_K@Z ; std::locale::id::id
  00012	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00016	c3		 ret	 0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id'', COMDAT

; 1593 : 	__PURE_APPDOMAIN_GLOBAL locale::id num_put<_Elem, _OutIt>::id;

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	33 d2		 xor	 edx, edx
  00006	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
  0000d	e8 00 00 00 00	 call	 ??0id@locale@std@@QEAA@_K@Z ; std::locale::id::id
  00012	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00016	c3		 ret	 0
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Ptr$ = 64
_Cvt$ = 72
??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z PROC ; std::numpunct<char>::_Getvals<char>, COMDAT

; 189  : 		{	// get values

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 190  : 		_Dp = _MAKLOCCHR(_Elem2, _Ptr->decimal_point[0], _Cvt);

  00017	b8 01 00 00 00	 mov	 eax, 1
  0001c	48 6b c0 00	 imul	 rax, rax, 0
  00020	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00025	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00028	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Cvt$[rsp]
  0002d	33 d2		 xor	 edx, edx
  0002f	0f b6 0c 01	 movzx	 ecx, BYTE PTR [rcx+rax]
  00033	e8 00 00 00 00	 call	 ??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z ; std::_Maklocchr<char>
  00038	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	88 41 18	 mov	 BYTE PTR [rcx+24], al

; 191  : 		_Kseparator = _MAKLOCCHR(_Elem2, _Ptr->thousands_sep[0], _Cvt);

  00040	b8 01 00 00 00	 mov	 eax, 1
  00045	48 6b c0 00	 imul	 rax, rax, 0
  00049	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0004e	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00052	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Cvt$[rsp]
  00057	33 d2		 xor	 edx, edx
  00059	0f b6 0c 01	 movzx	 ecx, BYTE PTR [rcx+rax]
  0005d	e8 00 00 00 00	 call	 ??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z ; std::_Maklocchr<char>
  00062	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00067	88 41 19	 mov	 BYTE PTR [rcx+25], al

; 192  : 		}

  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006e	c3		 ret	 0
??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z ENDP ; std::numpunct<char>::_Getvals<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Byte$ = 8
__formal$ = 16
__formal$ = 24
??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocchr<char>, COMDAT

; 686  : 	{	// convert char to _Elem using _Cvtvec

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl

; 687  : 	return ((_Elem)(unsigned char)_Byte);

  0000e	0f b6 44 24 08	 movzx	 eax, BYTE PTR _Byte$[rsp]

; 688  : 	}

  00013	c3		 ret	 0
??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocchr<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Count$ = 32
_Ptrnext$1 = 40
_Ptrdest$ = 48
_Ptr$ = 80
__formal$ = 88
__formal$ = 96
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 719  : 	{	// convert C string to _Elem sequence using _Cvtvec

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 720  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00013	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00018	e8 00 00 00 00	 call	 strlen
  0001d	48 ff c0	 inc	 rax
  00020	48 89 44 24 20	 mov	 QWORD PTR _Count$[rsp], rax

; 721  : 
; 722  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Count$[rsp]
  0002f	e8 00 00 00 00	 call	 calloc
  00034	48 89 44 24 30	 mov	 QWORD PTR _Ptrdest$[rsp], rax

; 723  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 724  : 
; 725  : 	if (!_Ptrdest)

  00039	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Ptrdest$[rsp], 0
  0003f	75 05		 jne	 SHORT $LN5@Maklocstr

; 726  : 		_Xbad_alloc();

  00041	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 727  : 
; 728  :  #pragma warning(push)
; 729  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 730  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR _Ptrdest$[rsp]
  0004b	48 89 44 24 28	 mov	 QWORD PTR _Ptrnext$1[rsp], rax
  00050	eb 27		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  00052	48 8b 44 24 20	 mov	 rax, QWORD PTR _Count$[rsp]
  00057	48 ff c8	 dec	 rax
  0005a	48 89 44 24 20	 mov	 QWORD PTR _Count$[rsp], rax
  0005f	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptrnext$1[rsp]
  00064	48 ff c0	 inc	 rax
  00067	48 89 44 24 28	 mov	 QWORD PTR _Ptrnext$1[rsp], rax
  0006c	48 8b 44 24 50	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00071	48 ff c0	 inc	 rax
  00074	48 89 44 24 50	 mov	 QWORD PTR _Ptr$[rsp], rax
$LN4@Maklocstr:
  00079	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0007f	76 11		 jbe	 SHORT $LN3@Maklocstr

; 731  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  00081	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptrnext$1[rsp]
  00086	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0008b	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0008e	88 08		 mov	 BYTE PTR [rax], cl
  00090	eb c0		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 732  :  #pragma warning(pop)
; 733  : 
; 734  : 	return (_Ptrdest);

  00092	48 8b 44 24 30	 mov	 rax, QWORD PTR _Ptrdest$[rsp]
$LN6@Maklocstr:

; 735  : 	}

  00097	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0009b	c3		 ret	 0
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
__formal$ = 24
??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1038 : 	{	// (don't) propagate on container copy assignment

  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1039 : 	}

  0000f	c3		 ret	 0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?8DD@std@@YA_NAEBV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
??$?8DD@std@@YA_NAEBV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT

; 795  : 	{	// test for allocator equality

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 796  : 	return (true);

  0000a	b0 01		 mov	 al, 1

; 797  : 	}

  0000c	c3		 ret	 0
??$?8DD@std@@YA_NAEBV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z PROC ; std::operator==<std::allocator<char>,std::allocator<char> >, COMDAT

; 1016 : 	{	// test for allocator equality

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1017 : 	return (static_cast<const _Ty&>(_Left)

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Left$[rsp]
  00018	e8 00 00 00 00	 call	 ??$?8DD@std@@YA_NAEBV?$allocator@D@0@0@Z ; std::operator==<char,char>

; 1018 : 		== static_cast<const _Other&>(_Right));
; 1019 : 	}

  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ENDP ; std::operator==<std::allocator<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00013	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00018	e8 00 00 00 00	 call	 ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ; std::forward<char * __ptr64 & __ptr64>
  0001d	4c 8b c0	 mov	 r8, rax
  00020	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002a	e8 00 00 00 00	 call	 ??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>

; 858  : 		}

  0002f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00033	c3		 ret	 0
??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z PROC		; std::forward<char * __ptr64 & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

  0000a	c3		 ret	 0
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ENDP		; std::forward<char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>, COMDAT

; 863  : 		{	// destroy object at _Ptr

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 864  : 		_Al.destroy(_Ptr);

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00018	e8 00 00 00 00	 call	 ??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z ; std::allocator<char>::destroy<char * __ptr64>

; 865  : 		}

  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

  0000a	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 289  : 		{	// construct from forwarded values

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  00012	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00017	e8 00 00 00 00	 call	 ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
  0001c	48 8b d0	 mov	 rdx, rax
  0001f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00024	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 290  : 		}

  00036	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003f	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

  0000a	c3		 ret	 0
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ
text$yd	SEGMENT
??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ PROC ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static'', COMDAT
$LN3:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
  0000b	e8 00 00 00 00	 call	 ??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>
  00010	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00014	c3		 ret	 0
??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ENDP ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ PROC ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>, COMDAT

; 686  : 		{	// intentionally do nothing

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 687  : 		}

  00005	c3		 ret	 0
??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ENDP ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
tv74 = 40
this$ = 64
??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ PROC ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>, COMDAT

; 680  : 	_Immortalizer()

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 681  : 		{	// construct _Ty inside _Storage
; 682  : 		::new (static_cast<void *>(&_Storage)) _Ty();

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b d0	 mov	 rdx, rax
  00011	b9 10 00 00 00	 mov	 ecx, 16
  00016	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0001b	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00020	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  00026	74 11		 je	 SHORT $LN3@Immortaliz
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iostream_error_category@std@@QEAA@XZ ; std::_Iostream_error_category::_Iostream_error_category
  00032	48 89 44 24 28	 mov	 QWORD PTR tv74[rsp], rax
  00037	eb 09		 jmp	 SHORT $LN4@Immortaliz
$LN3@Immortaliz:
  00039	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv74[rsp], 0
$LN4@Immortaliz:

; 683  : 		}

  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004b	c3		 ret	 0
??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ENDP ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z
_TEXT	SEGMENT
_Tag$ = 32
_Left$ = 64
_Right$ = 72
??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1043 : 	{	// (maybe) propagate on container copy assignment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1044 : 	typename _Alty::propagate_on_container_copy_assignment _Tag;
; 1045 : 	_Pocca(_Left, _Right, _Tag);

  0000e	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR _Tag$[rsp]
  00014	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  0001e	e8 00 00 00 00	 call	 ??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >

; 1046 : 	}

  00023	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00027	c3		 ret	 0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z
_TEXT	SEGMENT
tv69 = 32
_Left$ = 64
_Right$ = 72
??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z PROC ; std::operator!=<std::allocator<char>,std::allocator<char> >, COMDAT

; 1025 : 	{	// test for allocator inequality

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1026 : 	return (!(_Left == _Right));

  0000e	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00013	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  00018	e8 00 00 00 00	 call	 ??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::operator==<std::allocator<char>,std::allocator<char> >
  0001d	0f b6 c0	 movzx	 eax, al
  00020	85 c0		 test	 eax, eax
  00022	75 0a		 jne	 SHORT $LN3@operator
  00024	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0002c	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  00036	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1027 : 	}

  0003b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003f	c3		 ret	 0
??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ENDP ; std::operator!=<std::allocator<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?9DD@std@@YA_NAEBV?$allocator@D@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?9DD@std@@YA_NAEBV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT

; 803  : 	{	// test for allocator inequality

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 804  : 	return (false);

  0000a	32 c0		 xor	 al, al

; 805  : 	}

  0000c	c3		 ret	 0
??$?9DD@std@@YA_NAEBV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

  00013	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00018	e8 00 00 00 00	 call	 ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ; std::forward<char * __ptr64 & __ptr64>
  0001d	4c 8b c0	 mov	 r8, rax
  00020	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

  0002f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00033	c3		 ret	 0
??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 739  : 	{	// do nothing for plain pointers

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 740  : 	return (_Ptr);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 741  : 	}

  0000a	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>, COMDAT

; 1002 : 		{	// destroy object at _Ptr

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>

; 1004 : 		}

  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char * __ptr64>, COMDAT

; 724  : 	{	// return address of _Val

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 725  : 	return (__builtin_addressof(_Val));

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR _Val$[rsp]

; 726  : 	}

  0000a	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 280  : 		{	// construct from forwarded values

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
  00017	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b c8	 mov	 rcx, rax
  0001f	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 281  : 		}

  00024	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >, COMDAT

; 952  : 		{	// construct from a related allocator

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

  0000e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00013	e8 00 00 00 00	 call	 ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
  00018	48 8b d0	 mov	 rdx, rax
  0001b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00020	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@AEBV01@@Z ; std::allocator<char>::allocator<char>

; 953  : 		}

  00025	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	c3		 ret	 0
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$numpunct@D@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$numpunct@D@std@@MEAAPEAXI@Z PROC			; std::numpunct<char>::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1?$numpunct@D@std@@MEAA@XZ ; std::numpunct<char>::~numpunct<char>
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_G?$numpunct@D@std@@MEAAPEAXI@Z ENDP			; std::numpunct<char>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Tidy@?$numpunct@D@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$numpunct@D@std@@AEAAXXZ PROC			; std::numpunct<char>::_Tidy, COMDAT

; 257  : 		{	// free all storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 258  : 		_CSTD free((void *)_Grouping);

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00012	e8 00 00 00 00	 call	 free

; 259  : 		_CSTD free((void *)_Falsename);

  00017	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
  00020	e8 00 00 00 00	 call	 free

; 260  : 		_CSTD free((void *)_Truename);

  00025	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002a	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  0002e	e8 00 00 00 00	 call	 free

; 261  : 		}

  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	c3		 ret	 0
?_Tidy@?$numpunct@D@std@@AEAAXXZ ENDP			; std::numpunct<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_truename, COMDAT

; 251  : 		{	// return name for true

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 252  : 		return (string_type(_Truename));

  00016	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0001b	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  0001f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00024	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00029	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  0002d	83 c8 01	 or	 eax, 1
  00030	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00034	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 253  : 		}

  00039	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003d	c3		 ret	 0
?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_truename
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_falsename, COMDAT

; 246  : 		{	// return name for false

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 247  : 		return (string_type(_Falsename));

  00016	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0001b	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  0001f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00024	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00029	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  0002d	83 c8 01	 or	 eax, 1
  00030	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00034	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 248  : 		}

  00039	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003d	c3		 ret	 0
?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_falsename
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_grouping, COMDAT

; 241  : 		{	// return grouping string

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 242  : 		return (string(_Grouping));

  00016	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0001b	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  0001f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00024	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00029	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  0002d	83 c8 01	 or	 eax, 1
  00030	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00034	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 243  : 		}

  00039	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003d	c3		 ret	 0
?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_grouping
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_thousands_sep@?$numpunct@D@std@@MEBADXZ
_TEXT	SEGMENT
this$ = 8
?do_thousands_sep@?$numpunct@D@std@@MEBADXZ PROC	; std::numpunct<char>::do_thousands_sep, COMDAT

; 236  : 		{	// return thousands separator

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 237  : 		return (_Kseparator);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	0f b6 40 19	 movzx	 eax, BYTE PTR [rax+25]

; 238  : 		}

  0000e	c3		 ret	 0
?do_thousands_sep@?$numpunct@D@std@@MEBADXZ ENDP	; std::numpunct<char>::do_thousands_sep
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_decimal_point@?$numpunct@D@std@@MEBADXZ
_TEXT	SEGMENT
this$ = 8
?do_decimal_point@?$numpunct@D@std@@MEBADXZ PROC	; std::numpunct<char>::do_decimal_point, COMDAT

; 231  : 		{	// return decimal point

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 232  : 		return (_Dp);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	0f b6 40 18	 movzx	 eax, BYTE PTR [rax+24]

; 233  : 		}

  0000e	c3		 ret	 0
?do_decimal_point@?$numpunct@D@std@@MEBADXZ ENDP	; std::numpunct<char>::do_decimal_point
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
_TEXT	SEGMENT
tv81 = 32
_Ptr$ = 40
tv149 = 48
tv150 = 56
tv151 = 64
tv152 = 72
tv153 = 80
tv154 = 88
$T1 = 96
$T2 = 112
_Cvt$ = 160
$T3 = 208
__$ArrayPad$ = 256
this$ = 304
_Lobj$ = 312
_Isdef$ = 320
?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z PROC	; std::numpunct<char>::_Init, COMDAT

; 202  : 		{	// initialize from _Lobj

$LN14:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00018	48 c7 44 24 60
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00021	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00028	48 33 c4	 xor	 rax, rsp
  0002b	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 203  : 		const lconv *_Ptr = _Lobj._Getlconv();

  00033	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  0003b	e8 00 00 00 00	 call	 ?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ ; std::_Locinfo::_Getlconv
  00040	48 89 44 24 28	 mov	 QWORD PTR _Ptr$[rsp], rax

; 204  : 		_Locinfo::_Cvtvec _Cvt = _Lobj._Getcvt();	// conversion information

  00045	48 8d 94 24 a0
	00 00 00	 lea	 rdx, QWORD PTR _Cvt$[rsp]
  0004d	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  00055	e8 00 00 00 00	 call	 ?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ ; std::_Locinfo::_Getcvt

; 205  : 
; 206  : 		_Grouping = 0;

  0005a	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00062	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 207  : 		_Falsename = 0;

  0006a	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00072	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0

; 208  : 		_Truename = 0;

  0007a	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 c7 40 28 00
	00 00 00	 mov	 QWORD PTR [rax+40], 0

; 209  : 
; 210  : 		_TRY_BEGIN
; 211  : 		_Grouping = _MAKLOCSTR(char, _Isdef ? "" : _Ptr->grouping,

  0008a	0f b6 84 24 40
	01 00 00	 movzx	 eax, BYTE PTR _Isdef$[rsp]
  00092	85 c0		 test	 eax, eax
  00094	74 0e		 je	 SHORT $LN6@Init
  00096	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  0009d	48 89 44 24 20	 mov	 QWORD PTR tv81[rsp], rax
  000a2	eb 0e		 jmp	 SHORT $LN7@Init
$LN6@Init:
  000a4	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000a9	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000ad	48 89 44 24 20	 mov	 QWORD PTR tv81[rsp], rax
$LN7@Init:
  000b2	48 8d 94 24 d0
	00 00 00	 lea	 rdx, QWORD PTR $T3[rsp]
  000ba	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  000c2	e8 00 00 00 00	 call	 ?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ ; std::_Locinfo::_Getcvt
  000c7	48 89 44 24 30	 mov	 QWORD PTR tv149[rsp], rax
  000cc	4c 8b 44 24 30	 mov	 r8, QWORD PTR tv149[rsp]
  000d1	33 d2		 xor	 edx, edx
  000d3	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv81[rsp]
  000d8	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000dd	48 89 44 24 38	 mov	 QWORD PTR tv150[rsp], rax
  000e2	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ea	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv150[rsp]
  000ef	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 212  : 			_Lobj._Getcvt());
; 213  : 		_Falsename = _MAKLOCSTR(_Elem, _Lobj._Getfalse(), _Cvt);

  000f3	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  000fb	e8 00 00 00 00	 call	 ?_Getfalse@_Locinfo@std@@QEBAPEBDXZ ; std::_Locinfo::_Getfalse
  00100	48 89 44 24 40	 mov	 QWORD PTR tv151[rsp], rax
  00105	4c 8d 84 24 a0
	00 00 00	 lea	 r8, QWORD PTR _Cvt$[rsp]
  0010d	33 d2		 xor	 edx, edx
  0010f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv151[rsp]
  00114	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00119	48 89 44 24 48	 mov	 QWORD PTR tv152[rsp], rax
  0011e	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00126	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv152[rsp]
  0012b	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 214  : 		_Truename = _MAKLOCSTR(_Elem, _Lobj._Gettrue(), _Cvt);

  0012f	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  00137	e8 00 00 00 00	 call	 ?_Gettrue@_Locinfo@std@@QEBAPEBDXZ ; std::_Locinfo::_Gettrue
  0013c	48 89 44 24 50	 mov	 QWORD PTR tv153[rsp], rax
  00141	4c 8d 84 24 a0
	00 00 00	 lea	 r8, QWORD PTR _Cvt$[rsp]
  00149	33 d2		 xor	 edx, edx
  0014b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv153[rsp]
  00150	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00155	48 89 44 24 58	 mov	 QWORD PTR tv154[rsp], rax
  0015a	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00162	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv154[rsp]
  00167	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx
  0016b	eb 00		 jmp	 SHORT $LN10@Init
$LN11@Init:
$LN10@Init:

; 215  : 		_CATCH_ALL
; 216  : 		_Tidy();
; 217  : 		_RERAISE;
; 218  : 		_CATCH_END
; 219  : 
; 220  : 		if (_Isdef)

  0016d	0f b6 84 24 40
	01 00 00	 movzx	 eax, BYTE PTR _Isdef$[rsp]
  00175	85 c0		 test	 eax, eax
  00177	74 3a		 je	 SHORT $LN3@Init

; 221  : 			{	// apply defaults for required facets
; 222  : //			_Grouping = _MAKLOCSTR(char, "", _Cvt);
; 223  : 			_Dp = _MAKLOCCHR(_Elem, '.', _Cvt);

  00179	4c 8d 84 24 a0
	00 00 00	 lea	 r8, QWORD PTR _Cvt$[rsp]
  00181	33 d2		 xor	 edx, edx
  00183	b1 2e		 mov	 cl, 46			; 0000002eH
  00185	e8 00 00 00 00	 call	 ??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z ; std::_Maklocchr<char>
  0018a	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00192	88 41 18	 mov	 BYTE PTR [rcx+24], al

; 224  : 			_Kseparator = _MAKLOCCHR(_Elem, ',', _Cvt);

  00195	4c 8d 84 24 a0
	00 00 00	 lea	 r8, QWORD PTR _Cvt$[rsp]
  0019d	33 d2		 xor	 edx, edx
  0019f	b1 2c		 mov	 cl, 44			; 0000002cH
  001a1	e8 00 00 00 00	 call	 ??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z ; std::_Maklocchr<char>
  001a6	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ae	88 41 19	 mov	 BYTE PTR [rcx+25], al

; 225  : 			}
; 226  : 		else

  001b1	eb 33		 jmp	 SHORT $LN5@Init
$LN3@Init:

; 227  : 			_Getvals((_Elem)0, _Ptr, _Cvt);

  001b3	48 8d 44 24 70	 lea	 rax, QWORD PTR $T2[rsp]
  001b8	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Cvt$[rsp]
  001c0	48 8b f8	 mov	 rdi, rax
  001c3	48 8b f1	 mov	 rsi, rcx
  001c6	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  001cb	f3 a4		 rep movsb
  001cd	4c 8d 4c 24 70	 lea	 r9, QWORD PTR $T2[rsp]
  001d2	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Ptr$[rsp]
  001d7	33 d2		 xor	 edx, edx
  001d9	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001e1	e8 00 00 00 00	 call	 ??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z ; std::numpunct<char>::_Getvals<char>
$LN5@Init:

; 228  : 		}

  001e6	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ee	48 33 cc	 xor	 rcx, rsp
  001f1	e8 00 00 00 00	 call	 __security_check_cookie
  001f6	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  001fd	5f		 pop	 rdi
  001fe	5e		 pop	 rsi
  001ff	c3		 ret	 0
$LN12@Init:
?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z ENDP	; std::numpunct<char>::_Init
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv81 = 32
_Ptr$ = 40
tv149 = 48
tv150 = 56
tv151 = 64
tv152 = 72
tv153 = 80
tv154 = 88
$T1 = 96
$T2 = 112
_Cvt$ = 160
$T3 = 208
__$ArrayPad$ = 256
this$ = 304
_Lobj$ = 312
_Isdef$ = 320
?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA PROC ; `std::numpunct<char>::_Init'::`1'::catch$0

; 215  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z$0:

; 215  : 		_CATCH_ALL
; 216  : 		_Tidy();

  0000d	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00014	e8 00 00 00 00	 call	 ?_Tidy@?$numpunct@D@std@@AEAAXXZ ; std::numpunct<char>::_Tidy

; 215  : 		_CATCH_ALL
; 216  : 		_Tidy();
; 217  : 		_RERAISE;

  00019	33 d2		 xor	 edx, edx
  0001b	33 c9		 xor	 ecx, ecx
  0001d	e8 00 00 00 00	 call	 _CxxThrowException
  00022	90		 npad	 1

; 215  : 		_CATCH_ALL
; 216  : 		_Tidy();
; 217  : 		_RERAISE;
; 218  : 		_CATCH_END

  00023	48 8d 05 00 00
	00 00		 lea	 rax, $LN11@catch$0
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
  00030	cc		 int	 3
?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA ENDP ; `std::numpunct<char>::_Init'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv81 = 32
_Ptr$ = 40
tv149 = 48
tv150 = 56
tv151 = 64
tv152 = 72
tv153 = 80
tv154 = 88
$T1 = 96
$T2 = 112
_Cvt$ = 160
$T3 = 208
__$ArrayPad$ = 256
this$ = 304
_Lobj$ = 312
_Isdef$ = 320
?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA PROC ; `std::numpunct<char>::_Init'::`1'::catch$0

; 215  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z$0:

; 216  : 		_Tidy();

  0000d	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00014	e8 00 00 00 00	 call	 ?_Tidy@?$numpunct@D@std@@AEAAXXZ ; std::numpunct<char>::_Tidy

; 217  : 		_RERAISE;

  00019	33 d2		 xor	 edx, edx
  0001b	33 c9		 xor	 ecx, ecx
  0001d	e8 00 00 00 00	 call	 _CxxThrowException
  00022	90		 npad	 1

; 218  : 		_CATCH_END

  00023	48 8d 05 00 00
	00 00		 lea	 rax, $LN11@catch$0
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
  00030	cc		 int	 3
?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA ENDP ; `std::numpunct<char>::_Init'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??1?$numpunct@D@std@@MEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$numpunct@D@std@@MEAA@XZ PROC			; std::numpunct<char>::~numpunct<char>, COMDAT

; 175  : 		{	// destroy the object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$numpunct@D@std@@6B@
  0001e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 176  : 		_Tidy();

  00021	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00026	e8 00 00 00 00	 call	 ?_Tidy@?$numpunct@D@std@@AEAAXXZ ; std::numpunct<char>::_Tidy
  0002b	90		 npad	 1

; 177  : 		}

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
  00036	90		 npad	 1
  00037	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003b	c3		 ret	 0
??1?$numpunct@D@std@@MEAA@XZ ENDP			; std::numpunct<char>::~numpunct<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv90 = 48
tv133 = 56
tv129 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::numpunct<char>::_Getcat, COMDAT

; 166  : 		{	// return locale category mask and construct standard facet

$LN10:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00011	48 c7 44 24 50
	fe ff ff ff	 mov	 QWORD PTR $T4[rsp], -2
  0001a	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 167  : 		if (_Ppf != 0 && *_Ppf == 0)

  00022	48 83 bc 24 d0
	00 00 00 00	 cmp	 QWORD PTR _Ppf$[rsp], 0
  0002b	0f 84 b6 00 00
	00		 je	 $LN2@Getcat
  00031	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Ppf$[rsp]
  00039	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003d	0f 85 a4 00 00
	00		 jne	 $LN2@Getcat

; 168  : 			*_Ppf = new numpunct<_Elem>(

  00043	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00048	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0004d	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  00052	48 83 7c 24 28
	00		 cmp	 QWORD PTR $T2[rsp], 0
  00058	74 50		 je	 SHORT $LN4@Getcat
  0005a	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR _Ploc$[rsp]
  00062	e8 00 00 00 00	 call	 ?c_str@locale@std@@QEBAPEBDXZ ; std::locale::c_str
  00067	48 8b d0	 mov	 rdx, rax
  0006a	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T5[rsp]
  0006f	e8 00 00 00 00	 call	 ??0_Locinfo@std@@QEAA@PEBD@Z ; std::_Locinfo::_Locinfo
  00074	48 89 44 24 38	 mov	 QWORD PTR tv133[rsp], rax
  00079	48 8b 44 24 38	 mov	 rax, QWORD PTR tv133[rsp]
  0007e	48 89 44 24 40	 mov	 QWORD PTR tv129[rsp], rax
  00083	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00087	83 c8 01	 or	 eax, 1
  0008a	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0008e	41 b1 01	 mov	 r9b, 1
  00091	45 33 c0	 xor	 r8d, r8d
  00094	48 8b 54 24 40	 mov	 rdx, QWORD PTR tv129[rsp]
  00099	48 8b 4c 24 28	 mov	 rcx, QWORD PTR $T2[rsp]
  0009e	e8 00 00 00 00	 call	 ??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z ; std::numpunct<char>::numpunct<char>
  000a3	48 89 44 24 30	 mov	 QWORD PTR tv90[rsp], rax
  000a8	eb 09		 jmp	 SHORT $LN5@Getcat
$LN4@Getcat:
  000aa	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR tv90[rsp], 0
$LN5@Getcat:
  000b3	48 8b 44 24 30	 mov	 rax, QWORD PTR tv90[rsp]
  000b8	48 89 44 24 48	 mov	 QWORD PTR $T3[rsp], rax
  000bd	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Ppf$[rsp]
  000c5	48 8b 4c 24 48	 mov	 rcx, QWORD PTR $T3[rsp]
  000ca	48 89 08	 mov	 QWORD PTR [rax], rcx
  000cd	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  000d1	83 e0 01	 and	 eax, 1
  000d4	85 c0		 test	 eax, eax
  000d6	74 0f		 je	 SHORT $LN2@Getcat
  000d8	83 64 24 20 fe	 and	 DWORD PTR $T1[rsp], -2
  000dd	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T5[rsp]
  000e2	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN2@Getcat:

; 169  : 				_Locinfo(_Ploc->c_str()), 0, true);
; 170  : 		return (_X_NUMERIC);

  000e7	b8 04 00 00 00	 mov	 eax, 4

; 171  : 		}

  000ec	48 81 c4 c8 00
	00 00		 add	 rsp, 200		; 000000c8H
  000f3	c3		 ret	 0
?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::numpunct<char>::_Getcat
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv90 = 48
tv133 = 56
tv129 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000e	48 8b 4d 28	 mov	 rcx, QWORD PTR $T2[rbp]
  00012	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$0
$T1 = 32
$T2 = 40
tv90 = 48
tv133 = 56
tv129 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$1
  0001d	40 55		 push	 rbp
  0001f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00023	48 8b ea	 mov	 rbp, rdx
  00026	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00029	83 e0 01	 and	 eax, 1
  0002c	85 c0		 test	 eax, eax
  0002e	74 0d		 je	 SHORT $LN8@dtor$1
  00030	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00034	48 8d 4d 58	 lea	 rcx, QWORD PTR $T5[rbp]
  00038	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN8@dtor$1:
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv90 = 48
tv133 = 56
tv129 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000e	48 8b 4d 28	 mov	 rcx, QWORD PTR $T2[rbp]
  00012	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv90 = 48
tv133 = 56
tv129 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$1
  0001d	40 55		 push	 rbp
  0001f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00023	48 8b ea	 mov	 rbp, rdx
  00026	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00029	83 e0 01	 and	 eax, 1
  0002c	85 c0		 test	 eax, eax
  0002e	74 0d		 je	 SHORT $LN8@dtor$1
  00030	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00034	48 8d 4d 58	 lea	 rcx, QWORD PTR $T5[rbp]
  00038	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN8@dtor$1:
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
_Isdef$ = 88
??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z PROC	; std::numpunct<char>::numpunct<char>, COMDAT

; 160  : 		{	// construct from specified locale

$LN4:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00018	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 159  : 		: locale::facet(_Refs)

  00021	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Refs$[rsp]
  00026	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002b	e8 00 00 00 00	 call	 ??0facet@locale@std@@IEAA@_K@Z ; std::locale::facet::facet
  00030	90		 npad	 1

; 160  : 		{	// construct from specified locale

  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$numpunct@D@std@@6B@
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 161  : 		_Init(_Lobj, _Isdef);

  00040	44 0f b6 44 24
	58		 movzx	 r8d, BYTE PTR _Isdef$[rsp]
  00046	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Lobj$[rsp]
  0004b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z ; std::numpunct<char>::_Init
  00055	90		 npad	 1

; 162  : 		}

  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005f	c3		 ret	 0
??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z ENDP	; std::numpunct<char>::numpunct<char>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
_Isdef$ = 88
?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA PROC ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA ENDP ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
_Isdef$ = 88
?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA PROC ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA ENDP ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::truename, COMDAT

; 143  : 		{	// return name for true

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 144  : 		return (do_truename());

  00016	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 8b 54 24 48	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00028	ff 50 38	 call	 QWORD PTR [rax+56]
  0002b	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  0002f	83 c8 01	 or	 eax, 1
  00032	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00036	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 145  : 		}

  0003b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003f	c3		 ret	 0
?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::truename
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::falsename, COMDAT

; 138  : 		{	// return name for false

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 139  : 		return (do_falsename());

  00016	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 8b 54 24 48	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00028	ff 50 30	 call	 QWORD PTR [rax+48]
  0002b	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  0002f	83 c8 01	 or	 eax, 1
  00032	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00036	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 140  : 		}

  0003b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003f	c3		 ret	 0
?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::falsename
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::grouping, COMDAT

; 133  : 		{	// return grouping string

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 134  : 		return (do_grouping());

  00016	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 8b 54 24 48	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00028	ff 50 28	 call	 QWORD PTR [rax+40]
  0002b	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  0002f	83 c8 01	 or	 eax, 1
  00032	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00036	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 135  : 		}

  0003b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003f	c3		 ret	 0
?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::grouping
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?thousands_sep@?$numpunct@D@std@@QEBADXZ
_TEXT	SEGMENT
this$ = 48
?thousands_sep@?$numpunct@D@std@@QEBADXZ PROC		; std::numpunct<char>::thousands_sep, COMDAT

; 128  : 		{	// return thousands separator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 129  : 		return (do_thousands_sep());

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00016	ff 50 20	 call	 QWORD PTR [rax+32]

; 130  : 		}

  00019	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001d	c3		 ret	 0
?thousands_sep@?$numpunct@D@std@@QEBADXZ ENDP		; std::numpunct<char>::thousands_sep
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?decimal_point@?$numpunct@D@std@@QEBADXZ
_TEXT	SEGMENT
this$ = 48
?decimal_point@?$numpunct@D@std@@QEBADXZ PROC		; std::numpunct<char>::decimal_point, COMDAT

; 123  : 		{	// return decimal point

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 124  : 		return (do_decimal_point());

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00016	ff 50 18	 call	 QWORD PTR [rax+24]

; 125  : 		}

  00019	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001d	c3		 ret	 0
?decimal_point@?$numpunct@D@std@@QEBADXZ ENDP		; std::numpunct<char>::decimal_point
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Psave$1 = 32
_Pf$2 = 40
_Lock$3 = 48
_Pfmod$4 = 56
_Id$5 = 64
$T6 = 72
$T7 = 80
$T8 = 88
_Loc$ = 128
??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::numpunct<char> >, COMDAT

; 553  : 	{	// get facet reference from locale

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00009	48 c7 44 24 50
	fe ff ff ff	 mov	 QWORD PTR $T7[rsp], -2

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

  00012	33 d2		 xor	 edx, edx
  00014	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  00019	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  0001e	90		 npad	 1

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

  0001f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::numpunct<char> >::_Psave
  00026	48 89 44 24 20	 mov	 QWORD PTR _Psave$1[rsp], rax

; 562  : 
; 563  : 		size_t _Id = _Facet::id;

  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
  00032	e8 00 00 00 00	 call	 ??Bid@locale@std@@QEAA_KXZ ; std::locale::id::operator unsigned __int64
  00037	48 89 44 24 40	 mov	 QWORD PTR _Id$5[rsp], rax

; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);

  0003c	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Id$5[rsp]
  00041	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Loc$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet
  0004e	48 89 44 24 28	 mov	 QWORD PTR _Pf$2[rsp], rax

; 565  : 
; 566  : 		if (_Pf != 0)

  00053	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pf$2[rsp], 0
  00059	74 05		 je	 SHORT $LN2@use_facet
  0005b	e9 84 00 00 00	 jmp	 $LN3@use_facet
$LN2@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

  00060	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Psave$1[rsp], 0
  00066	74 0c		 je	 SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  0006d	48 89 44 24 28	 mov	 QWORD PTR _Pf$2[rsp], rax
  00072	eb 70		 jmp	 SHORT $LN3@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

  00074	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Loc$[rsp]
  0007c	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _Psave$1[rsp]
  00081	e8 00 00 00 00	 call	 ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::numpunct<char>::_Getcat
  00086	48 83 f8 ff	 cmp	 rax, -1
  0008a	75 1e		 jne	 SHORT $LN6@use_facet

; 571  : 
; 572  :  #if _HAS_EXCEPTIONS
; 573  : 
; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

  0008c	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T8[rsp]
  00091	e8 00 00 00 00	 call	 ??0bad_cast@std@@QEAA@XZ ; std::bad_cast::bad_cast
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
  0009d	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T8[rsp]
  000a2	e8 00 00 00 00	 call	 _CxxThrowException
  000a7	90		 npad	 1

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else

  000a8	eb 3a		 jmp	 SHORT $LN3@use_facet
$LN6@use_facet:

; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

  000aa	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  000af	48 89 44 24 28	 mov	 QWORD PTR _Pf$2[rsp], rax

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

  000b4	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  000b9	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB, rax ; std::_Facetptr<std::numpunct<char> >::_Psave

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;

  000c0	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  000c5	48 89 44 24 38	 mov	 QWORD PTR _Pfmod$4[rsp], rax

; 586  : 			_Pfmod->_Incref();

  000ca	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pfmod$4[rsp]
  000cf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d2	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pfmod$4[rsp]
  000d7	ff 50 08	 call	 QWORD PTR [rax+8]

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

  000da	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pfmod$4[rsp]
  000df	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
$LN3@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

  000e4	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pf$2[rsp]
  000e9	48 89 44 24 48	 mov	 QWORD PTR $T6[rsp], rax
  000ee	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  000f3	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  000f8	48 8b 44 24 48	 mov	 rax, QWORD PTR $T6[rsp]

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

  000fd	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00101	c3		 ret	 0
$LN10@use_facet:
??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::numpunct<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Psave$1 = 32
_Pf$2 = 40
_Lock$3 = 48
_Pfmod$4 = 56
_Id$5 = 64
$T6 = 72
$T7 = 80
$T8 = 88
_Loc$ = 128
?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 30	 lea	 rcx, QWORD PTR _Lock$3[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Psave$1 = 32
_Pf$2 = 40
_Lock$3 = 48
_Pfmod$4 = 56
_Id$5 = 64
$T6 = 72
$T7 = 80
$T8 = 88
_Loc$ = 128
?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 30	 lea	 rcx, QWORD PTR _Lock$3[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed, COMDAT

; 661  : 		{	// return true if any stores failed

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 662  : 		return (_Failed);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	0f b6 00	 movzx	 eax, BYTE PTR [rax]

; 663  : 		}

  0000d	c3		 ret	 0
?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++, COMDAT

; 651  : 		{	// pretend to preincrement

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 652  : 		return (*this);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]

; 653  : 		}

  0000a	c3		 ret	 0
??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*, COMDAT

; 646  : 		{	// pretend to get designated element

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 647  : 		return (*this);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]

; 648  : 		}

  0000a	c3		 ret	 0
??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 36
this$ = 64
_Right$ = 72
??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=, COMDAT

; 637  : 		{	// store element and increment

$LN5:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 638  : 		if (_Strbuf == 0
; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0000d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00012	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00017	74 36		 je	 SHORT $LN3@operator
  00019	0f b6 54 24 48	 movzx	 edx, BYTE PTR _Right$[rsp]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
  0002c	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00030	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00035	89 44 24 24	 mov	 DWORD PTR $T2[rsp], eax
  00039	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0003e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR $T2[rsp]
  00043	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  00048	0f b6 c0	 movzx	 eax, al
  0004b	85 c0		 test	 eax, eax
  0004d	74 08		 je	 SHORT $LN2@operator
$LN3@operator:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0004f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00054	c6 00 01	 mov	 BYTE PTR [rax], 1
$LN2@operator:

; 642  : 		return (*this);

  00057	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 643  : 		}

  0005c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00060	c3		 ret	 0
??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Sb$ = 16
??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >, COMDAT

; 628  : 		{	// construct from stream buffer _Sb

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 627  : 		: _Failed(false), _Strbuf(_Sb)

  0000a	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000f	c6 00 00	 mov	 BYTE PTR [rax], 0
  00012	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 8b 4c 24 10	 mov	 rcx, QWORD PTR _Sb$[rsp]
  0001c	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 629  : 		}

  00020	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00025	c3		 ret	 0
??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 10 00 00 00	 mov	 edx, 16
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
_Dest$ = 80
_Ch$ = 88
_Count$ = 96
?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep, COMDAT

; 1583 : 		{	// put _Count * _Ch to _Dest

$LN6:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1584 : 		for (; 0 < _Count; --_Count, (void)++_Dest)

  0001a	eb 17		 jmp	 SHORT $LN4@Rep
$LN2@Rep:
  0001c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Count$[rsp]
  00021	48 ff c8	 dec	 rax
  00024	48 89 44 24 60	 mov	 QWORD PTR _Count$[rsp], rax
  00029	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0002e	e8 00 00 00 00	 call	 ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++
$LN4@Rep:
  00033	48 83 7c 24 60
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00039	76 19		 jbe	 SHORT $LN3@Rep

; 1585 : 			*_Dest = _Ch;

  0003b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00040	e8 00 00 00 00	 call	 ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*
  00045	0f b6 54 24 58	 movzx	 edx, BYTE PTR _Ch$[rsp]
  0004a	48 8b c8	 mov	 rcx, rax
  0004d	e8 00 00 00 00	 call	 ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=
  00052	eb c8		 jmp	 SHORT $LN2@Rep
$LN3@Rep:

; 1586 : 		return (_Dest);

  00054	48 8b 7c 24 48	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  00059	48 8b 74 24 50	 mov	 rsi, QWORD PTR _Dest$[rsp]
  0005e	b9 10 00 00 00	 mov	 ecx, 16
  00063	f3 a4		 rep movsb
  00065	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1587 : 		}

  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006e	5f		 pop	 rdi
  0006f	5e		 pop	 rsi
  00070	c3		 ret	 0
?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
_Dest$ = 80
_Ptr$ = 88
_Count$ = 96
?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put, COMDAT

; 1575 : 		{	// put [_Ptr, _Ptr + _Count) to _Dest

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1576 : 		for (; 0 < _Count; --_Count, (void)++_Dest, ++_Ptr)

  0001a	eb 24		 jmp	 SHORT $LN4@Put
$LN2@Put:
  0001c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Count$[rsp]
  00021	48 ff c8	 dec	 rax
  00024	48 89 44 24 60	 mov	 QWORD PTR _Count$[rsp], rax
  00029	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0002e	e8 00 00 00 00	 call	 ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++
  00033	48 8b 44 24 58	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00038	48 ff c0	 inc	 rax
  0003b	48 89 44 24 58	 mov	 QWORD PTR _Ptr$[rsp], rax
$LN4@Put:
  00040	48 83 7c 24 60
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00046	76 1c		 jbe	 SHORT $LN3@Put

; 1577 : 			*_Dest = *_Ptr;

  00048	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0004d	e8 00 00 00 00	 call	 ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*
  00052	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00057	0f b6 11	 movzx	 edx, BYTE PTR [rcx]
  0005a	48 8b c8	 mov	 rcx, rax
  0005d	e8 00 00 00 00	 call	 ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=
  00062	eb b8		 jmp	 SHORT $LN2@Put
$LN3@Put:

; 1578 : 		return (_Dest);

  00064	48 8b 7c 24 48	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  00069	48 8b 74 24 50	 mov	 rsi, QWORD PTR _Dest$[rsp]
  0006e	b9 10 00 00 00	 mov	 ecx, 16
  00073	f3 a4		 rep movsb
  00075	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1579 : 		}

  0007a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007e	5f		 pop	 rdi
  0007f	5e		 pop	 rsi
  00080	c3		 ret	 0
?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
_TEXT	SEGMENT
_Kseparator$1 = 48
_Prefix$ = 56
_Pg$ = 64
_Adjustfield$ = 72
tv69 = 76
_Fillcount$ = 80
_Punct_fac$ = 88
tv196 = 96
tv273 = 104
tv266 = 112
_Ctype_fac$ = 120
tv132 = 128
tv269 = 136
tv249 = 144
$T2 = 152
$T3 = 160
$T4 = 176
$T5 = 192
$T6 = 208
$T7 = 224
$T8 = 240
$T9 = 256
$T10 = 272
$T11 = 288
$T12 = 304
$T13 = 320
$T14 = 336
$T15 = 352
$T16 = 368
$T17 = 384
_Groupstring$ = 400
_Grouping$ = 432
__$ArrayPad$ = 464
this$ = 512
__$ReturnUdt$ = 520
_Dest$ = 528
_Iosbase$ = 536
_Fill$ = 544
_Buf$ = 552
_Count$ = 560
?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput, COMDAT

; 1515 : 		{	// put formatted integer to _Dest

$LN22:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec e8 01
	00 00		 sub	 rsp, 488		; 000001e8H
  0001d	48 c7 84 24 98
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T2[rsp], -2
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 d0
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1516 : 		_DEBUG_POINTER(_Dest);
; 1517 : 		size_t _Prefix = 0 < _Count && (*_Buf == '+' || *_Buf == '-')

  0003b	48 83 bc 24 30
	02 00 00 00	 cmp	 QWORD PTR _Count$[rsp], 0
  00044	76 2a		 jbe	 SHORT $LN14@Iput
  00046	48 8b 84 24 28
	02 00 00	 mov	 rax, QWORD PTR _Buf$[rsp]
  0004e	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00051	83 f8 2b	 cmp	 eax, 43			; 0000002bH
  00054	74 10		 je	 SHORT $LN13@Iput
  00056	48 8b 84 24 28
	02 00 00	 mov	 rax, QWORD PTR _Buf$[rsp]
  0005e	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00061	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00064	75 0a		 jne	 SHORT $LN14@Iput
$LN13@Iput:
  00066	c7 44 24 4c 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0006e	eb 08		 jmp	 SHORT $LN15@Iput
$LN14@Iput:
  00070	c7 44 24 4c 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN15@Iput:
  00078	48 63 44 24 4c	 movsxd	 rax, DWORD PTR tv69[rsp]
  0007d	48 89 44 24 38	 mov	 QWORD PTR _Prefix$[rsp], rax

; 1518 : 			? 1 : 0;
; 1519 : 		if ((_Iosbase.flags() & ios_base::basefield) == ios_base::hex
; 1520 : 			&& _Prefix + 2 <= _Count && _Buf[_Prefix] == '0'
; 1521 : 			&& (_Buf[_Prefix + 1] == 'x' || _Buf[_Prefix + 1] == 'X'))

  00082	48 8b 8c 24 18
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  0008a	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  0008f	25 00 0e 00 00	 and	 eax, 3584		; 00000e00H
  00094	3d 00 08 00 00	 cmp	 eax, 2048		; 00000800H
  00099	75 74		 jne	 SHORT $LN4@Iput
  0009b	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  000a0	48 83 c0 02	 add	 rax, 2
  000a4	48 3b 84 24 30
	02 00 00	 cmp	 rax, QWORD PTR _Count$[rsp]
  000ac	77 61		 ja	 SHORT $LN4@Iput
  000ae	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  000b3	48 8b 8c 24 28
	02 00 00	 mov	 rcx, QWORD PTR _Buf$[rsp]
  000bb	48 03 c8	 add	 rcx, rax
  000be	48 8b c1	 mov	 rax, rcx
  000c1	0f be 00	 movsx	 eax, BYTE PTR [rax]
  000c4	83 f8 30	 cmp	 eax, 48			; 00000030H
  000c7	75 46		 jne	 SHORT $LN4@Iput
  000c9	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  000ce	48 8b 8c 24 28
	02 00 00	 mov	 rcx, QWORD PTR _Buf$[rsp]
  000d6	48 03 c8	 add	 rcx, rax
  000d9	48 8b c1	 mov	 rax, rcx
  000dc	0f be 40 01	 movsx	 eax, BYTE PTR [rax+1]
  000e0	83 f8 78	 cmp	 eax, 120		; 00000078H
  000e3	74 1c		 je	 SHORT $LN5@Iput
  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  000ea	48 8b 8c 24 28
	02 00 00	 mov	 rcx, QWORD PTR _Buf$[rsp]
  000f2	48 03 c8	 add	 rcx, rax
  000f5	48 8b c1	 mov	 rax, rcx
  000f8	0f be 40 01	 movsx	 eax, BYTE PTR [rax+1]
  000fc	83 f8 58	 cmp	 eax, 88			; 00000058H
  000ff	75 0e		 jne	 SHORT $LN4@Iput
$LN5@Iput:

; 1522 : 			_Prefix += 2;

  00101	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  00106	48 83 c0 02	 add	 rax, 2
  0010a	48 89 44 24 38	 mov	 QWORD PTR _Prefix$[rsp], rax
$LN4@Iput:

; 1523 : 
; 1524 : 		const ctype<_Elem>& _Ctype_fac =

  0010f	48 8d 94 24 a0
	00 00 00	 lea	 rdx, QWORD PTR $T3[rsp]
  00117	48 8b 8c 24 18
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  0011f	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  00124	48 89 44 24 68	 mov	 QWORD PTR tv273[rsp], rax
  00129	48 8b 44 24 68	 mov	 rax, QWORD PTR tv273[rsp]
  0012e	48 89 44 24 70	 mov	 QWORD PTR tv266[rsp], rax
  00133	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv266[rsp]
  00138	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
  0013d	48 89 44 24 78	 mov	 QWORD PTR _Ctype_fac$[rsp], rax
  00142	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T3[rsp]
  0014a	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale

; 1525 : 			_USE(_Iosbase.getloc(), ctype<_Elem>);
; 1526 : 		_Mystr _Groupstring(_Count, _Elem(0));	// reserve space

  0014f	45 33 c0	 xor	 r8d, r8d
  00152	48 8b 94 24 30
	02 00 00	 mov	 rdx, QWORD PTR _Count$[rsp]
  0015a	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  00162	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00167	90		 npad	 1

; 1527 : 		_Ctype_fac.widen(&_Buf[0], &_Buf[_Count], &_Groupstring[0]);

  00168	33 d2		 xor	 edx, edx
  0016a	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  00172	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  00177	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  0017f	48 8b 94 24 28
	02 00 00	 mov	 rdx, QWORD PTR _Buf$[rsp]
  00187	48 03 d1	 add	 rdx, rcx
  0018a	48 8b ca	 mov	 rcx, rdx
  0018d	ba 01 00 00 00	 mov	 edx, 1
  00192	48 6b d2 00	 imul	 rdx, rdx, 0
  00196	4c 8b 84 24 28
	02 00 00	 mov	 r8, QWORD PTR _Buf$[rsp]
  0019e	4c 03 c2	 add	 r8, rdx
  001a1	49 8b d0	 mov	 rdx, r8
  001a4	4c 8b c8	 mov	 r9, rax
  001a7	4c 8b c1	 mov	 r8, rcx
  001aa	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Ctype_fac$[rsp]
  001af	e8 00 00 00 00	 call	 ?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z ; std::ctype<char>::widen

; 1528 : 
; 1529 : 		const _Mypunct& _Punct_fac = _USE(_Iosbase.getloc(), _Mypunct);

  001b4	48 8d 94 24 b0
	00 00 00	 lea	 rdx, QWORD PTR $T4[rsp]
  001bc	48 8b 8c 24 18
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  001c4	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  001c9	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv132[rsp], rax
  001d1	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR tv132[rsp]
  001d9	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv269[rsp], rax
  001e1	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR tv269[rsp]
  001e9	e8 00 00 00 00	 call	 ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
  001ee	48 89 44 24 58	 mov	 QWORD PTR _Punct_fac$[rsp], rax
  001f3	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR $T4[rsp]
  001fb	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale

; 1530 : 		const string _Grouping = _Punct_fac.grouping();

  00200	48 8d 94 24 b0
	01 00 00	 lea	 rdx, QWORD PTR _Grouping$[rsp]
  00208	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Punct_fac$[rsp]
  0020d	e8 00 00 00 00	 call	 ?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
  00212	90		 npad	 1

; 1531 : 		const char *_Pg = &_Grouping[0];

  00213	33 d2		 xor	 edx, edx
  00215	48 8d 8c 24 b0
	01 00 00	 lea	 rcx, QWORD PTR _Grouping$[rsp]
  0021d	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  00222	48 89 44 24 40	 mov	 QWORD PTR _Pg$[rsp], rax

; 1532 : 		if (*_Pg != CHAR_MAX && '\0' < *_Pg)

  00227	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pg$[rsp]
  0022c	0f be 00	 movsx	 eax, BYTE PTR [rax]
  0022f	83 f8 7f	 cmp	 eax, 127		; 0000007fH
  00232	0f 84 c8 00 00
	00		 je	 $LN6@Iput
  00238	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pg$[rsp]
  0023d	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00240	85 c0		 test	 eax, eax
  00242	0f 8e b8 00 00
	00		 jle	 $LN6@Iput

; 1533 : 			{	// grouping specified, add thousands separators
; 1534 : 			const _Elem _Kseparator = _Punct_fac.thousands_sep();

  00248	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Punct_fac$[rsp]
  0024d	e8 00 00 00 00	 call	 ?thousands_sep@?$numpunct@D@std@@QEBADXZ ; std::numpunct<char>::thousands_sep
  00252	88 44 24 30	 mov	 BYTE PTR _Kseparator$1[rsp], al
$LN2@Iput:

; 1535 : 			while (*_Pg != CHAR_MAX && '\0' < *_Pg
; 1536 : 				&& (size_t)*_Pg < _Count - _Prefix)

  00256	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pg$[rsp]
  0025b	0f be 00	 movsx	 eax, BYTE PTR [rax]
  0025e	83 f8 7f	 cmp	 eax, 127		; 0000007fH
  00261	0f 84 99 00 00
	00		 je	 $LN6@Iput
  00267	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pg$[rsp]
  0026c	0f be 00	 movsx	 eax, BYTE PTR [rax]
  0026f	85 c0		 test	 eax, eax
  00271	0f 8e 89 00 00
	00		 jle	 $LN6@Iput
  00277	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pg$[rsp]
  0027c	48 0f be 00	 movsx	 rax, BYTE PTR [rax]
  00280	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Prefix$[rsp]
  00285	48 8b 94 24 30
	02 00 00	 mov	 rdx, QWORD PTR _Count$[rsp]
  0028d	48 2b d1	 sub	 rdx, rcx
  00290	48 8b ca	 mov	 rcx, rdx
  00293	48 3b c1	 cmp	 rax, rcx
  00296	73 68		 jae	 SHORT $LN6@Iput

; 1537 : 				{	// insert thousands separator
; 1538 : 				_Count -= *_Pg;

  00298	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pg$[rsp]
  0029d	48 0f be 00	 movsx	 rax, BYTE PTR [rax]
  002a1	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  002a9	48 2b c8	 sub	 rcx, rax
  002ac	48 8b c1	 mov	 rax, rcx
  002af	48 89 84 24 30
	02 00 00	 mov	 QWORD PTR _Count$[rsp], rax

; 1539 : 				_Groupstring.insert(_Count, 1, _Kseparator);

  002b7	44 0f b6 4c 24
	30		 movzx	 r9d, BYTE PTR _Kseparator$1[rsp]
  002bd	41 b8 01 00 00
	00		 mov	 r8d, 1
  002c3	48 8b 94 24 30
	02 00 00	 mov	 rdx, QWORD PTR _Count$[rsp]
  002cb	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  002d3	e8 00 00 00 00	 call	 ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert

; 1540 : 				if ('\0' < _Pg[1])

  002d8	b8 01 00 00 00	 mov	 eax, 1
  002dd	48 6b c0 01	 imul	 rax, rax, 1
  002e1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Pg$[rsp]
  002e6	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  002ea	85 c0		 test	 eax, eax
  002ec	7e 0d		 jle	 SHORT $LN7@Iput

; 1541 : 					++_Pg;	// not last group, advance

  002ee	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pg$[rsp]
  002f3	48 ff c0	 inc	 rax
  002f6	48 89 44 24 40	 mov	 QWORD PTR _Pg$[rsp], rax
$LN7@Iput:

; 1542 : 				}

  002fb	e9 56 ff ff ff	 jmp	 $LN2@Iput
$LN6@Iput:

; 1543 : 			}
; 1544 : 
; 1545 : 		_Count = _Groupstring.size();

  00300	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  00308	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0030d	48 89 84 24 30
	02 00 00	 mov	 QWORD PTR _Count$[rsp], rax

; 1546 : 		size_t _Fillcount = _Iosbase.width() <= 0
; 1547 : 			|| (size_t)_Iosbase.width() <= _Count

  00315	48 8b 8c 24 18
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  0031d	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  00322	48 85 c0	 test	 rax, rax
  00325	7e 33		 jle	 SHORT $LN16@Iput
  00327	48 8b 8c 24 18
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  0032f	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  00334	48 3b 84 24 30
	02 00 00	 cmp	 rax, QWORD PTR _Count$[rsp]
  0033c	76 1c		 jbe	 SHORT $LN16@Iput
  0033e	48 8b 8c 24 18
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00346	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  0034b	48 2b 84 24 30
	02 00 00	 sub	 rax, QWORD PTR _Count$[rsp]
  00353	48 89 44 24 60	 mov	 QWORD PTR tv196[rsp], rax
  00358	eb 09		 jmp	 SHORT $LN17@Iput
$LN16@Iput:
  0035a	48 c7 44 24 60
	00 00 00 00	 mov	 QWORD PTR tv196[rsp], 0
$LN17@Iput:
  00363	48 8b 44 24 60	 mov	 rax, QWORD PTR tv196[rsp]
  00368	48 89 44 24 50	 mov	 QWORD PTR _Fillcount$[rsp], rax

; 1548 : 				? 0 : (size_t)_Iosbase.width() - _Count;
; 1549 : 
; 1550 : 		ios_base::fmtflags _Adjustfield =
; 1551 : 			_Iosbase.flags() & ios_base::adjustfield;

  0036d	48 8b 8c 24 18
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00375	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  0037a	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  0037f	89 44 24 48	 mov	 DWORD PTR _Adjustfield$[rsp], eax

; 1552 : 		if (_Adjustfield != ios_base::left
; 1553 : 			&& _Adjustfield != ios_base::internal)

  00383	83 7c 24 48 40	 cmp	 DWORD PTR _Adjustfield$[rsp], 64 ; 00000040H
  00388	0f 84 dd 00 00
	00		 je	 $LN8@Iput
  0038e	81 7c 24 48 00
	01 00 00	 cmp	 DWORD PTR _Adjustfield$[rsp], 256 ; 00000100H
  00396	0f 84 cf 00 00
	00		 je	 $LN8@Iput

; 1554 : 			{	// put leading fill
; 1555 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  0039c	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  003a4	48 8b f8	 mov	 rdi, rax
  003a7	48 8b b4 24 10
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  003af	b9 10 00 00 00	 mov	 ecx, 16
  003b4	f3 a4		 rep movsb
  003b6	48 8b 44 24 50	 mov	 rax, QWORD PTR _Fillcount$[rsp]
  003bb	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  003c0	44 0f b6 8c 24
	20 02 00 00	 movzx	 r9d, BYTE PTR _Fill$[rsp]
  003c9	4c 8d 84 24 c0
	00 00 00	 lea	 r8, QWORD PTR $T5[rsp]
  003d1	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR $T12[rsp]
  003d9	48 8b 8c 24 00
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  003e1	e8 00 00 00 00	 call	 ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
  003e6	48 8b bc 24 10
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  003ee	48 8b f0	 mov	 rsi, rax
  003f1	b9 10 00 00 00	 mov	 ecx, 16
  003f6	f3 a4		 rep movsb

; 1556 : 			_Fillcount = 0;

  003f8	48 c7 44 24 50
	00 00 00 00	 mov	 QWORD PTR _Fillcount$[rsp], 0

; 1557 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00401	33 d2		 xor	 edx, edx
  00403	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  0040b	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  00410	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  00418	48 8b f9	 mov	 rdi, rcx
  0041b	48 8b b4 24 10
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  00423	b9 10 00 00 00	 mov	 ecx, 16
  00428	f3 a4		 rep movsb
  0042a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Prefix$[rsp]
  0042f	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00434	4c 8b c8	 mov	 r9, rax
  00437	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T6[rsp]
  0043f	48 8d 94 24 40
	01 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  00447	48 8b 8c 24 00
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0044f	e8 00 00 00 00	 call	 ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
  00454	48 8b bc 24 10
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  0045c	48 8b f0	 mov	 rsi, rax
  0045f	b9 10 00 00 00	 mov	 ecx, 16
  00464	f3 a4		 rep movsb
  00466	e9 3f 01 00 00	 jmp	 $LN9@Iput
$LN8@Iput:

; 1558 : 			}
; 1559 : 		else if (_Adjustfield == ios_base::internal)

  0046b	81 7c 24 48 00
	01 00 00	 cmp	 DWORD PTR _Adjustfield$[rsp], 256 ; 00000100H
  00473	0f 85 cc 00 00
	00		 jne	 $LN10@Iput

; 1560 : 			{	// put internal fill
; 1561 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00479	33 d2		 xor	 edx, edx
  0047b	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  00483	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  00488	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00490	48 8b f9	 mov	 rdi, rcx
  00493	48 8b b4 24 10
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  0049b	b9 10 00 00 00	 mov	 ecx, 16
  004a0	f3 a4		 rep movsb
  004a2	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Prefix$[rsp]
  004a7	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  004ac	4c 8b c8	 mov	 r9, rax
  004af	4c 8d 84 24 e0
	00 00 00	 lea	 r8, QWORD PTR $T7[rsp]
  004b7	48 8d 94 24 50
	01 00 00	 lea	 rdx, QWORD PTR $T14[rsp]
  004bf	48 8b 8c 24 00
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  004c7	e8 00 00 00 00	 call	 ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
  004cc	48 8b bc 24 10
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  004d4	48 8b f0	 mov	 rsi, rax
  004d7	b9 10 00 00 00	 mov	 ecx, 16
  004dc	f3 a4		 rep movsb

; 1562 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  004de	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  004e6	48 8b f8	 mov	 rdi, rax
  004e9	48 8b b4 24 10
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  004f1	b9 10 00 00 00	 mov	 ecx, 16
  004f6	f3 a4		 rep movsb
  004f8	48 8b 44 24 50	 mov	 rax, QWORD PTR _Fillcount$[rsp]
  004fd	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00502	44 0f b6 8c 24
	20 02 00 00	 movzx	 r9d, BYTE PTR _Fill$[rsp]
  0050b	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T8[rsp]
  00513	48 8d 94 24 60
	01 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0051b	48 8b 8c 24 00
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00523	e8 00 00 00 00	 call	 ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
  00528	48 8b bc 24 10
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  00530	48 8b f0	 mov	 rsi, rax
  00533	b9 10 00 00 00	 mov	 ecx, 16
  00538	f3 a4		 rep movsb

; 1563 : 			_Fillcount = 0;

  0053a	48 c7 44 24 50
	00 00 00 00	 mov	 QWORD PTR _Fillcount$[rsp], 0

; 1564 : 			}
; 1565 : 		else

  00543	eb 65		 jmp	 SHORT $LN9@Iput
$LN10@Iput:

; 1566 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00545	33 d2		 xor	 edx, edx
  00547	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  0054f	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  00554	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  0055c	48 8b f9	 mov	 rdi, rcx
  0055f	48 8b b4 24 10
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  00567	b9 10 00 00 00	 mov	 ecx, 16
  0056c	f3 a4		 rep movsb
  0056e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Prefix$[rsp]
  00573	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00578	4c 8b c8	 mov	 r9, rax
  0057b	4c 8d 84 24 00
	01 00 00	 lea	 r8, QWORD PTR $T9[rsp]
  00583	48 8d 94 24 70
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  0058b	48 8b 8c 24 00
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00593	e8 00 00 00 00	 call	 ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
  00598	48 8b bc 24 10
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  005a0	48 8b f0	 mov	 rsi, rax
  005a3	b9 10 00 00 00	 mov	 ecx, 16
  005a8	f3 a4		 rep movsb
$LN9@Iput:

; 1567 : 
; 1568 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  005aa	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  005af	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  005b7	48 2b c8	 sub	 rcx, rax
  005ba	48 8b c1	 mov	 rax, rcx
  005bd	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR tv249[rsp], rax
  005c5	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Prefix$[rsp]
  005ca	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  005d2	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  005d7	48 8d 8c 24 10
	01 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  005df	48 8b f9	 mov	 rdi, rcx
  005e2	48 8b b4 24 10
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  005ea	b9 10 00 00 00	 mov	 ecx, 16
  005ef	f3 a4		 rep movsb
  005f1	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR tv249[rsp]
  005f9	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  005fe	4c 8b c8	 mov	 r9, rax
  00601	4c 8d 84 24 10
	01 00 00	 lea	 r8, QWORD PTR $T10[rsp]
  00609	48 8d 94 24 80
	01 00 00	 lea	 rdx, QWORD PTR $T17[rsp]
  00611	48 8b 8c 24 00
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00619	e8 00 00 00 00	 call	 ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
  0061e	48 8b bc 24 10
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  00626	48 8b f0	 mov	 rsi, rax
  00629	b9 10 00 00 00	 mov	 ecx, 16
  0062e	f3 a4		 rep movsb

; 1569 : 		_Iosbase.width(0);

  00630	33 d2		 xor	 edx, edx
  00632	48 8b 8c 24 18
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  0063a	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEAA_J_J@Z ; std::ios_base::width

; 1570 : 		return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  0063f	48 8d 84 24 20
	01 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00647	48 8b f8	 mov	 rdi, rax
  0064a	48 8b b4 24 10
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  00652	b9 10 00 00 00	 mov	 ecx, 16
  00657	f3 a4		 rep movsb
  00659	48 8b 44 24 50	 mov	 rax, QWORD PTR _Fillcount$[rsp]
  0065e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00663	44 0f b6 8c 24
	20 02 00 00	 movzx	 r9d, BYTE PTR _Fill$[rsp]
  0066c	4c 8d 84 24 20
	01 00 00	 lea	 r8, QWORD PTR $T11[rsp]
  00674	48 8b 94 24 08
	02 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  0067c	48 8b 8c 24 00
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00684	e8 00 00 00 00	 call	 ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
  00689	90		 npad	 1
  0068a	48 8d 8c 24 b0
	01 00 00	 lea	 rcx, QWORD PTR _Grouping$[rsp]
  00692	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00697	90		 npad	 1
  00698	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  006a0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  006a5	48 8b 84 24 08
	02 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1571 : 		}

  006ad	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  006b5	48 33 cc	 xor	 rcx, rsp
  006b8	e8 00 00 00 00	 call	 __security_check_cookie
  006bd	48 81 c4 e8 01
	00 00		 add	 rsp, 488		; 000001e8H
  006c4	5f		 pop	 rdi
  006c5	5e		 pop	 rsi
  006c6	c3		 ret	 0
?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Kseparator$1 = 48
_Prefix$ = 56
_Pg$ = 64
_Adjustfield$ = 72
tv69 = 76
_Fillcount$ = 80
_Punct_fac$ = 88
tv196 = 96
tv273 = 104
tv266 = 112
_Ctype_fac$ = 120
tv132 = 128
tv269 = 136
tv249 = 144
$T2 = 152
$T3 = 160
$T4 = 176
$T5 = 192
$T6 = 208
$T7 = 224
$T8 = 240
$T9 = 256
$T10 = 272
$T11 = 288
$T12 = 304
$T13 = 320
$T14 = 336
$T15 = 352
$T16 = 368
$T17 = 384
_Groupstring$ = 400
_Grouping$ = 432
__$ArrayPad$ = 464
this$ = 512
__$ReturnUdt$ = 520
_Dest$ = 528
_Iosbase$ = 536
_Fill$ = 544
_Buf$ = 552
_Count$ = 560
?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  00010	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$0
_Kseparator$1 = 48
_Prefix$ = 56
_Pg$ = 64
_Adjustfield$ = 72
tv69 = 76
_Fillcount$ = 80
_Punct_fac$ = 88
tv196 = 96
tv273 = 104
tv266 = 112
_Ctype_fac$ = 120
tv132 = 128
tv269 = 136
tv249 = 144
$T2 = 152
$T3 = 160
$T4 = 176
$T5 = 192
$T6 = 208
$T7 = 224
$T8 = 240
$T9 = 256
$T10 = 272
$T11 = 288
$T12 = 304
$T13 = 320
$T14 = 336
$T15 = 352
$T16 = 368
$T17 = 384
_Groupstring$ = 400
_Grouping$ = 432
__$ArrayPad$ = 464
this$ = 512
__$ReturnUdt$ = 520
_Dest$ = 528
_Iosbase$ = 536
_Fill$ = 544
_Buf$ = 552
_Count$ = 560
?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$1
  0001b	40 55		 push	 rbp
  0001d	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00021	48 8b ea	 mov	 rbp, rdx
  00024	48 8d 8d 90 01
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$1
_Kseparator$1 = 48
_Prefix$ = 56
_Pg$ = 64
_Adjustfield$ = 72
tv69 = 76
_Fillcount$ = 80
_Punct_fac$ = 88
tv196 = 96
tv273 = 104
tv266 = 112
_Ctype_fac$ = 120
tv132 = 128
tv269 = 136
tv249 = 144
$T2 = 152
$T3 = 160
$T4 = 176
$T5 = 192
$T6 = 208
$T7 = 224
$T8 = 240
$T9 = 256
$T10 = 272
$T11 = 288
$T12 = 304
$T13 = 320
$T14 = 336
$T15 = 352
$T16 = 368
$T17 = 384
_Groupstring$ = 400
_Grouping$ = 432
__$ArrayPad$ = 464
this$ = 512
__$ReturnUdt$ = 520
_Dest$ = 528
_Iosbase$ = 536
_Fill$ = 544
_Buf$ = 552
_Count$ = 560
?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$2
  00036	40 55		 push	 rbp
  00038	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0003c	48 8b ea	 mov	 rbp, rdx
  0003f	48 8d 8d b0 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00046	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$2
_Kseparator$1 = 48
_Prefix$ = 56
_Pg$ = 64
_Adjustfield$ = 72
tv69 = 76
_Fillcount$ = 80
_Punct_fac$ = 88
tv196 = 96
tv273 = 104
tv266 = 112
_Ctype_fac$ = 120
tv132 = 128
tv269 = 136
tv249 = 144
$T2 = 152
$T3 = 160
$T4 = 176
$T5 = 192
$T6 = 208
$T7 = 224
$T8 = 240
$T9 = 256
$T10 = 272
$T11 = 288
$T12 = 304
$T13 = 320
$T14 = 336
$T15 = 352
$T16 = 368
$T17 = 384
_Groupstring$ = 400
_Grouping$ = 432
__$ArrayPad$ = 464
this$ = 512
__$ReturnUdt$ = 520
_Dest$ = 528
_Iosbase$ = 536
_Fill$ = 544
_Buf$ = 552
_Count$ = 560
?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$3
  00051	40 55		 push	 rbp
  00053	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00057	48 8b ea	 mov	 rbp, rdx
  0005a	48 8d 8d b0 01
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rbp]
  00061	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00066	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Kseparator$1 = 48
_Prefix$ = 56
_Pg$ = 64
_Adjustfield$ = 72
tv69 = 76
_Fillcount$ = 80
_Punct_fac$ = 88
tv196 = 96
tv273 = 104
tv266 = 112
_Ctype_fac$ = 120
tv132 = 128
tv269 = 136
tv249 = 144
$T2 = 152
$T3 = 160
$T4 = 176
$T5 = 192
$T6 = 208
$T7 = 224
$T8 = 240
$T9 = 256
$T10 = 272
$T11 = 288
$T12 = 304
$T13 = 320
$T14 = 336
$T15 = 352
$T16 = 368
$T17 = 384
_Groupstring$ = 400
_Grouping$ = 432
__$ArrayPad$ = 464
this$ = 512
__$ReturnUdt$ = 520
_Dest$ = 528
_Iosbase$ = 536
_Fill$ = 544
_Buf$ = 552
_Count$ = 560
?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  00010	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Kseparator$1 = 48
_Prefix$ = 56
_Pg$ = 64
_Adjustfield$ = 72
tv69 = 76
_Fillcount$ = 80
_Punct_fac$ = 88
tv196 = 96
tv273 = 104
tv266 = 112
_Ctype_fac$ = 120
tv132 = 128
tv269 = 136
tv249 = 144
$T2 = 152
$T3 = 160
$T4 = 176
$T5 = 192
$T6 = 208
$T7 = 224
$T8 = 240
$T9 = 256
$T10 = 272
$T11 = 288
$T12 = 304
$T13 = 320
$T14 = 336
$T15 = 352
$T16 = 368
$T17 = 384
_Groupstring$ = 400
_Grouping$ = 432
__$ArrayPad$ = 464
this$ = 512
__$ReturnUdt$ = 520
_Dest$ = 528
_Iosbase$ = 536
_Fill$ = 544
_Buf$ = 552
_Count$ = 560
?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$1
  0001b	40 55		 push	 rbp
  0001d	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00021	48 8b ea	 mov	 rbp, rdx
  00024	48 8d 8d 90 01
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Kseparator$1 = 48
_Prefix$ = 56
_Pg$ = 64
_Adjustfield$ = 72
tv69 = 76
_Fillcount$ = 80
_Punct_fac$ = 88
tv196 = 96
tv273 = 104
tv266 = 112
_Ctype_fac$ = 120
tv132 = 128
tv269 = 136
tv249 = 144
$T2 = 152
$T3 = 160
$T4 = 176
$T5 = 192
$T6 = 208
$T7 = 224
$T8 = 240
$T9 = 256
$T10 = 272
$T11 = 288
$T12 = 304
$T13 = 320
$T14 = 336
$T15 = 352
$T16 = 368
$T17 = 384
_Groupstring$ = 400
_Grouping$ = 432
__$ArrayPad$ = 464
this$ = 512
__$ReturnUdt$ = 520
_Dest$ = 528
_Iosbase$ = 536
_Fill$ = 544
_Buf$ = 552
_Count$ = 560
?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$2
  00036	40 55		 push	 rbp
  00038	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0003c	48 8b ea	 mov	 rbp, rdx
  0003f	48 8d 8d b0 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00046	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Kseparator$1 = 48
_Prefix$ = 56
_Pg$ = 64
_Adjustfield$ = 72
tv69 = 76
_Fillcount$ = 80
_Punct_fac$ = 88
tv196 = 96
tv273 = 104
tv266 = 112
_Ctype_fac$ = 120
tv132 = 128
tv269 = 136
tv249 = 144
$T2 = 152
$T3 = 160
$T4 = 176
$T5 = 192
$T6 = 208
$T7 = 224
$T8 = 240
$T9 = 256
$T10 = 272
$T11 = 288
$T12 = 304
$T13 = 320
$T14 = 336
$T15 = 352
$T16 = 368
$T17 = 384
_Groupstring$ = 400
_Grouping$ = 432
__$ArrayPad$ = 464
this$ = 512
__$ReturnUdt$ = 520
_Dest$ = 528
_Iosbase$ = 536
_Fill$ = 544
_Buf$ = 552
_Count$ = 560
?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$3
  00051	40 55		 push	 rbp
  00053	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00057	48 8b ea	 mov	 rbp, rdx
  0005a	48 8d 8d b0 01
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rbp]
  00061	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00066	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z
_TEXT	SEGMENT
tv89 = 0
tv90 = 1
tv91 = 2
_Basefield$ = 4
_Ptr$ = 8
this$ = 32
_Fmt$ = 40
_Spec$ = 48
_Flags$ = 56
?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt, COMDAT

; 1487 : 		{	// generate sprintf format for integer

$LN13:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 18	 sub	 rsp, 24

; 1488 : 		char *_Ptr = _Fmt;

  00018	48 8b 44 24 28	 mov	 rax, QWORD PTR _Fmt$[rsp]
  0001d	48 89 44 24 08	 mov	 QWORD PTR _Ptr$[rsp], rax

; 1489 : 		*_Ptr++ = '%';

  00022	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00027	c6 00 25	 mov	 BYTE PTR [rax], 37	; 00000025H
  0002a	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0002f	48 ff c0	 inc	 rax
  00032	48 89 44 24 08	 mov	 QWORD PTR _Ptr$[rsp], rax

; 1490 : 
; 1491 : 		if (_Flags & ios_base::showpos)

  00037	8b 44 24 38	 mov	 eax, DWORD PTR _Flags$[rsp]
  0003b	83 e0 20	 and	 eax, 32			; 00000020H
  0003e	85 c0		 test	 eax, eax
  00040	74 15		 je	 SHORT $LN2@Ifmt

; 1492 : 			*_Ptr++ = '+';

  00042	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00047	c6 00 2b	 mov	 BYTE PTR [rax], 43	; 0000002bH
  0004a	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0004f	48 ff c0	 inc	 rax
  00052	48 89 44 24 08	 mov	 QWORD PTR _Ptr$[rsp], rax
$LN2@Ifmt:

; 1493 : 		if (_Flags & ios_base::showbase)

  00057	8b 44 24 38	 mov	 eax, DWORD PTR _Flags$[rsp]
  0005b	83 e0 08	 and	 eax, 8
  0005e	85 c0		 test	 eax, eax
  00060	74 15		 je	 SHORT $LN3@Ifmt

; 1494 : 			*_Ptr++ = '#';

  00062	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00067	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  0006a	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0006f	48 ff c0	 inc	 rax
  00072	48 89 44 24 08	 mov	 QWORD PTR _Ptr$[rsp], rax
$LN3@Ifmt:

; 1495 : 		if (_Spec[0] != 'L')

  00077	b8 01 00 00 00	 mov	 eax, 1
  0007c	48 6b c0 00	 imul	 rax, rax, 0
  00080	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Spec$[rsp]
  00085	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00089	83 f8 4c	 cmp	 eax, 76			; 0000004cH
  0008c	74 28		 je	 SHORT $LN4@Ifmt

; 1496 : 			*_Ptr++ = _Spec[0];	// qualifier

  0008e	b8 01 00 00 00	 mov	 eax, 1
  00093	48 6b c0 00	 imul	 rax, rax, 0
  00097	48 8b 4c 24 08	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0009c	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Spec$[rsp]
  000a1	0f b6 04 02	 movzx	 eax, BYTE PTR [rdx+rax]
  000a5	88 01		 mov	 BYTE PTR [rcx], al
  000a7	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000ac	48 ff c0	 inc	 rax
  000af	48 89 44 24 08	 mov	 QWORD PTR _Ptr$[rsp], rax

; 1497 : 		else

  000b4	eb 3f		 jmp	 SHORT $LN5@Ifmt
$LN4@Ifmt:

; 1498 : 
; 1499 : 			{	/* change L to I64 */
; 1500 : 			*_Ptr++ = 'I';

  000b6	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000bb	c6 00 49	 mov	 BYTE PTR [rax], 73	; 00000049H
  000be	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 89 44 24 08	 mov	 QWORD PTR _Ptr$[rsp], rax

; 1501 : 			*_Ptr++ = '6';

  000cb	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000d0	c6 00 36	 mov	 BYTE PTR [rax], 54	; 00000036H
  000d3	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000d8	48 ff c0	 inc	 rax
  000db	48 89 44 24 08	 mov	 QWORD PTR _Ptr$[rsp], rax

; 1502 : 			*_Ptr++ = '4';

  000e0	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000e5	c6 00 34	 mov	 BYTE PTR [rax], 52	; 00000034H
  000e8	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000ed	48 ff c0	 inc	 rax
  000f0	48 89 44 24 08	 mov	 QWORD PTR _Ptr$[rsp], rax
$LN5@Ifmt:

; 1503 : 			}
; 1504 : 
; 1505 : 		ios_base::fmtflags _Basefield = _Flags & ios_base::basefield;

  000f5	8b 44 24 38	 mov	 eax, DWORD PTR _Flags$[rsp]
  000f9	25 00 0e 00 00	 and	 eax, 3584		; 00000e00H
  000fe	89 44 24 04	 mov	 DWORD PTR _Basefield$[rsp], eax

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00102	81 7c 24 04 00
	04 00 00	 cmp	 DWORD PTR _Basefield$[rsp], 1024 ; 00000400H
  0010a	75 07		 jne	 SHORT $LN11@Ifmt
  0010c	c6 44 24 02 6f	 mov	 BYTE PTR tv91[rsp], 111	; 0000006fH
  00111	eb 48		 jmp	 SHORT $LN12@Ifmt
$LN11@Ifmt:
  00113	81 7c 24 04 00
	08 00 00	 cmp	 DWORD PTR _Basefield$[rsp], 2048 ; 00000800H
  0011b	74 18		 je	 SHORT $LN9@Ifmt
  0011d	b8 01 00 00 00	 mov	 eax, 1
  00122	48 6b c0 01	 imul	 rax, rax, 1
  00126	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Spec$[rsp]
  0012b	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  0012f	88 44 24 01	 mov	 BYTE PTR tv90[rsp], al
  00133	eb 1d		 jmp	 SHORT $LN10@Ifmt
$LN9@Ifmt:
  00135	8b 44 24 38	 mov	 eax, DWORD PTR _Flags$[rsp]
  00139	83 e0 04	 and	 eax, 4
  0013c	85 c0		 test	 eax, eax
  0013e	74 06		 je	 SHORT $LN7@Ifmt
  00140	c6 04 24 58	 mov	 BYTE PTR tv89[rsp], 88	; 00000058H
  00144	eb 04		 jmp	 SHORT $LN8@Ifmt
$LN7@Ifmt:
  00146	c6 04 24 78	 mov	 BYTE PTR tv89[rsp], 120	; 00000078H
$LN8@Ifmt:
  0014a	0f b6 04 24	 movzx	 eax, BYTE PTR tv89[rsp]
  0014e	88 44 24 01	 mov	 BYTE PTR tv90[rsp], al
$LN10@Ifmt:
  00152	0f b6 44 24 01	 movzx	 eax, BYTE PTR tv90[rsp]
  00157	88 44 24 02	 mov	 BYTE PTR tv91[rsp], al
$LN12@Ifmt:
  0015b	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00160	0f b6 4c 24 02	 movzx	 ecx, BYTE PTR tv91[rsp]
  00165	88 08		 mov	 BYTE PTR [rax], cl
  00167	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0016c	48 ff c0	 inc	 rax
  0016f	48 89 44 24 08	 mov	 QWORD PTR _Ptr$[rsp], rax

; 1507 : 			: _Basefield != ios_base::hex ? _Spec[1]	// 'd' or 'u'
; 1508 : 			: _Flags & ios_base::uppercase ? 'X' : 'x';
; 1509 : 		*_Ptr = '\0';

  00174	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00179	c6 00 00	 mov	 BYTE PTR [rax], 0

; 1510 : 		return (_Fmt);

  0017c	48 8b 44 24 28	 mov	 rax, QWORD PTR _Fmt$[rsp]

; 1511 : 		}

  00181	48 83 c4 18	 add	 rsp, 24
  00185	c3		 ret	 0
?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
_TEXT	SEGMENT
tv240 = 48
_Kseparator$ = 49
_Prefix$ = 56
_Dp$ = 64
_Adjustfield$ = 68
_Pg$ = 72
tv69 = 80
_Fillcount$ = 88
_Poff$ = 96
_Off$ = 104
_Punct_fac$ = 112
_Exps$ = 120
tv192 = 128
tv225 = 136
tv302 = 144
tv295 = 152
_Ctype_fac$ = 160
tv157 = 168
tv298 = 176
_Eoff$ = 184
tv278 = 192
$T1 = 200
$T2 = 208
$T3 = 224
$T4 = 240
$T5 = 256
$T6 = 272
$T7 = 288
$T8 = 304
$T9 = 320
$T10 = 336
$T11 = 352
$T12 = 368
$T13 = 384
$T14 = 400
$T15 = 416
$T16 = 432
_Groupstring$ = 448
_Grouping$ = 480
__$ArrayPad$ = 512
this$ = 560
__$ReturnUdt$ = 568
_Dest$ = 576
_Iosbase$ = 584
_Fill$ = 592
_Buf$ = 600
_Count$ = 608
?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput, COMDAT

; 1413 : 		{	// put formatted floating-point to _Dest

$LN26:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec 18 02
	00 00		 sub	 rsp, 536		; 00000218H
  0001d	48 c7 84 24 c8
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T1[rsp], -2
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 00
	02 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1414 : 		_DEBUG_POINTER(_Dest);
; 1415 : 		size_t _Prefix = 0 < _Count && (*_Buf == '+' || *_Buf == '-')

  0003b	48 83 bc 24 60
	02 00 00 00	 cmp	 QWORD PTR _Count$[rsp], 0
  00044	76 2a		 jbe	 SHORT $LN16@Fput
  00046	48 8b 84 24 58
	02 00 00	 mov	 rax, QWORD PTR _Buf$[rsp]
  0004e	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00051	83 f8 2b	 cmp	 eax, 43			; 0000002bH
  00054	74 10		 je	 SHORT $LN15@Fput
  00056	48 8b 84 24 58
	02 00 00	 mov	 rax, QWORD PTR _Buf$[rsp]
  0005e	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00061	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00064	75 0a		 jne	 SHORT $LN16@Fput
$LN15@Fput:
  00066	c7 44 24 50 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0006e	eb 08		 jmp	 SHORT $LN17@Fput
$LN16@Fput:
  00070	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN17@Fput:
  00078	48 63 44 24 50	 movsxd	 rax, DWORD PTR tv69[rsp]
  0007d	48 89 44 24 38	 mov	 QWORD PTR _Prefix$[rsp], rax

; 1416 : 			? 1 : 0;
; 1417 : 
; 1418 : 		const char *_Exps;
; 1419 : 		if ((_Iosbase.flags() & ios_base::floatfield) != ios_base::hexfloat)

  00082	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  0008a	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  0008f	25 00 30 00 00	 and	 eax, 12288		; 00003000H
  00094	3d 00 30 00 00	 cmp	 eax, 12288		; 00003000H
  00099	74 11		 je	 SHORT $LN4@Fput

; 1420 : 			_Exps = "eE";

  0009b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02MDKMJEGG@eE?$AA@
  000a2	48 89 44 24 78	 mov	 QWORD PTR _Exps$[rsp], rax

; 1421 : 		else

  000a7	e9 80 00 00 00	 jmp	 $LN5@Fput
$LN4@Fput:

; 1422 : 			{	// correct for hexadecimal floating-point
; 1423 : 			_Exps = "pP";

  000ac	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02OOPEBDOJ@pP?$AA@
  000b3	48 89 44 24 78	 mov	 QWORD PTR _Exps$[rsp], rax

; 1424 : 			if (_Prefix + 2 <= _Count && _Buf[_Prefix] == '0'
; 1425 : 				&& (_Buf[_Prefix + 1] == 'x' || _Buf[_Prefix + 1] == 'X'))

  000b8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  000bd	48 83 c0 02	 add	 rax, 2
  000c1	48 3b 84 24 60
	02 00 00	 cmp	 rax, QWORD PTR _Count$[rsp]
  000c9	77 61		 ja	 SHORT $LN5@Fput
  000cb	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  000d0	48 8b 8c 24 58
	02 00 00	 mov	 rcx, QWORD PTR _Buf$[rsp]
  000d8	48 03 c8	 add	 rcx, rax
  000db	48 8b c1	 mov	 rax, rcx
  000de	0f be 00	 movsx	 eax, BYTE PTR [rax]
  000e1	83 f8 30	 cmp	 eax, 48			; 00000030H
  000e4	75 46		 jne	 SHORT $LN5@Fput
  000e6	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  000eb	48 8b 8c 24 58
	02 00 00	 mov	 rcx, QWORD PTR _Buf$[rsp]
  000f3	48 03 c8	 add	 rcx, rax
  000f6	48 8b c1	 mov	 rax, rcx
  000f9	0f be 40 01	 movsx	 eax, BYTE PTR [rax+1]
  000fd	83 f8 78	 cmp	 eax, 120		; 00000078H
  00100	74 1c		 je	 SHORT $LN7@Fput
  00102	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  00107	48 8b 8c 24 58
	02 00 00	 mov	 rcx, QWORD PTR _Buf$[rsp]
  0010f	48 03 c8	 add	 rcx, rax
  00112	48 8b c1	 mov	 rax, rcx
  00115	0f be 40 01	 movsx	 eax, BYTE PTR [rax+1]
  00119	83 f8 58	 cmp	 eax, 88			; 00000058H
  0011c	75 0e		 jne	 SHORT $LN5@Fput
$LN7@Fput:

; 1426 : 				_Prefix += 2;

  0011e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  00123	48 83 c0 02	 add	 rax, 2
  00127	48 89 44 24 38	 mov	 QWORD PTR _Prefix$[rsp], rax
$LN5@Fput:

; 1427 : 			}
; 1428 : 		const size_t _Eoff =
; 1429 : 			_CSTD strcspn(&_Buf[0], _Exps);	// find exponent

  0012c	b8 01 00 00 00	 mov	 eax, 1
  00131	48 6b c0 00	 imul	 rax, rax, 0
  00135	48 8b 8c 24 58
	02 00 00	 mov	 rcx, QWORD PTR _Buf$[rsp]
  0013d	48 03 c8	 add	 rcx, rax
  00140	48 8b c1	 mov	 rax, rcx
  00143	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Exps$[rsp]
  00148	48 8b c8	 mov	 rcx, rax
  0014b	e8 00 00 00 00	 call	 strcspn
  00150	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR _Eoff$[rsp], rax

; 1430 : 		char _Dp[2] = {"."};

  00158	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ??_C@_01LFCBOECM@?4?$AA@
  0015f	66 89 44 24 40	 mov	 WORD PTR _Dp$[rsp], ax

; 1431 : 		_Dp[0] = _CSTD localeconv()->decimal_point[0];

  00164	e8 00 00 00 00	 call	 localeconv
  00169	b9 01 00 00 00	 mov	 ecx, 1
  0016e	48 6b c9 00	 imul	 rcx, rcx, 0
  00172	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00175	ba 01 00 00 00	 mov	 edx, 1
  0017a	48 6b d2 00	 imul	 rdx, rdx, 0
  0017e	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  00182	88 44 14 40	 mov	 BYTE PTR _Dp$[rsp+rdx], al

; 1432 : 		const size_t _Poff =
; 1433 : 			_CSTD strcspn(&_Buf[0], &_Dp[0]);	// find decimal point

  00186	b8 01 00 00 00	 mov	 eax, 1
  0018b	48 6b c0 00	 imul	 rax, rax, 0
  0018f	48 8d 44 04 40	 lea	 rax, QWORD PTR _Dp$[rsp+rax]
  00194	b9 01 00 00 00	 mov	 ecx, 1
  00199	48 6b c9 00	 imul	 rcx, rcx, 0
  0019d	48 8b 94 24 58
	02 00 00	 mov	 rdx, QWORD PTR _Buf$[rsp]
  001a5	48 03 d1	 add	 rdx, rcx
  001a8	48 8b ca	 mov	 rcx, rdx
  001ab	48 8b d0	 mov	 rdx, rax
  001ae	e8 00 00 00 00	 call	 strcspn
  001b3	48 89 44 24 60	 mov	 QWORD PTR _Poff$[rsp], rax

; 1434 : 
; 1435 : 		const ctype<_Elem>& _Ctype_fac =

  001b8	48 8d 94 24 d0
	00 00 00	 lea	 rdx, QWORD PTR $T2[rsp]
  001c0	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  001c8	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  001cd	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR tv302[rsp], rax
  001d5	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR tv302[rsp]
  001dd	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv295[rsp], rax
  001e5	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR tv295[rsp]
  001ed	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
  001f2	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR _Ctype_fac$[rsp], rax
  001fa	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR $T2[rsp]
  00202	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale

; 1436 : 			_USE(_Iosbase.getloc(), ctype<_Elem>);
; 1437 : 		_Mystr _Groupstring(_Count, _Elem(0));	// reserve space

  00207	45 33 c0	 xor	 r8d, r8d
  0020a	48 8b 94 24 60
	02 00 00	 mov	 rdx, QWORD PTR _Count$[rsp]
  00212	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  0021a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0021f	90		 npad	 1

; 1438 : 		_Ctype_fac.widen(&_Buf[0], &_Buf[_Count], &_Groupstring[0]);

  00220	33 d2		 xor	 edx, edx
  00222	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  0022a	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  0022f	48 8b 8c 24 60
	02 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  00237	48 8b 94 24 58
	02 00 00	 mov	 rdx, QWORD PTR _Buf$[rsp]
  0023f	48 03 d1	 add	 rdx, rcx
  00242	48 8b ca	 mov	 rcx, rdx
  00245	ba 01 00 00 00	 mov	 edx, 1
  0024a	48 6b d2 00	 imul	 rdx, rdx, 0
  0024e	4c 8b 84 24 58
	02 00 00	 mov	 r8, QWORD PTR _Buf$[rsp]
  00256	4c 03 c2	 add	 r8, rdx
  00259	49 8b d0	 mov	 rdx, r8
  0025c	4c 8b c8	 mov	 r9, rax
  0025f	4c 8b c1	 mov	 r8, rcx
  00262	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ctype_fac$[rsp]
  0026a	e8 00 00 00 00	 call	 ?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z ; std::ctype<char>::widen

; 1439 : 
; 1440 : 		const _Mypunct& _Punct_fac = _USE(_Iosbase.getloc(), _Mypunct);

  0026f	48 8d 94 24 e0
	00 00 00	 lea	 rdx, QWORD PTR $T3[rsp]
  00277	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  0027f	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  00284	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv157[rsp], rax
  0028c	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR tv157[rsp]
  00294	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR tv298[rsp], rax
  0029c	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR tv298[rsp]
  002a4	e8 00 00 00 00	 call	 ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
  002a9	48 89 44 24 70	 mov	 QWORD PTR _Punct_fac$[rsp], rax
  002ae	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T3[rsp]
  002b6	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale

; 1441 : 		const string _Grouping = _Punct_fac.grouping();

  002bb	48 8d 94 24 e0
	01 00 00	 lea	 rdx, QWORD PTR _Grouping$[rsp]
  002c3	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Punct_fac$[rsp]
  002c8	e8 00 00 00 00	 call	 ?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
  002cd	90		 npad	 1

; 1442 : 		const _Elem _Kseparator = _Punct_fac.thousands_sep();

  002ce	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Punct_fac$[rsp]
  002d3	e8 00 00 00 00	 call	 ?thousands_sep@?$numpunct@D@std@@QEBADXZ ; std::numpunct<char>::thousands_sep
  002d8	88 44 24 31	 mov	 BYTE PTR _Kseparator$[rsp], al

; 1443 : 
; 1444 : 		if (_Poff != _Count)

  002dc	48 8b 84 24 60
	02 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  002e4	48 39 44 24 60	 cmp	 QWORD PTR _Poff$[rsp], rax
  002e9	74 27		 je	 SHORT $LN8@Fput

; 1445 : 			_Groupstring[_Poff] = _Punct_fac.decimal_point();

  002eb	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Punct_fac$[rsp]
  002f0	e8 00 00 00 00	 call	 ?decimal_point@?$numpunct@D@std@@QEBADXZ ; std::numpunct<char>::decimal_point
  002f5	88 44 24 30	 mov	 BYTE PTR tv240[rsp], al
  002f9	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Poff$[rsp]
  002fe	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  00306	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  0030b	0f b6 4c 24 30	 movzx	 ecx, BYTE PTR tv240[rsp]
  00310	88 08		 mov	 BYTE PTR [rax], cl
$LN8@Fput:

; 1446 : 
; 1447 : 		size_t _Off = _Poff == _Count ? _Eoff : _Poff;

  00312	48 8b 84 24 60
	02 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  0031a	48 39 44 24 60	 cmp	 QWORD PTR _Poff$[rsp], rax
  0031f	75 12		 jne	 SHORT $LN18@Fput
  00321	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR _Eoff$[rsp]
  00329	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv192[rsp], rax
  00331	eb 0d		 jmp	 SHORT $LN19@Fput
$LN18@Fput:
  00333	48 8b 44 24 60	 mov	 rax, QWORD PTR _Poff$[rsp]
  00338	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv192[rsp], rax
$LN19@Fput:
  00340	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR tv192[rsp]
  00348	48 89 44 24 68	 mov	 QWORD PTR _Off$[rsp], rax

; 1448 : 		const char *_Pg = &_Grouping[0];

  0034d	33 d2		 xor	 edx, edx
  0034f	48 8d 8c 24 e0
	01 00 00	 lea	 rcx, QWORD PTR _Grouping$[rsp]
  00357	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  0035c	48 89 44 24 48	 mov	 QWORD PTR _Pg$[rsp], rax
$LN2@Fput:

; 1449 : 		while (*_Pg != CHAR_MAX && '\0' < *_Pg
; 1450 : 			&& (size_t)*_Pg < _Off - _Prefix)

  00361	48 8b 44 24 48	 mov	 rax, QWORD PTR _Pg$[rsp]
  00366	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00369	83 f8 7f	 cmp	 eax, 127		; 0000007fH
  0036c	0f 84 89 00 00
	00		 je	 $LN3@Fput
  00372	48 8b 44 24 48	 mov	 rax, QWORD PTR _Pg$[rsp]
  00377	0f be 00	 movsx	 eax, BYTE PTR [rax]
  0037a	85 c0		 test	 eax, eax
  0037c	7e 7d		 jle	 SHORT $LN3@Fput
  0037e	48 8b 44 24 48	 mov	 rax, QWORD PTR _Pg$[rsp]
  00383	48 0f be 00	 movsx	 rax, BYTE PTR [rax]
  00387	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Prefix$[rsp]
  0038c	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Off$[rsp]
  00391	48 2b d1	 sub	 rdx, rcx
  00394	48 8b ca	 mov	 rcx, rdx
  00397	48 3b c1	 cmp	 rax, rcx
  0039a	73 5f		 jae	 SHORT $LN3@Fput

; 1451 : 			{	// add thousands separator
; 1452 : 			_Groupstring.insert(_Off -= *_Pg, (size_t)1, _Kseparator);

  0039c	48 8b 44 24 48	 mov	 rax, QWORD PTR _Pg$[rsp]
  003a1	48 0f be 00	 movsx	 rax, BYTE PTR [rax]
  003a5	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Off$[rsp]
  003aa	48 2b c8	 sub	 rcx, rax
  003ad	48 8b c1	 mov	 rax, rcx
  003b0	48 89 44 24 68	 mov	 QWORD PTR _Off$[rsp], rax
  003b5	44 0f b6 4c 24
	31		 movzx	 r9d, BYTE PTR _Kseparator$[rsp]
  003bb	41 b8 01 00 00
	00		 mov	 r8d, 1
  003c1	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Off$[rsp]
  003c6	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  003ce	e8 00 00 00 00	 call	 ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert

; 1453 : 			if ('\0' < _Pg[1])

  003d3	b8 01 00 00 00	 mov	 eax, 1
  003d8	48 6b c0 01	 imul	 rax, rax, 1
  003dc	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Pg$[rsp]
  003e1	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  003e5	85 c0		 test	 eax, eax
  003e7	7e 0d		 jle	 SHORT $LN9@Fput

; 1454 : 				++_Pg;	// not last group, advance

  003e9	48 8b 44 24 48	 mov	 rax, QWORD PTR _Pg$[rsp]
  003ee	48 ff c0	 inc	 rax
  003f1	48 89 44 24 48	 mov	 QWORD PTR _Pg$[rsp], rax
$LN9@Fput:

; 1455 : 			}

  003f6	e9 66 ff ff ff	 jmp	 $LN2@Fput
$LN3@Fput:

; 1456 : 
; 1457 : 		_Count = _Groupstring.size();

  003fb	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  00403	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00408	48 89 84 24 60
	02 00 00	 mov	 QWORD PTR _Count$[rsp], rax

; 1458 : 		size_t _Fillcount = _Iosbase.width() <= 0
; 1459 : 			|| (size_t)_Iosbase.width() <= _Count

  00410	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00418	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  0041d	48 85 c0	 test	 rax, rax
  00420	7e 36		 jle	 SHORT $LN20@Fput
  00422	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  0042a	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  0042f	48 3b 84 24 60
	02 00 00	 cmp	 rax, QWORD PTR _Count$[rsp]
  00437	76 1f		 jbe	 SHORT $LN20@Fput
  00439	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00441	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  00446	48 2b 84 24 60
	02 00 00	 sub	 rax, QWORD PTR _Count$[rsp]
  0044e	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv225[rsp], rax
  00456	eb 0c		 jmp	 SHORT $LN21@Fput
$LN20@Fput:
  00458	48 c7 84 24 88
	00 00 00 00 00
	00 00		 mov	 QWORD PTR tv225[rsp], 0
$LN21@Fput:
  00464	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR tv225[rsp]
  0046c	48 89 44 24 58	 mov	 QWORD PTR _Fillcount$[rsp], rax

; 1460 : 				? 0 : (size_t)_Iosbase.width() - _Count;
; 1461 : 
; 1462 : 		ios_base::fmtflags _Adjustfield =
; 1463 : 			_Iosbase.flags() & ios_base::adjustfield;

  00471	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00479	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  0047e	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00483	89 44 24 44	 mov	 DWORD PTR _Adjustfield$[rsp], eax

; 1464 : 		if (_Adjustfield != ios_base::left
; 1465 : 			&& _Adjustfield != ios_base::internal)

  00487	83 7c 24 44 40	 cmp	 DWORD PTR _Adjustfield$[rsp], 64 ; 00000040H
  0048c	0f 84 dd 00 00
	00		 je	 $LN10@Fput
  00492	81 7c 24 44 00
	01 00 00	 cmp	 DWORD PTR _Adjustfield$[rsp], 256 ; 00000100H
  0049a	0f 84 cf 00 00
	00		 je	 $LN10@Fput

; 1466 : 			{	// put leading fill
; 1467 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  004a0	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  004a8	48 8b f8	 mov	 rdi, rax
  004ab	48 8b b4 24 40
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  004b3	b9 10 00 00 00	 mov	 ecx, 16
  004b8	f3 a4		 rep movsb
  004ba	48 8b 44 24 58	 mov	 rax, QWORD PTR _Fillcount$[rsp]
  004bf	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  004c4	44 0f b6 8c 24
	50 02 00 00	 movzx	 r9d, BYTE PTR _Fill$[rsp]
  004cd	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T4[rsp]
  004d5	48 8d 94 24 60
	01 00 00	 lea	 rdx, QWORD PTR $T11[rsp]
  004dd	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  004e5	e8 00 00 00 00	 call	 ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
  004ea	48 8b bc 24 40
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  004f2	48 8b f0	 mov	 rsi, rax
  004f5	b9 10 00 00 00	 mov	 ecx, 16
  004fa	f3 a4		 rep movsb

; 1468 : 			_Fillcount = 0;

  004fc	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR _Fillcount$[rsp], 0

; 1469 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00505	33 d2		 xor	 edx, edx
  00507	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  0050f	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  00514	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  0051c	48 8b f9	 mov	 rdi, rcx
  0051f	48 8b b4 24 40
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  00527	b9 10 00 00 00	 mov	 ecx, 16
  0052c	f3 a4		 rep movsb
  0052e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Prefix$[rsp]
  00533	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00538	4c 8b c8	 mov	 r9, rax
  0053b	4c 8d 84 24 00
	01 00 00	 lea	 r8, QWORD PTR $T5[rsp]
  00543	48 8d 94 24 70
	01 00 00	 lea	 rdx, QWORD PTR $T12[rsp]
  0054b	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00553	e8 00 00 00 00	 call	 ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
  00558	48 8b bc 24 40
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  00560	48 8b f0	 mov	 rsi, rax
  00563	b9 10 00 00 00	 mov	 ecx, 16
  00568	f3 a4		 rep movsb
  0056a	e9 3f 01 00 00	 jmp	 $LN11@Fput
$LN10@Fput:

; 1470 : 			}
; 1471 : 		else if (_Adjustfield == ios_base::internal)

  0056f	81 7c 24 44 00
	01 00 00	 cmp	 DWORD PTR _Adjustfield$[rsp], 256 ; 00000100H
  00577	0f 85 cc 00 00
	00		 jne	 $LN12@Fput

; 1472 : 			{	// put internal fill
; 1473 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  0057d	33 d2		 xor	 edx, edx
  0057f	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  00587	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  0058c	48 8d 8c 24 10
	01 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  00594	48 8b f9	 mov	 rdi, rcx
  00597	48 8b b4 24 40
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  0059f	b9 10 00 00 00	 mov	 ecx, 16
  005a4	f3 a4		 rep movsb
  005a6	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Prefix$[rsp]
  005ab	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  005b0	4c 8b c8	 mov	 r9, rax
  005b3	4c 8d 84 24 10
	01 00 00	 lea	 r8, QWORD PTR $T6[rsp]
  005bb	48 8d 94 24 80
	01 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  005c3	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  005cb	e8 00 00 00 00	 call	 ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
  005d0	48 8b bc 24 40
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  005d8	48 8b f0	 mov	 rsi, rax
  005db	b9 10 00 00 00	 mov	 ecx, 16
  005e0	f3 a4		 rep movsb

; 1474 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  005e2	48 8d 84 24 20
	01 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  005ea	48 8b f8	 mov	 rdi, rax
  005ed	48 8b b4 24 40
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  005f5	b9 10 00 00 00	 mov	 ecx, 16
  005fa	f3 a4		 rep movsb
  005fc	48 8b 44 24 58	 mov	 rax, QWORD PTR _Fillcount$[rsp]
  00601	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00606	44 0f b6 8c 24
	50 02 00 00	 movzx	 r9d, BYTE PTR _Fill$[rsp]
  0060f	4c 8d 84 24 20
	01 00 00	 lea	 r8, QWORD PTR $T7[rsp]
  00617	48 8d 94 24 90
	01 00 00	 lea	 rdx, QWORD PTR $T14[rsp]
  0061f	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00627	e8 00 00 00 00	 call	 ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
  0062c	48 8b bc 24 40
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  00634	48 8b f0	 mov	 rsi, rax
  00637	b9 10 00 00 00	 mov	 ecx, 16
  0063c	f3 a4		 rep movsb

; 1475 : 			_Fillcount = 0;

  0063e	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR _Fillcount$[rsp], 0

; 1476 : 			}
; 1477 : 		else

  00647	eb 65		 jmp	 SHORT $LN11@Fput
$LN12@Fput:

; 1478 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00649	33 d2		 xor	 edx, edx
  0064b	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  00653	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  00658	48 8d 8c 24 30
	01 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  00660	48 8b f9	 mov	 rdi, rcx
  00663	48 8b b4 24 40
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  0066b	b9 10 00 00 00	 mov	 ecx, 16
  00670	f3 a4		 rep movsb
  00672	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Prefix$[rsp]
  00677	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0067c	4c 8b c8	 mov	 r9, rax
  0067f	4c 8d 84 24 30
	01 00 00	 lea	 r8, QWORD PTR $T8[rsp]
  00687	48 8d 94 24 a0
	01 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0068f	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00697	e8 00 00 00 00	 call	 ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
  0069c	48 8b bc 24 40
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  006a4	48 8b f0	 mov	 rsi, rax
  006a7	b9 10 00 00 00	 mov	 ecx, 16
  006ac	f3 a4		 rep movsb
$LN11@Fput:

; 1479 : 
; 1480 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  006ae	48 8b 44 24 38	 mov	 rax, QWORD PTR _Prefix$[rsp]
  006b3	48 8b 8c 24 60
	02 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  006bb	48 2b c8	 sub	 rcx, rax
  006be	48 8b c1	 mov	 rax, rcx
  006c1	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR tv278[rsp], rax
  006c9	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Prefix$[rsp]
  006ce	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  006d6	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  006db	48 8d 8c 24 40
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  006e3	48 8b f9	 mov	 rdi, rcx
  006e6	48 8b b4 24 40
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  006ee	b9 10 00 00 00	 mov	 ecx, 16
  006f3	f3 a4		 rep movsb
  006f5	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR tv278[rsp]
  006fd	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00702	4c 8b c8	 mov	 r9, rax
  00705	4c 8d 84 24 40
	01 00 00	 lea	 r8, QWORD PTR $T9[rsp]
  0070d	48 8d 94 24 b0
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00715	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0071d	e8 00 00 00 00	 call	 ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
  00722	48 8b bc 24 40
	02 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  0072a	48 8b f0	 mov	 rsi, rax
  0072d	b9 10 00 00 00	 mov	 ecx, 16
  00732	f3 a4		 rep movsb

; 1481 : 		_Iosbase.width(0);

  00734	33 d2		 xor	 edx, edx
  00736	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  0073e	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEAA_J_J@Z ; std::ios_base::width

; 1482 : 		return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  00743	48 8d 84 24 50
	01 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0074b	48 8b f8	 mov	 rdi, rax
  0074e	48 8b b4 24 40
	02 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  00756	b9 10 00 00 00	 mov	 ecx, 16
  0075b	f3 a4		 rep movsb
  0075d	48 8b 44 24 58	 mov	 rax, QWORD PTR _Fillcount$[rsp]
  00762	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00767	44 0f b6 8c 24
	50 02 00 00	 movzx	 r9d, BYTE PTR _Fill$[rsp]
  00770	4c 8d 84 24 50
	01 00 00	 lea	 r8, QWORD PTR $T10[rsp]
  00778	48 8b 94 24 38
	02 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  00780	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00788	e8 00 00 00 00	 call	 ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
  0078d	90		 npad	 1
  0078e	48 8d 8c 24 e0
	01 00 00	 lea	 rcx, QWORD PTR _Grouping$[rsp]
  00796	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0079b	90		 npad	 1
  0079c	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR _Groupstring$[rsp]
  007a4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  007a9	48 8b 84 24 38
	02 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1483 : 		}

  007b1	48 8b 8c 24 00
	02 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  007b9	48 33 cc	 xor	 rcx, rsp
  007bc	e8 00 00 00 00	 call	 __security_check_cookie
  007c1	48 81 c4 18 02
	00 00		 add	 rsp, 536		; 00000218H
  007c8	5f		 pop	 rdi
  007c9	5e		 pop	 rsi
  007ca	c3		 ret	 0
?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv240 = 48
_Kseparator$ = 49
_Prefix$ = 56
_Dp$ = 64
_Adjustfield$ = 68
_Pg$ = 72
tv69 = 80
_Fillcount$ = 88
_Poff$ = 96
_Off$ = 104
_Punct_fac$ = 112
_Exps$ = 120
tv192 = 128
tv225 = 136
tv302 = 144
tv295 = 152
_Ctype_fac$ = 160
tv157 = 168
tv298 = 176
_Eoff$ = 184
tv278 = 192
$T1 = 200
$T2 = 208
$T3 = 224
$T4 = 240
$T5 = 256
$T6 = 272
$T7 = 288
$T8 = 304
$T9 = 320
$T10 = 336
$T11 = 352
$T12 = 368
$T13 = 384
$T14 = 400
$T15 = 416
$T16 = 432
_Groupstring$ = 448
_Grouping$ = 480
__$ArrayPad$ = 512
this$ = 560
__$ReturnUdt$ = 568
_Dest$ = 576
_Iosbase$ = 584
_Fill$ = 592
_Buf$ = 600
_Count$ = 608
?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d d0 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00010	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$0
tv240 = 48
_Kseparator$ = 49
_Prefix$ = 56
_Dp$ = 64
_Adjustfield$ = 68
_Pg$ = 72
tv69 = 80
_Fillcount$ = 88
_Poff$ = 96
_Off$ = 104
_Punct_fac$ = 112
_Exps$ = 120
tv192 = 128
tv225 = 136
tv302 = 144
tv295 = 152
_Ctype_fac$ = 160
tv157 = 168
tv298 = 176
_Eoff$ = 184
tv278 = 192
$T1 = 200
$T2 = 208
$T3 = 224
$T4 = 240
$T5 = 256
$T6 = 272
$T7 = 288
$T8 = 304
$T9 = 320
$T10 = 336
$T11 = 352
$T12 = 368
$T13 = 384
$T14 = 400
$T15 = 416
$T16 = 432
_Groupstring$ = 448
_Grouping$ = 480
__$ArrayPad$ = 512
this$ = 560
__$ReturnUdt$ = 568
_Dest$ = 576
_Iosbase$ = 584
_Fill$ = 592
_Buf$ = 600
_Count$ = 608
?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$1
  0001b	40 55		 push	 rbp
  0001d	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00021	48 8b ea	 mov	 rbp, rdx
  00024	48 8d 8d c0 01
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$1
tv240 = 48
_Kseparator$ = 49
_Prefix$ = 56
_Dp$ = 64
_Adjustfield$ = 68
_Pg$ = 72
tv69 = 80
_Fillcount$ = 88
_Poff$ = 96
_Off$ = 104
_Punct_fac$ = 112
_Exps$ = 120
tv192 = 128
tv225 = 136
tv302 = 144
tv295 = 152
_Ctype_fac$ = 160
tv157 = 168
tv298 = 176
_Eoff$ = 184
tv278 = 192
$T1 = 200
$T2 = 208
$T3 = 224
$T4 = 240
$T5 = 256
$T6 = 272
$T7 = 288
$T8 = 304
$T9 = 320
$T10 = 336
$T11 = 352
$T12 = 368
$T13 = 384
$T14 = 400
$T15 = 416
$T16 = 432
_Groupstring$ = 448
_Grouping$ = 480
__$ArrayPad$ = 512
this$ = 560
__$ReturnUdt$ = 568
_Dest$ = 576
_Iosbase$ = 584
_Fill$ = 592
_Buf$ = 600
_Count$ = 608
?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$2
  00036	40 55		 push	 rbp
  00038	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0003c	48 8b ea	 mov	 rbp, rdx
  0003f	48 8d 8d e0 00
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  00046	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$2
tv240 = 48
_Kseparator$ = 49
_Prefix$ = 56
_Dp$ = 64
_Adjustfield$ = 68
_Pg$ = 72
tv69 = 80
_Fillcount$ = 88
_Poff$ = 96
_Off$ = 104
_Punct_fac$ = 112
_Exps$ = 120
tv192 = 128
tv225 = 136
tv302 = 144
tv295 = 152
_Ctype_fac$ = 160
tv157 = 168
tv298 = 176
_Eoff$ = 184
tv278 = 192
$T1 = 200
$T2 = 208
$T3 = 224
$T4 = 240
$T5 = 256
$T6 = 272
$T7 = 288
$T8 = 304
$T9 = 320
$T10 = 336
$T11 = 352
$T12 = 368
$T13 = 384
$T14 = 400
$T15 = 416
$T16 = 432
_Groupstring$ = 448
_Grouping$ = 480
__$ArrayPad$ = 512
this$ = 560
__$ReturnUdt$ = 568
_Dest$ = 576
_Iosbase$ = 584
_Fill$ = 592
_Buf$ = 600
_Count$ = 608
?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$3
  00051	40 55		 push	 rbp
  00053	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00057	48 8b ea	 mov	 rbp, rdx
  0005a	48 8d 8d e0 01
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rbp]
  00061	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00066	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv240 = 48
_Kseparator$ = 49
_Prefix$ = 56
_Dp$ = 64
_Adjustfield$ = 68
_Pg$ = 72
tv69 = 80
_Fillcount$ = 88
_Poff$ = 96
_Off$ = 104
_Punct_fac$ = 112
_Exps$ = 120
tv192 = 128
tv225 = 136
tv302 = 144
tv295 = 152
_Ctype_fac$ = 160
tv157 = 168
tv298 = 176
_Eoff$ = 184
tv278 = 192
$T1 = 200
$T2 = 208
$T3 = 224
$T4 = 240
$T5 = 256
$T6 = 272
$T7 = 288
$T8 = 304
$T9 = 320
$T10 = 336
$T11 = 352
$T12 = 368
$T13 = 384
$T14 = 400
$T15 = 416
$T16 = 432
_Groupstring$ = 448
_Grouping$ = 480
__$ArrayPad$ = 512
this$ = 560
__$ReturnUdt$ = 568
_Dest$ = 576
_Iosbase$ = 584
_Fill$ = 592
_Buf$ = 600
_Count$ = 608
?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d d0 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00010	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv240 = 48
_Kseparator$ = 49
_Prefix$ = 56
_Dp$ = 64
_Adjustfield$ = 68
_Pg$ = 72
tv69 = 80
_Fillcount$ = 88
_Poff$ = 96
_Off$ = 104
_Punct_fac$ = 112
_Exps$ = 120
tv192 = 128
tv225 = 136
tv302 = 144
tv295 = 152
_Ctype_fac$ = 160
tv157 = 168
tv298 = 176
_Eoff$ = 184
tv278 = 192
$T1 = 200
$T2 = 208
$T3 = 224
$T4 = 240
$T5 = 256
$T6 = 272
$T7 = 288
$T8 = 304
$T9 = 320
$T10 = 336
$T11 = 352
$T12 = 368
$T13 = 384
$T14 = 400
$T15 = 416
$T16 = 432
_Groupstring$ = 448
_Grouping$ = 480
__$ArrayPad$ = 512
this$ = 560
__$ReturnUdt$ = 568
_Dest$ = 576
_Iosbase$ = 584
_Fill$ = 592
_Buf$ = 600
_Count$ = 608
?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$1
  0001b	40 55		 push	 rbp
  0001d	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00021	48 8b ea	 mov	 rbp, rdx
  00024	48 8d 8d c0 01
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv240 = 48
_Kseparator$ = 49
_Prefix$ = 56
_Dp$ = 64
_Adjustfield$ = 68
_Pg$ = 72
tv69 = 80
_Fillcount$ = 88
_Poff$ = 96
_Off$ = 104
_Punct_fac$ = 112
_Exps$ = 120
tv192 = 128
tv225 = 136
tv302 = 144
tv295 = 152
_Ctype_fac$ = 160
tv157 = 168
tv298 = 176
_Eoff$ = 184
tv278 = 192
$T1 = 200
$T2 = 208
$T3 = 224
$T4 = 240
$T5 = 256
$T6 = 272
$T7 = 288
$T8 = 304
$T9 = 320
$T10 = 336
$T11 = 352
$T12 = 368
$T13 = 384
$T14 = 400
$T15 = 416
$T16 = 432
_Groupstring$ = 448
_Grouping$ = 480
__$ArrayPad$ = 512
this$ = 560
__$ReturnUdt$ = 568
_Dest$ = 576
_Iosbase$ = 584
_Fill$ = 592
_Buf$ = 600
_Count$ = 608
?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$2
  00036	40 55		 push	 rbp
  00038	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0003c	48 8b ea	 mov	 rbp, rdx
  0003f	48 8d 8d e0 00
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  00046	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv240 = 48
_Kseparator$ = 49
_Prefix$ = 56
_Dp$ = 64
_Adjustfield$ = 68
_Pg$ = 72
tv69 = 80
_Fillcount$ = 88
_Poff$ = 96
_Off$ = 104
_Punct_fac$ = 112
_Exps$ = 120
tv192 = 128
tv225 = 136
tv302 = 144
tv295 = 152
_Ctype_fac$ = 160
tv157 = 168
tv298 = 176
_Eoff$ = 184
tv278 = 192
$T1 = 200
$T2 = 208
$T3 = 224
$T4 = 240
$T5 = 256
$T6 = 272
$T7 = 288
$T8 = 304
$T9 = 320
$T10 = 336
$T11 = 352
$T12 = 368
$T13 = 384
$T14 = 400
$T15 = 416
$T16 = 432
_Groupstring$ = 448
_Grouping$ = 480
__$ArrayPad$ = 512
this$ = 560
__$ReturnUdt$ = 568
_Dest$ = 576
_Iosbase$ = 584
_Fill$ = 592
_Buf$ = 600
_Count$ = 608
?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$3
  00051	40 55		 push	 rbp
  00053	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00057	48 8b ea	 mov	 rbp, rdx
  0005a	48 8d 8d e0 01
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rbp]
  00061	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00066	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z
_TEXT	SEGMENT
tv83 = 0
tv84 = 1
tv85 = 2
tv90 = 3
tv91 = 4
tv92 = 5
_Ffl$ = 8
_Ptr$ = 16
this$ = 48
_Fmt$ = 56
_Spec$ = 64
_Flags$ = 72
?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt, COMDAT

; 1383 : 		{	// generate sprintf format for floating-point

$LN20:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1384 : 		char *_Ptr = _Fmt;

  00018	48 8b 44 24 38	 mov	 rax, QWORD PTR _Fmt$[rsp]
  0001d	48 89 44 24 10	 mov	 QWORD PTR _Ptr$[rsp], rax

; 1385 : 		*_Ptr++ = '%';

  00022	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00027	c6 00 25	 mov	 BYTE PTR [rax], 37	; 00000025H
  0002a	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0002f	48 ff c0	 inc	 rax
  00032	48 89 44 24 10	 mov	 QWORD PTR _Ptr$[rsp], rax

; 1386 : 
; 1387 : 		if (_Flags & ios_base::showpos)

  00037	8b 44 24 48	 mov	 eax, DWORD PTR _Flags$[rsp]
  0003b	83 e0 20	 and	 eax, 32			; 00000020H
  0003e	85 c0		 test	 eax, eax
  00040	74 15		 je	 SHORT $LN2@Ffmt

; 1388 : 			*_Ptr++ = '+';

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00047	c6 00 2b	 mov	 BYTE PTR [rax], 43	; 0000002bH
  0004a	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0004f	48 ff c0	 inc	 rax
  00052	48 89 44 24 10	 mov	 QWORD PTR _Ptr$[rsp], rax
$LN2@Ffmt:

; 1389 : 		if (_Flags & ios_base::showpoint)

  00057	8b 44 24 48	 mov	 eax, DWORD PTR _Flags$[rsp]
  0005b	83 e0 10	 and	 eax, 16
  0005e	85 c0		 test	 eax, eax
  00060	74 15		 je	 SHORT $LN3@Ffmt

; 1390 : 			*_Ptr++ = '#';

  00062	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00067	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  0006a	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0006f	48 ff c0	 inc	 rax
  00072	48 89 44 24 10	 mov	 QWORD PTR _Ptr$[rsp], rax
$LN3@Ffmt:

; 1391 : 		*_Ptr++ = '.';

  00077	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0007c	c6 00 2e	 mov	 BYTE PTR [rax], 46	; 0000002eH
  0007f	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00084	48 ff c0	 inc	 rax
  00087	48 89 44 24 10	 mov	 QWORD PTR _Ptr$[rsp], rax

; 1392 : 		*_Ptr++ = '*';	// for precision argument

  0008c	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00091	c6 00 2a	 mov	 BYTE PTR [rax], 42	; 0000002aH
  00094	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00099	48 ff c0	 inc	 rax
  0009c	48 89 44 24 10	 mov	 QWORD PTR _Ptr$[rsp], rax

; 1393 : 		if (_Spec != '\0')

  000a1	0f be 44 24 40	 movsx	 eax, BYTE PTR _Spec$[rsp]
  000a6	85 c0		 test	 eax, eax
  000a8	74 19		 je	 SHORT $LN4@Ffmt

; 1394 : 			*_Ptr++ = _Spec;	// 'L' qualifier for long double only

  000aa	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000af	0f b6 4c 24 40	 movzx	 ecx, BYTE PTR _Spec$[rsp]
  000b4	88 08		 mov	 BYTE PTR [rax], cl
  000b6	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000bb	48 ff c0	 inc	 rax
  000be	48 89 44 24 10	 mov	 QWORD PTR _Ptr$[rsp], rax
$LN4@Ffmt:

; 1395 : 
; 1396 : 		ios_base::fmtflags _Ffl = _Flags & ios_base::floatfield;

  000c3	8b 44 24 48	 mov	 eax, DWORD PTR _Flags$[rsp]
  000c7	25 00 30 00 00	 and	 eax, 12288		; 00003000H
  000cc	89 44 24 08	 mov	 DWORD PTR _Ffl$[rsp], eax

; 1397 : 		if (_Flags & ios_base::uppercase)

  000d0	8b 44 24 48	 mov	 eax, DWORD PTR _Flags$[rsp]
  000d4	83 e0 04	 and	 eax, 4
  000d7	85 c0		 test	 eax, eax
  000d9	74 62		 je	 SHORT $LN5@Ffmt

; 1398 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  000db	81 7c 24 08 00
	20 00 00	 cmp	 DWORD PTR _Ffl$[rsp], 8192 ; 00002000H
  000e3	75 07		 jne	 SHORT $LN12@Ffmt
  000e5	c6 44 24 02 66	 mov	 BYTE PTR tv85[rsp], 102	; 00000066H
  000ea	eb 36		 jmp	 SHORT $LN13@Ffmt
$LN12@Ffmt:
  000ec	81 7c 24 08 00
	30 00 00	 cmp	 DWORD PTR _Ffl$[rsp], 12288 ; 00003000H
  000f4	75 07		 jne	 SHORT $LN10@Ffmt
  000f6	c6 44 24 01 41	 mov	 BYTE PTR tv84[rsp], 65	; 00000041H
  000fb	eb 1c		 jmp	 SHORT $LN11@Ffmt
$LN10@Ffmt:
  000fd	81 7c 24 08 00
	10 00 00	 cmp	 DWORD PTR _Ffl$[rsp], 4096 ; 00001000H
  00105	75 06		 jne	 SHORT $LN8@Ffmt
  00107	c6 04 24 45	 mov	 BYTE PTR tv83[rsp], 69	; 00000045H
  0010b	eb 04		 jmp	 SHORT $LN9@Ffmt
$LN8@Ffmt:
  0010d	c6 04 24 47	 mov	 BYTE PTR tv83[rsp], 71	; 00000047H
$LN9@Ffmt:
  00111	0f b6 04 24	 movzx	 eax, BYTE PTR tv83[rsp]
  00115	88 44 24 01	 mov	 BYTE PTR tv84[rsp], al
$LN11@Ffmt:
  00119	0f b6 44 24 01	 movzx	 eax, BYTE PTR tv84[rsp]
  0011e	88 44 24 02	 mov	 BYTE PTR tv85[rsp], al
$LN13@Ffmt:
  00122	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00127	0f b6 4c 24 02	 movzx	 ecx, BYTE PTR tv85[rsp]
  0012c	88 08		 mov	 BYTE PTR [rax], cl
  0012e	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00133	48 ff c0	 inc	 rax
  00136	48 89 44 24 10	 mov	 QWORD PTR _Ptr$[rsp], rax

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else

  0013b	eb 63		 jmp	 SHORT $LN6@Ffmt
$LN5@Ffmt:

; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  0013d	81 7c 24 08 00
	20 00 00	 cmp	 DWORD PTR _Ffl$[rsp], 8192 ; 00002000H
  00145	75 07		 jne	 SHORT $LN18@Ffmt
  00147	c6 44 24 05 66	 mov	 BYTE PTR tv92[rsp], 102	; 00000066H
  0014c	eb 39		 jmp	 SHORT $LN19@Ffmt
$LN18@Ffmt:
  0014e	81 7c 24 08 00
	30 00 00	 cmp	 DWORD PTR _Ffl$[rsp], 12288 ; 00003000H
  00156	75 07		 jne	 SHORT $LN16@Ffmt
  00158	c6 44 24 04 61	 mov	 BYTE PTR tv91[rsp], 97	; 00000061H
  0015d	eb 1f		 jmp	 SHORT $LN17@Ffmt
$LN16@Ffmt:
  0015f	81 7c 24 08 00
	10 00 00	 cmp	 DWORD PTR _Ffl$[rsp], 4096 ; 00001000H
  00167	75 07		 jne	 SHORT $LN14@Ffmt
  00169	c6 44 24 03 65	 mov	 BYTE PTR tv90[rsp], 101	; 00000065H
  0016e	eb 05		 jmp	 SHORT $LN15@Ffmt
$LN14@Ffmt:
  00170	c6 44 24 03 67	 mov	 BYTE PTR tv90[rsp], 103	; 00000067H
$LN15@Ffmt:
  00175	0f b6 44 24 03	 movzx	 eax, BYTE PTR tv90[rsp]
  0017a	88 44 24 04	 mov	 BYTE PTR tv91[rsp], al
$LN17@Ffmt:
  0017e	0f b6 44 24 04	 movzx	 eax, BYTE PTR tv91[rsp]
  00183	88 44 24 05	 mov	 BYTE PTR tv92[rsp], al
$LN19@Ffmt:
  00187	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0018c	0f b6 4c 24 05	 movzx	 ecx, BYTE PTR tv92[rsp]
  00191	88 08		 mov	 BYTE PTR [rax], cl
  00193	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00198	48 ff c0	 inc	 rax
  0019b	48 89 44 24 10	 mov	 QWORD PTR _Ptr$[rsp], rax
$LN6@Ffmt:

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  001a0	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]
  001a5	c6 00 00	 mov	 BYTE PTR [rax], 0

; 1407 : 		return (_Fmt);

  001a8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Fmt$[rsp]

; 1408 : 		}

  001ad	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001b1	c3		 ret	 0
?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z
_TEXT	SEGMENT
$T1 = 64
_Buf$ = 80
__$ArrayPad$ = 144
this$ = 192
__$ReturnUdt$ = 200
_Dest$ = 208
_Iosbase$ = 216
_Fill$ = 224
_Val$ = 232
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1373 : 		{	// put formatted void pointer to _Dest

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H
  0001d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00024	48 33 c4	 xor	 rax, rsp
  00027	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1374 : 		char _Buf[2 * _MAX_INT_DIG];
; 1375 : 
; 1376 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0002f	4c 8b 8c 24 e8
	00 00 00	 mov	 r9, QWORD PTR _Val$[rsp]
  00037	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02BBAHNLBA@?$CFp?$AA@
  0003e	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00043	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00048	e8 00 00 00 00	 call	 sprintf_s
  0004d	48 98		 cdqe
  0004f	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T1[rsp]
  00054	48 8b f9	 mov	 rdi, rcx
  00057	48 8b b4 24 d0
	00 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  0005f	b9 10 00 00 00	 mov	 ecx, 16
  00064	f3 a4		 rep movsb
  00066	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0006b	48 8d 44 24 50	 lea	 rax, QWORD PTR _Buf$[rsp]
  00070	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00075	0f b6 84 24 e0
	00 00 00	 movzx	 eax, BYTE PTR _Fill$[rsp]
  0007d	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00081	4c 8b 8c 24 d8
	00 00 00	 mov	 r9, QWORD PTR _Iosbase$[rsp]
  00089	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  0008e	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  00096	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009e	e8 00 00 00 00	 call	 ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
  000a3	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1377 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), "%p", _Val)));
; 1378 : 		}

  000ab	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000b3	48 33 cc	 xor	 rcx, rsp
  000b6	e8 00 00 00 00	 call	 __security_check_cookie
  000bb	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  000c2	5f		 pop	 rdi
  000c3	5e		 pop	 rsi
  000c4	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
_TEXT	SEGMENT
_Isfixed$ = 64
tv71 = 68
_Ptwo$1 = 72
_Ngen$ = 76
_Bufsize$ = 80
tv80 = 88
_Precision$ = 96
tv133 = 104
tv141 = 112
tv148 = 120
$T2 = 128
$T3 = 144
_Buf$ = 160
_Fmt$ = 192
__$ArrayPad$ = 200
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1349 : 		{	// put formatted long double to _Dest

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec d8 00
	00 00		 sub	 rsp, 216		; 000000d8H
  0001d	48 c7 84 24 80
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T2[rsp], -2
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1350 : 		string _Buf;

  0003b	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00043	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00048	90		 npad	 1

; 1351 : 		char _Fmt[8];
; 1352 : 		bool _Isfixed = (_Iosbase.flags() & ios_base::floatfield)
; 1353 : 			== ios_base::fixed;

  00049	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00051	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  00056	25 00 30 00 00	 and	 eax, 12288		; 00003000H
  0005b	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  00060	75 0a		 jne	 SHORT $LN4@do_put
  00062	c7 44 24 44 01
	00 00 00	 mov	 DWORD PTR tv71[rsp], 1
  0006a	eb 08		 jmp	 SHORT $LN5@do_put
$LN4@do_put:
  0006c	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR tv71[rsp], 0
$LN5@do_put:
  00074	0f b6 44 24 44	 movzx	 eax, BYTE PTR tv71[rsp]
  00079	88 44 24 40	 mov	 BYTE PTR _Isfixed$[rsp], al

; 1354 : 		streamsize _Precision = _Iosbase.precision() <= 0 && !_Isfixed

  0007d	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00085	e8 00 00 00 00	 call	 ?precision@ios_base@std@@QEBA_JXZ ; std::ios_base::precision
  0008a	48 85 c0	 test	 rax, rax
  0008d	7f 14		 jg	 SHORT $LN6@do_put
  0008f	0f b6 44 24 40	 movzx	 eax, BYTE PTR _Isfixed$[rsp]
  00094	85 c0		 test	 eax, eax
  00096	75 0b		 jne	 SHORT $LN6@do_put
  00098	48 c7 44 24 58
	06 00 00 00	 mov	 QWORD PTR tv80[rsp], 6
  000a1	eb 12		 jmp	 SHORT $LN7@do_put
$LN6@do_put:
  000a3	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  000ab	e8 00 00 00 00	 call	 ?precision@ios_base@std@@QEBA_JXZ ; std::ios_base::precision
  000b0	48 89 44 24 58	 mov	 QWORD PTR tv80[rsp], rax
$LN7@do_put:
  000b5	48 8b 44 24 58	 mov	 rax, QWORD PTR tv80[rsp]
  000ba	48 89 44 24 60	 mov	 QWORD PTR _Precision$[rsp], rax

; 1355 : 			? 6 : _Iosbase.precision();	// desired precision
; 1356 : 		size_t _Bufsize = (size_t)_Precision;

  000bf	48 8b 44 24 60	 mov	 rax, QWORD PTR _Precision$[rsp]
  000c4	48 89 44 24 50	 mov	 QWORD PTR _Bufsize$[rsp], rax

; 1357 : 		if (_Isfixed && 1e10 < _CSTD fabsl(_Val))

  000c9	0f b6 44 24 40	 movzx	 eax, BYTE PTR _Isfixed$[rsp]
  000ce	85 c0		 test	 eax, eax
  000d0	74 54		 je	 SHORT $LN2@do_put
  000d2	f2 0f 10 84 24
	18 01 00 00	 movsd	 xmm0, QWORD PTR _Val$[rsp]
  000db	e8 00 00 00 00	 call	 fabsl
  000e0	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4202a05f20000000
  000e8	76 3c		 jbe	 SHORT $LN2@do_put

; 1358 : 			{	// f or F format
; 1359 : 			int _Ptwo;
; 1360 : 			(void)_CSTD frexpl(_Val, &_Ptwo);

  000ea	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptwo$1[rsp]
  000ef	f2 0f 10 84 24
	18 01 00 00	 movsd	 xmm0, QWORD PTR _Val$[rsp]
  000f8	e8 00 00 00 00	 call	 frexpl

; 1361 : 			_Bufsize += _CSTD abs(_Ptwo) * 30103L / 100000L;

  000fd	8b 4c 24 48	 mov	 ecx, DWORD PTR _Ptwo$1[rsp]
  00101	e8 00 00 00 00	 call	 abs
  00106	69 c0 97 75 00
	00		 imul	 eax, eax, 30103		; 00007597H
  0010c	99		 cdq
  0010d	b9 a0 86 01 00	 mov	 ecx, 100000		; 000186a0H
  00112	f7 f9		 idiv	 ecx
  00114	48 98		 cdqe
  00116	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Bufsize$[rsp]
  0011b	48 03 c8	 add	 rcx, rax
  0011e	48 8b c1	 mov	 rax, rcx
  00121	48 89 44 24 50	 mov	 QWORD PTR _Bufsize$[rsp], rax
$LN2@do_put:

; 1362 : 			}
; 1363 : 		_Buf.resize(_Bufsize + 50);	// add fudge factor

  00126	48 8b 44 24 50	 mov	 rax, QWORD PTR _Bufsize$[rsp]
  0012b	48 83 c0 32	 add	 rax, 50			; 00000032H
  0012f	48 8b d0	 mov	 rdx, rax
  00132	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  0013a	e8 00 00 00 00	 call	 ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

; 1364 : 
; 1365 : 		int _Ngen = _CSTD sprintf_s((char *)_Buf.c_str(), _Buf.size(),

  0013f	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00147	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  0014c	44 8b c8	 mov	 r9d, eax
  0014f	41 b0 4c	 mov	 r8b, 76			; 0000004cH
  00152	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR _Fmt$[rsp]
  0015a	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00162	e8 00 00 00 00	 call	 ?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt
  00167	48 89 44 24 68	 mov	 QWORD PTR tv133[rsp], rax
  0016c	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00174	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00179	48 89 44 24 70	 mov	 QWORD PTR tv141[rsp], rax
  0017e	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00186	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0018b	f2 0f 10 84 24
	18 01 00 00	 movsd	 xmm0, QWORD PTR _Val$[rsp]
  00194	f2 0f 11 44 24
	20		 movsd	 QWORD PTR [rsp+32], xmm0
  0019a	44 8b 4c 24 60	 mov	 r9d, DWORD PTR _Precision$[rsp]
  0019f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv133[rsp]
  001a4	4c 8b c1	 mov	 r8, rcx
  001a7	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv141[rsp]
  001ac	48 8b d1	 mov	 rdx, rcx
  001af	48 8b c8	 mov	 rcx, rax
  001b2	e8 00 00 00 00	 call	 sprintf_s
  001b7	89 44 24 4c	 mov	 DWORD PTR _Ngen$[rsp], eax

; 1366 : 			_Ffmt(_Fmt, 'L', _Iosbase.flags()), (int)_Precision, _Val);
; 1367 : 
; 1368 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  001bb	48 63 44 24 4c	 movsxd	 rax, DWORD PTR _Ngen$[rsp]
  001c0	48 89 44 24 78	 mov	 QWORD PTR tv148[rsp], rax
  001c5	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  001cd	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  001d2	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T3[rsp]
  001da	48 8b f9	 mov	 rdi, rcx
  001dd	48 8b b4 24 00
	01 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  001e5	b9 10 00 00 00	 mov	 ecx, 16
  001ea	f3 a4		 rep movsb
  001ec	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv148[rsp]
  001f1	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  001f6	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001fb	0f b6 84 24 10
	01 00 00	 movzx	 eax, BYTE PTR _Fill$[rsp]
  00203	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00207	4c 8b 8c 24 08
	01 00 00	 mov	 r9, QWORD PTR _Iosbase$[rsp]
  0020f	4c 8d 84 24 90
	00 00 00	 lea	 r8, QWORD PTR $T3[rsp]
  00217	48 8b 94 24 f8
	00 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  0021f	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00227	e8 00 00 00 00	 call	 ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
  0022c	90		 npad	 1
  0022d	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00235	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0023a	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1369 : 		}

  00242	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0024a	48 33 cc	 xor	 rcx, rsp
  0024d	e8 00 00 00 00	 call	 __security_check_cookie
  00252	48 81 c4 d8 00
	00 00		 add	 rsp, 216		; 000000d8H
  00259	5f		 pop	 rdi
  0025a	5e		 pop	 rsi
  0025b	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Isfixed$ = 64
tv71 = 68
_Ptwo$1 = 72
_Ngen$ = 76
_Bufsize$ = 80
tv80 = 88
_Precision$ = 96
tv133 = 104
tv141 = 112
tv148 = 120
$T2 = 128
$T3 = 144
_Buf$ = 160
_Fmt$ = 192
__$ArrayPad$ = 200
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rbp]
  00010	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Isfixed$ = 64
tv71 = 68
_Ptwo$1 = 72
_Ngen$ = 76
_Bufsize$ = 80
tv80 = 88
_Precision$ = 96
tv133 = 104
tv141 = 112
tv148 = 120
$T2 = 128
$T3 = 144
_Buf$ = 160
_Fmt$ = 192
__$ArrayPad$ = 200
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rbp]
  00010	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
_TEXT	SEGMENT
_Isfixed$ = 64
tv71 = 68
_Ptwo$1 = 72
_Ngen$ = 76
_Bufsize$ = 80
tv80 = 88
_Precision$ = 96
tv133 = 104
tv141 = 112
tv148 = 120
$T2 = 128
$T3 = 144
_Buf$ = 160
_Fmt$ = 192
__$ArrayPad$ = 200
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1325 : 		{	// put formatted double to _Dest

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec d8 00
	00 00		 sub	 rsp, 216		; 000000d8H
  0001d	48 c7 84 24 80
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T2[rsp], -2
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1326 : 		string _Buf;

  0003b	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00043	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00048	90		 npad	 1

; 1327 : 		char _Fmt[8];
; 1328 : 		bool _Isfixed = (_Iosbase.flags() & ios_base::floatfield)
; 1329 : 			== ios_base::fixed;

  00049	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00051	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  00056	25 00 30 00 00	 and	 eax, 12288		; 00003000H
  0005b	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  00060	75 0a		 jne	 SHORT $LN4@do_put
  00062	c7 44 24 44 01
	00 00 00	 mov	 DWORD PTR tv71[rsp], 1
  0006a	eb 08		 jmp	 SHORT $LN5@do_put
$LN4@do_put:
  0006c	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR tv71[rsp], 0
$LN5@do_put:
  00074	0f b6 44 24 44	 movzx	 eax, BYTE PTR tv71[rsp]
  00079	88 44 24 40	 mov	 BYTE PTR _Isfixed$[rsp], al

; 1330 : 		streamsize _Precision = _Iosbase.precision() <= 0 && !_Isfixed

  0007d	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00085	e8 00 00 00 00	 call	 ?precision@ios_base@std@@QEBA_JXZ ; std::ios_base::precision
  0008a	48 85 c0	 test	 rax, rax
  0008d	7f 14		 jg	 SHORT $LN6@do_put
  0008f	0f b6 44 24 40	 movzx	 eax, BYTE PTR _Isfixed$[rsp]
  00094	85 c0		 test	 eax, eax
  00096	75 0b		 jne	 SHORT $LN6@do_put
  00098	48 c7 44 24 58
	06 00 00 00	 mov	 QWORD PTR tv80[rsp], 6
  000a1	eb 12		 jmp	 SHORT $LN7@do_put
$LN6@do_put:
  000a3	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  000ab	e8 00 00 00 00	 call	 ?precision@ios_base@std@@QEBA_JXZ ; std::ios_base::precision
  000b0	48 89 44 24 58	 mov	 QWORD PTR tv80[rsp], rax
$LN7@do_put:
  000b5	48 8b 44 24 58	 mov	 rax, QWORD PTR tv80[rsp]
  000ba	48 89 44 24 60	 mov	 QWORD PTR _Precision$[rsp], rax

; 1331 : 			? 6 : _Iosbase.precision();	// desired precision
; 1332 : 		size_t _Bufsize = (size_t)_Precision;

  000bf	48 8b 44 24 60	 mov	 rax, QWORD PTR _Precision$[rsp]
  000c4	48 89 44 24 50	 mov	 QWORD PTR _Bufsize$[rsp], rax

; 1333 : 		if (_Isfixed && 1e10 < _CSTD fabs(_Val))

  000c9	0f b6 44 24 40	 movzx	 eax, BYTE PTR _Isfixed$[rsp]
  000ce	85 c0		 test	 eax, eax
  000d0	74 54		 je	 SHORT $LN2@do_put
  000d2	f2 0f 10 84 24
	18 01 00 00	 movsd	 xmm0, QWORD PTR _Val$[rsp]
  000db	e8 00 00 00 00	 call	 fabs
  000e0	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4202a05f20000000
  000e8	76 3c		 jbe	 SHORT $LN2@do_put

; 1334 : 			{	// f or F format
; 1335 : 			int _Ptwo;
; 1336 : 			(void)_CSTD frexp(_Val, &_Ptwo);

  000ea	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptwo$1[rsp]
  000ef	f2 0f 10 84 24
	18 01 00 00	 movsd	 xmm0, QWORD PTR _Val$[rsp]
  000f8	e8 00 00 00 00	 call	 frexp

; 1337 : 			_Bufsize += _CSTD abs(_Ptwo) * 30103L / 100000L;

  000fd	8b 4c 24 48	 mov	 ecx, DWORD PTR _Ptwo$1[rsp]
  00101	e8 00 00 00 00	 call	 abs
  00106	69 c0 97 75 00
	00		 imul	 eax, eax, 30103		; 00007597H
  0010c	99		 cdq
  0010d	b9 a0 86 01 00	 mov	 ecx, 100000		; 000186a0H
  00112	f7 f9		 idiv	 ecx
  00114	48 98		 cdqe
  00116	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Bufsize$[rsp]
  0011b	48 03 c8	 add	 rcx, rax
  0011e	48 8b c1	 mov	 rax, rcx
  00121	48 89 44 24 50	 mov	 QWORD PTR _Bufsize$[rsp], rax
$LN2@do_put:

; 1338 : 			}
; 1339 : 		_Buf.resize(_Bufsize + 50);	// add fudge factor

  00126	48 8b 44 24 50	 mov	 rax, QWORD PTR _Bufsize$[rsp]
  0012b	48 83 c0 32	 add	 rax, 50			; 00000032H
  0012f	48 8b d0	 mov	 rdx, rax
  00132	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  0013a	e8 00 00 00 00	 call	 ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

; 1340 : 
; 1341 : 		int _Ngen = _CSTD sprintf_s((char *)_Buf.c_str(), _Buf.size(),

  0013f	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00147	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  0014c	44 8b c8	 mov	 r9d, eax
  0014f	45 33 c0	 xor	 r8d, r8d
  00152	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR _Fmt$[rsp]
  0015a	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00162	e8 00 00 00 00	 call	 ?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt
  00167	48 89 44 24 68	 mov	 QWORD PTR tv133[rsp], rax
  0016c	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00174	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00179	48 89 44 24 70	 mov	 QWORD PTR tv141[rsp], rax
  0017e	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00186	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0018b	f2 0f 10 84 24
	18 01 00 00	 movsd	 xmm0, QWORD PTR _Val$[rsp]
  00194	f2 0f 11 44 24
	20		 movsd	 QWORD PTR [rsp+32], xmm0
  0019a	44 8b 4c 24 60	 mov	 r9d, DWORD PTR _Precision$[rsp]
  0019f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv133[rsp]
  001a4	4c 8b c1	 mov	 r8, rcx
  001a7	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv141[rsp]
  001ac	48 8b d1	 mov	 rdx, rcx
  001af	48 8b c8	 mov	 rcx, rax
  001b2	e8 00 00 00 00	 call	 sprintf_s
  001b7	89 44 24 4c	 mov	 DWORD PTR _Ngen$[rsp], eax

; 1342 : 			_Ffmt(_Fmt, 0, _Iosbase.flags()), (int)_Precision, _Val);
; 1343 : 
; 1344 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  001bb	48 63 44 24 4c	 movsxd	 rax, DWORD PTR _Ngen$[rsp]
  001c0	48 89 44 24 78	 mov	 QWORD PTR tv148[rsp], rax
  001c5	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  001cd	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  001d2	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T3[rsp]
  001da	48 8b f9	 mov	 rdi, rcx
  001dd	48 8b b4 24 00
	01 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  001e5	b9 10 00 00 00	 mov	 ecx, 16
  001ea	f3 a4		 rep movsb
  001ec	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv148[rsp]
  001f1	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  001f6	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001fb	0f b6 84 24 10
	01 00 00	 movzx	 eax, BYTE PTR _Fill$[rsp]
  00203	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00207	4c 8b 8c 24 08
	01 00 00	 mov	 r9, QWORD PTR _Iosbase$[rsp]
  0020f	4c 8d 84 24 90
	00 00 00	 lea	 r8, QWORD PTR $T3[rsp]
  00217	48 8b 94 24 f8
	00 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  0021f	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00227	e8 00 00 00 00	 call	 ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
  0022c	90		 npad	 1
  0022d	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00235	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0023a	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1345 : 		}

  00242	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0024a	48 33 cc	 xor	 rcx, rsp
  0024d	e8 00 00 00 00	 call	 __security_check_cookie
  00252	48 81 c4 d8 00
	00 00		 add	 rsp, 216		; 000000d8H
  00259	5f		 pop	 rdi
  0025a	5e		 pop	 rsi
  0025b	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Isfixed$ = 64
tv71 = 68
_Ptwo$1 = 72
_Ngen$ = 76
_Bufsize$ = 80
tv80 = 88
_Precision$ = 96
tv133 = 104
tv141 = 112
tv148 = 120
$T2 = 128
$T3 = 144
_Buf$ = 160
_Fmt$ = 192
__$ArrayPad$ = 200
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rbp]
  00010	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Isfixed$ = 64
tv71 = 68
_Ptwo$1 = 72
_Ngen$ = 76
_Bufsize$ = 80
tv80 = 88
_Precision$ = 96
tv133 = 104
tv141 = 112
tv148 = 120
$T2 = 128
$T3 = 144
_Buf$ = 160
_Fmt$ = 192
__$ArrayPad$ = 200
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rbp]
  00010	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1315 : 		{	// put formatted unsigned long long to _Dest

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec b8 00
	00 00		 sub	 rsp, 184		; 000000b8H
  0001d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00024	48 33 c4	 xor	 rax, rsp
  00027	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1316 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1317 : 
; 1318 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0002f	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00037	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  0003c	44 8b c8	 mov	 r9d, eax
  0003f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02CLHGNPPK@Lu?$AA@
  00046	48 8d 54 24 50	 lea	 rdx, QWORD PTR _Fmt$[rsp]
  0004b	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
  00058	4c 8b 8c 24 f8
	00 00 00	 mov	 r9, QWORD PTR _Val$[rsp]
  00060	4c 8b c0	 mov	 r8, rax
  00063	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00068	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]
  0006d	e8 00 00 00 00	 call	 sprintf_s
  00072	48 98		 cdqe
  00074	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T1[rsp]
  00079	48 8b f9	 mov	 rdi, rcx
  0007c	48 8b b4 24 e0
	00 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  00084	b9 10 00 00 00	 mov	 ecx, 16
  00089	f3 a4		 rep movsb
  0008b	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00090	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  00095	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0009a	0f b6 84 24 f0
	00 00 00	 movzx	 eax, BYTE PTR _Fill$[rsp]
  000a2	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  000a6	4c 8b 8c 24 e8
	00 00 00	 mov	 r9, QWORD PTR _Iosbase$[rsp]
  000ae	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000b3	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  000bb	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c3	e8 00 00 00 00	 call	 ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
  000c8	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1319 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "Lu",
; 1320 : 				_Iosbase.flags()), _Val)));
; 1321 : 		}

  000d0	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000d8	48 33 cc	 xor	 rcx, rsp
  000db	e8 00 00 00 00	 call	 __security_check_cookie
  000e0	48 81 c4 b8 00
	00 00		 add	 rsp, 184		; 000000b8H
  000e7	5f		 pop	 rdi
  000e8	5e		 pop	 rsi
  000e9	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1305 : 		{	// put formatted long long to _Dest

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec b8 00
	00 00		 sub	 rsp, 184		; 000000b8H
  0001d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00024	48 33 c4	 xor	 rax, rsp
  00027	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1306 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1307 : 
; 1308 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0002f	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00037	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  0003c	44 8b c8	 mov	 r9d, eax
  0003f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02HIKPPMOK@Ld?$AA@
  00046	48 8d 54 24 50	 lea	 rdx, QWORD PTR _Fmt$[rsp]
  0004b	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
  00058	4c 8b 8c 24 f8
	00 00 00	 mov	 r9, QWORD PTR _Val$[rsp]
  00060	4c 8b c0	 mov	 r8, rax
  00063	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00068	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]
  0006d	e8 00 00 00 00	 call	 sprintf_s
  00072	48 98		 cdqe
  00074	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T1[rsp]
  00079	48 8b f9	 mov	 rdi, rcx
  0007c	48 8b b4 24 e0
	00 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  00084	b9 10 00 00 00	 mov	 ecx, 16
  00089	f3 a4		 rep movsb
  0008b	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00090	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  00095	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0009a	0f b6 84 24 f0
	00 00 00	 movzx	 eax, BYTE PTR _Fill$[rsp]
  000a2	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  000a6	4c 8b 8c 24 e8
	00 00 00	 mov	 r9, QWORD PTR _Iosbase$[rsp]
  000ae	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000b3	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  000bb	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c3	e8 00 00 00 00	 call	 ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
  000c8	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1309 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "Ld",
; 1310 : 				_Iosbase.flags()), _Val)));
; 1311 : 		}

  000d0	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000d8	48 33 cc	 xor	 rcx, rsp
  000db	e8 00 00 00 00	 call	 __security_check_cookie
  000e0	48 81 c4 b8 00
	00 00		 add	 rsp, 184		; 000000b8H
  000e7	5f		 pop	 rdi
  000e8	5e		 pop	 rsi
  000e9	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1295 : 		{	// put formatted unsigned long to _Dest

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec b8 00
	00 00		 sub	 rsp, 184		; 000000b8H
  0001d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00024	48 33 c4	 xor	 rax, rsp
  00027	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1296 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1297 : 
; 1298 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0002f	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00037	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  0003c	44 8b c8	 mov	 r9d, eax
  0003f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02BDDLJJBK@lu?$AA@
  00046	48 8d 54 24 50	 lea	 rdx, QWORD PTR _Fmt$[rsp]
  0004b	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
  00058	44 8b 8c 24 f8
	00 00 00	 mov	 r9d, DWORD PTR _Val$[rsp]
  00060	4c 8b c0	 mov	 r8, rax
  00063	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00068	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]
  0006d	e8 00 00 00 00	 call	 sprintf_s
  00072	48 98		 cdqe
  00074	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T1[rsp]
  00079	48 8b f9	 mov	 rdi, rcx
  0007c	48 8b b4 24 e0
	00 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  00084	b9 10 00 00 00	 mov	 ecx, 16
  00089	f3 a4		 rep movsb
  0008b	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00090	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  00095	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0009a	0f b6 84 24 f0
	00 00 00	 movzx	 eax, BYTE PTR _Fill$[rsp]
  000a2	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  000a6	4c 8b 8c 24 e8
	00 00 00	 mov	 r9, QWORD PTR _Iosbase$[rsp]
  000ae	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000b3	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  000bb	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c3	e8 00 00 00 00	 call	 ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
  000c8	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1299 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "lu",
; 1300 : 				_Iosbase.flags()), _Val)));
; 1301 : 		}

  000d0	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000d8	48 33 cc	 xor	 rcx, rsp
  000db	e8 00 00 00 00	 call	 __security_check_cookie
  000e0	48 81 c4 b8 00
	00 00		 add	 rsp, 184		; 000000b8H
  000e7	5f		 pop	 rdi
  000e8	5e		 pop	 rsi
  000e9	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1285 : 		{	// put formatted long to _Dest

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec b8 00
	00 00		 sub	 rsp, 184		; 000000b8H
  0001d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00024	48 33 c4	 xor	 rax, rsp
  00027	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1286 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1287 : 
; 1288 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0002f	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00037	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  0003c	44 8b c8	 mov	 r9d, eax
  0003f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02EAOCLKAK@ld?$AA@
  00046	48 8d 54 24 50	 lea	 rdx, QWORD PTR _Fmt$[rsp]
  0004b	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
  00058	44 8b 8c 24 f8
	00 00 00	 mov	 r9d, DWORD PTR _Val$[rsp]
  00060	4c 8b c0	 mov	 r8, rax
  00063	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00068	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]
  0006d	e8 00 00 00 00	 call	 sprintf_s
  00072	48 98		 cdqe
  00074	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T1[rsp]
  00079	48 8b f9	 mov	 rdi, rcx
  0007c	48 8b b4 24 e0
	00 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  00084	b9 10 00 00 00	 mov	 ecx, 16
  00089	f3 a4		 rep movsb
  0008b	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00090	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  00095	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0009a	0f b6 84 24 f0
	00 00 00	 movzx	 eax, BYTE PTR _Fill$[rsp]
  000a2	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  000a6	4c 8b 8c 24 e8
	00 00 00	 mov	 r9, QWORD PTR _Iosbase$[rsp]
  000ae	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000b3	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  000bb	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c3	e8 00 00 00 00	 call	 ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
  000c8	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1289 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "ld",
; 1290 : 				_Iosbase.flags()), _Val)));
; 1291 : 		}

  000d0	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000d8	48 33 cc	 xor	 rcx, rsp
  000db	e8 00 00 00 00	 call	 __security_check_cookie
  000e0	48 81 c4 b8 00
	00 00		 add	 rsp, 184		; 000000b8H
  000e7	5f		 pop	 rdi
  000e8	5e		 pop	 rsi
  000e9	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
_TEXT	SEGMENT
_Fillcount$1 = 48
_Punct_fac$2 = 56
tv148 = 64
tv85 = 72
tv186 = 80
tv179 = 88
tv182 = 96
tv184 = 104
tv139 = 112
tv144 = 120
tv163 = 128
$T3 = 136
$T4 = 144
$T5 = 160
$T6 = 176
$T7 = 192
$T8 = 208
$T9 = 224
$T10 = 240
_Str$11 = 256
$T12 = 288
$T13 = 320
__$ArrayPad$ = 352
this$ = 400
__$ReturnUdt$ = 408
_Dest$ = 416
_Iosbase$ = 424
_Fill$ = 432
_Val$ = 440
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1255 : 		{	// put formatted bool to _Dest

$LN14:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  0001d	48 c7 84 24 88
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T3[rsp], -2
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 60
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1256 : 		_DEBUG_POINTER(_Dest);
; 1257 : 		if (!(_Iosbase.flags() & ios_base::boolalpha))

  0003b	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00043	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  00048	25 00 40 00 00	 and	 eax, 16384		; 00004000H
  0004d	85 c0		 test	 eax, eax
  0004f	75 7c		 jne	 SHORT $LN2@do_put

; 1258 : 			return (do_put(_Dest, _Iosbase, _Fill, (long)_Val));

  00051	0f b6 84 24 b8
	01 00 00	 movzx	 eax, BYTE PTR _Val$[rsp]
  00059	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T4[rsp]
  00061	48 8b f9	 mov	 rdi, rcx
  00064	48 8b b4 24 a0
	01 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  0006c	b9 10 00 00 00	 mov	 ecx, 16
  00071	f3 a4		 rep movsb
  00073	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0007b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0007e	48 89 4c 24 48	 mov	 QWORD PTR tv85[rsp], rcx
  00083	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  00087	0f b6 84 24 b0
	01 00 00	 movzx	 eax, BYTE PTR _Fill$[rsp]
  0008f	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00093	4c 8b 8c 24 a8
	01 00 00	 mov	 r9, QWORD PTR _Iosbase$[rsp]
  0009b	4c 8d 84 24 90
	00 00 00	 lea	 r8, QWORD PTR $T4[rsp]
  000a3	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  000ab	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b3	48 8b 44 24 48	 mov	 rax, QWORD PTR tv85[rsp]
  000b8	ff 50 48	 call	 QWORD PTR [rax+72]
  000bb	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000c3	e9 b2 02 00 00	 jmp	 $LN1@do_put

; 1259 : 		else

  000c8	e9 ad 02 00 00	 jmp	 $LN1@do_put
$LN2@do_put:

; 1260 : 			{	// put "false" or "true"
; 1261 : 			const _Mypunct& _Punct_fac = _USE(_Iosbase.getloc(), _Mypunct);

  000cd	48 8d 94 24 a0
	00 00 00	 lea	 rdx, QWORD PTR $T5[rsp]
  000d5	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  000dd	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  000e2	48 89 44 24 50	 mov	 QWORD PTR tv186[rsp], rax
  000e7	48 8b 44 24 50	 mov	 rax, QWORD PTR tv186[rsp]
  000ec	48 89 44 24 58	 mov	 QWORD PTR tv179[rsp], rax
  000f1	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv179[rsp]
  000f6	e8 00 00 00 00	 call	 ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
  000fb	48 89 44 24 38	 mov	 QWORD PTR _Punct_fac$2[rsp], rax
  00100	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  00108	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale

; 1262 : 			_Mystr _Str;

  0010d	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR _Str$11[rsp]
  00115	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0011a	90		 npad	 1

; 1263 : 			if (_Val)

  0011b	0f b6 84 24 b8
	01 00 00	 movzx	 eax, BYTE PTR _Val$[rsp]
  00123	85 c0		 test	 eax, eax
  00125	74 38		 je	 SHORT $LN4@do_put

; 1264 : 				_Str.assign(_Punct_fac.truename());

  00127	48 8d 94 24 20
	01 00 00	 lea	 rdx, QWORD PTR $T12[rsp]
  0012f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Punct_fac$2[rsp]
  00134	e8 00 00 00 00	 call	 ?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::truename
  00139	48 89 44 24 60	 mov	 QWORD PTR tv182[rsp], rax
  0013e	48 8b 54 24 60	 mov	 rdx, QWORD PTR tv182[rsp]
  00143	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR _Str$11[rsp]
  0014b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00150	48 8d 8c 24 20
	01 00 00	 lea	 rcx, QWORD PTR $T12[rsp]
  00158	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 1265 : 			else

  0015d	eb 36		 jmp	 SHORT $LN5@do_put
$LN4@do_put:

; 1266 : 				_Str.assign(_Punct_fac.falsename());

  0015f	48 8d 94 24 40
	01 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  00167	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Punct_fac$2[rsp]
  0016c	e8 00 00 00 00	 call	 ?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::falsename
  00171	48 89 44 24 68	 mov	 QWORD PTR tv184[rsp], rax
  00176	48 8b 54 24 68	 mov	 rdx, QWORD PTR tv184[rsp]
  0017b	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR _Str$11[rsp]
  00183	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00188	48 8d 8c 24 40
	01 00 00	 lea	 rcx, QWORD PTR $T13[rsp]
  00190	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@do_put:

; 1267 : 
; 1268 : 			size_t _Fillcount = _Iosbase.width() <= 0
; 1269 : 				|| (size_t)_Iosbase.width() <= _Str.size()

  00195	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  0019d	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  001a2	48 85 c0	 test	 rax, rax
  001a5	7e 5a		 jle	 SHORT $LN8@do_put
  001a7	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  001af	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  001b4	48 89 44 24 70	 mov	 QWORD PTR tv139[rsp], rax
  001b9	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR _Str$11[rsp]
  001c1	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  001c6	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv139[rsp]
  001cb	48 3b c8	 cmp	 rcx, rax
  001ce	76 31		 jbe	 SHORT $LN8@do_put
  001d0	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  001d8	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  001dd	48 89 44 24 78	 mov	 QWORD PTR tv144[rsp], rax
  001e2	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR _Str$11[rsp]
  001ea	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  001ef	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv144[rsp]
  001f4	48 2b c8	 sub	 rcx, rax
  001f7	48 8b c1	 mov	 rax, rcx
  001fa	48 89 44 24 40	 mov	 QWORD PTR tv148[rsp], rax
  001ff	eb 09		 jmp	 SHORT $LN9@do_put
$LN8@do_put:
  00201	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR tv148[rsp], 0
$LN9@do_put:
  0020a	48 8b 44 24 40	 mov	 rax, QWORD PTR tv148[rsp]
  0020f	48 89 44 24 30	 mov	 QWORD PTR _Fillcount$1[rsp], rax

; 1270 : 					? 0 : (size_t)_Iosbase.width() - _Str.size();
; 1271 : 
; 1272 : 			if ((_Iosbase.flags() & ios_base::adjustfield) != ios_base::left)

  00214	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  0021c	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  00221	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00226	83 f8 40	 cmp	 eax, 64			; 00000040H
  00229	74 65		 je	 SHORT $LN6@do_put

; 1273 : 				{	// put leading fill
; 1274 : 				_Dest = _Rep(_Dest, _Fill, _Fillcount);

  0022b	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00233	48 8b f8	 mov	 rdi, rax
  00236	48 8b b4 24 a0
	01 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  0023e	b9 10 00 00 00	 mov	 ecx, 16
  00243	f3 a4		 rep movsb
  00245	48 8b 44 24 30	 mov	 rax, QWORD PTR _Fillcount$1[rsp]
  0024a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0024f	44 0f b6 8c 24
	b0 01 00 00	 movzx	 r9d, BYTE PTR _Fill$[rsp]
  00258	4c 8d 84 24 b0
	00 00 00	 lea	 r8, QWORD PTR $T6[rsp]
  00260	48 8d 94 24 e0
	00 00 00	 lea	 rdx, QWORD PTR $T9[rsp]
  00268	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00270	e8 00 00 00 00	 call	 ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
  00275	48 8b bc 24 a0
	01 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  0027d	48 8b f0	 mov	 rsi, rax
  00280	b9 10 00 00 00	 mov	 ecx, 16
  00285	f3 a4		 rep movsb

; 1275 : 				_Fillcount = 0;

  00287	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR _Fillcount$1[rsp], 0
$LN6@do_put:

; 1276 : 				}
; 1277 : 			_Dest = _Put(_Dest, _Str.c_str(), _Str.size());	// put field

  00290	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR _Str$11[rsp]
  00298	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0029d	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv163[rsp], rax
  002a5	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR _Str$11[rsp]
  002ad	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  002b2	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  002ba	48 8b f9	 mov	 rdi, rcx
  002bd	48 8b b4 24 a0
	01 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  002c5	b9 10 00 00 00	 mov	 ecx, 16
  002ca	f3 a4		 rep movsb
  002cc	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR tv163[rsp]
  002d4	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  002d9	4c 8b c8	 mov	 r9, rax
  002dc	4c 8d 84 24 c0
	00 00 00	 lea	 r8, QWORD PTR $T7[rsp]
  002e4	48 8d 94 24 f0
	00 00 00	 lea	 rdx, QWORD PTR $T10[rsp]
  002ec	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002f4	e8 00 00 00 00	 call	 ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
  002f9	48 8b bc 24 a0
	01 00 00	 mov	 rdi, QWORD PTR _Dest$[rsp]
  00301	48 8b f0	 mov	 rsi, rax
  00304	b9 10 00 00 00	 mov	 ecx, 16
  00309	f3 a4		 rep movsb

; 1278 : 			_Iosbase.width(0);

  0030b	33 d2		 xor	 edx, edx
  0030d	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR _Iosbase$[rsp]
  00315	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEAA_J_J@Z ; std::ios_base::width

; 1279 : 			return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  0031a	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00322	48 8b f8	 mov	 rdi, rax
  00325	48 8b b4 24 a0
	01 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  0032d	b9 10 00 00 00	 mov	 ecx, 16
  00332	f3 a4		 rep movsb
  00334	48 8b 44 24 30	 mov	 rax, QWORD PTR _Fillcount$1[rsp]
  00339	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0033e	44 0f b6 8c 24
	b0 01 00 00	 movzx	 r9d, BYTE PTR _Fill$[rsp]
  00347	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T8[rsp]
  0034f	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  00357	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0035f	e8 00 00 00 00	 call	 ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
  00364	90		 npad	 1
  00365	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR _Str$11[rsp]
  0036d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00372	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@do_put:

; 1280 : 			}
; 1281 : 		}

  0037a	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00382	48 33 cc	 xor	 rcx, rsp
  00385	e8 00 00 00 00	 call	 __security_check_cookie
  0038a	48 81 c4 78 01
	00 00		 add	 rsp, 376		; 00000178H
  00391	5f		 pop	 rdi
  00392	5e		 pop	 rsi
  00393	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Fillcount$1 = 48
_Punct_fac$2 = 56
tv148 = 64
tv85 = 72
tv186 = 80
tv179 = 88
tv182 = 96
tv184 = 104
tv139 = 112
tv144 = 120
tv163 = 128
$T3 = 136
$T4 = 144
$T5 = 160
$T6 = 176
$T7 = 192
$T8 = 208
$T9 = 224
$T10 = 240
_Str$11 = 256
$T12 = 288
$T13 = 320
__$ArrayPad$ = 352
this$ = 400
__$ReturnUdt$ = 408
_Dest$ = 416
_Iosbase$ = 424
_Fill$ = 432
_Val$ = 440
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00010	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
_Fillcount$1 = 48
_Punct_fac$2 = 56
tv148 = 64
tv85 = 72
tv186 = 80
tv179 = 88
tv182 = 96
tv184 = 104
tv139 = 112
tv144 = 120
tv163 = 128
$T3 = 136
$T4 = 144
$T5 = 160
$T6 = 176
$T7 = 192
$T8 = 208
$T9 = 224
$T10 = 240
_Str$11 = 256
$T12 = 288
$T13 = 320
__$ArrayPad$ = 352
this$ = 400
__$ReturnUdt$ = 408
_Dest$ = 416
_Iosbase$ = 424
_Fill$ = 432
_Val$ = 440
?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$1
  0001b	40 55		 push	 rbp
  0001d	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00021	48 8b ea	 mov	 rbp, rdx
  00024	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR _Str$11[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Fillcount$1 = 48
_Punct_fac$2 = 56
tv148 = 64
tv85 = 72
tv186 = 80
tv179 = 88
tv182 = 96
tv184 = 104
tv139 = 112
tv144 = 120
tv163 = 128
$T3 = 136
$T4 = 144
$T5 = 160
$T6 = 176
$T7 = 192
$T8 = 208
$T9 = 224
$T10 = 240
_Str$11 = 256
$T12 = 288
$T13 = 320
__$ArrayPad$ = 352
this$ = 400
__$ReturnUdt$ = 408
_Dest$ = 416
_Iosbase$ = 424
_Fill$ = 432
_Val$ = 440
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00010	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Fillcount$1 = 48
_Punct_fac$2 = 56
tv148 = 64
tv85 = 72
tv186 = 80
tv179 = 88
tv182 = 96
tv184 = 104
tv139 = 112
tv144 = 120
tv163 = 128
$T3 = 136
$T4 = 144
$T5 = 160
$T6 = 176
$T7 = 192
$T8 = 208
$T9 = 224
$T10 = 240
_Str$11 = 256
$T12 = 288
$T13 = 320
__$ArrayPad$ = 352
this$ = 400
__$ReturnUdt$ = 408
_Dest$ = 416
_Iosbase$ = 424
_Fill$ = 432
_Val$ = 440
?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$1
  0001b	40 55		 push	 rbp
  0001d	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00021	48 8b ea	 mov	 rbp, rdx
  00024	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR _Str$11[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 96
__$ReturnUdt$ = 104
_Dest$ = 112
_Iosbase$ = 120
_Fill$ = 128
_Val$ = 136
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put, COMDAT

; 1218 : 		{	// put formatted unsigned long to _Dest

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1219 : 		return (do_put(_Dest, _Iosbase, _Fill, _Val));

  0001a	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  0001f	48 8b f8	 mov	 rdi, rax
  00022	48 8b 74 24 70	 mov	 rsi, QWORD PTR _Dest$[rsp]
  00027	b9 10 00 00 00	 mov	 ecx, 16
  0002c	f3 a4		 rep movsb
  0002e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00033	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00036	8b 8c 24 88 00
	00 00		 mov	 ecx, DWORD PTR _Val$[rsp]
  0003d	89 4c 24 28	 mov	 DWORD PTR [rsp+40], ecx
  00041	0f b6 8c 24 80
	00 00 00	 movzx	 ecx, BYTE PTR _Fill$[rsp]
  00049	88 4c 24 20	 mov	 BYTE PTR [rsp+32], cl
  0004d	4c 8b 4c 24 78	 mov	 r9, QWORD PTR _Iosbase$[rsp]
  00052	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T1[rsp]
  00057	48 8b 54 24 68	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	ff 50 40	 call	 QWORD PTR [rax+64]
  00064	48 8b 44 24 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1220 : 		}

  00069	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0006d	5f		 pop	 rdi
  0006e	5e		 pop	 rsi
  0006f	c3		 ret	 0
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >, COMDAT

; 1197 : 		{	// construct from specified locale

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00013	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 1196 : 		: locale::facet(_Refs)

  0001c	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Refs$[rsp]
  00021	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00026	e8 00 00 00 00	 call	 ??0facet@locale@std@@IEAA@_K@Z ; std::locale::facet::facet
  0002b	90		 npad	 1

; 1197 : 		{	// construct from specified locale

  0002c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
  00038	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1198 : 		_Init(_Lobj);

  0003b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Lobj$[rsp]
  00040	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00045	e8 00 00 00 00	 call	 ?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init
  0004a	90		 npad	 1

; 1199 : 		}

  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00054	c3		 ret	 0
??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
?dtor$0@?0???0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
?dtor$0@?0???0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init, COMDAT

; 1183 : 		{	// initialize from _Locinfo object

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1184 : 		}

  0000a	c3		 ret	 0
?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >, COMDAT

; 1179 : 		{	// destroy the object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1180 : 		}

  00018	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0001d	e8 00 00 00 00	 call	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv89 = 48
tv132 = 56
tv128 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat, COMDAT

; 1168 : 		{	// return locale category mask and construct standard facet

$LN10:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00011	48 c7 44 24 50
	fe ff ff ff	 mov	 QWORD PTR $T4[rsp], -2
  0001a	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1169 : 		if (_Ppf != 0 && *_Ppf == 0)

  00022	48 83 bc 24 d0
	00 00 00 00	 cmp	 QWORD PTR _Ppf$[rsp], 0
  0002b	0f 84 b3 00 00
	00		 je	 $LN2@Getcat
  00031	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Ppf$[rsp]
  00039	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003d	0f 85 a1 00 00
	00		 jne	 $LN2@Getcat

; 1170 : 			*_Ppf = new num_put<_Elem, _OutIt>(

  00043	b9 10 00 00 00	 mov	 ecx, 16
  00048	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0004d	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  00052	48 83 7c 24 28
	00		 cmp	 QWORD PTR $T2[rsp], 0
  00058	74 4d		 je	 SHORT $LN4@Getcat
  0005a	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR _Ploc$[rsp]
  00062	e8 00 00 00 00	 call	 ?c_str@locale@std@@QEBAPEBDXZ ; std::locale::c_str
  00067	48 8b d0	 mov	 rdx, rax
  0006a	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T5[rsp]
  0006f	e8 00 00 00 00	 call	 ??0_Locinfo@std@@QEAA@PEBD@Z ; std::_Locinfo::_Locinfo
  00074	48 89 44 24 38	 mov	 QWORD PTR tv132[rsp], rax
  00079	48 8b 44 24 38	 mov	 rax, QWORD PTR tv132[rsp]
  0007e	48 89 44 24 40	 mov	 QWORD PTR tv128[rsp], rax
  00083	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00087	83 c8 01	 or	 eax, 1
  0008a	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0008e	45 33 c0	 xor	 r8d, r8d
  00091	48 8b 54 24 40	 mov	 rdx, QWORD PTR tv128[rsp]
  00096	48 8b 4c 24 28	 mov	 rcx, QWORD PTR $T2[rsp]
  0009b	e8 00 00 00 00	 call	 ??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
  000a0	48 89 44 24 30	 mov	 QWORD PTR tv89[rsp], rax
  000a5	eb 09		 jmp	 SHORT $LN5@Getcat
$LN4@Getcat:
  000a7	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR tv89[rsp], 0
$LN5@Getcat:
  000b0	48 8b 44 24 30	 mov	 rax, QWORD PTR tv89[rsp]
  000b5	48 89 44 24 48	 mov	 QWORD PTR $T3[rsp], rax
  000ba	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Ppf$[rsp]
  000c2	48 8b 4c 24 48	 mov	 rcx, QWORD PTR $T3[rsp]
  000c7	48 89 08	 mov	 QWORD PTR [rax], rcx
  000ca	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  000ce	83 e0 01	 and	 eax, 1
  000d1	85 c0		 test	 eax, eax
  000d3	74 0f		 je	 SHORT $LN2@Getcat
  000d5	83 64 24 20 fe	 and	 DWORD PTR $T1[rsp], -2
  000da	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T5[rsp]
  000df	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN2@Getcat:

; 1171 : 				_Locinfo(_Ploc->c_str()));
; 1172 : 		return (_X_NUMERIC);

  000e4	b8 04 00 00 00	 mov	 eax, 4

; 1173 : 		}

  000e9	48 81 c4 c8 00
	00 00		 add	 rsp, 200		; 000000c8H
  000f0	c3		 ret	 0
?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv89 = 48
tv132 = 56
tv128 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 10 00 00 00	 mov	 edx, 16
  0000e	48 8b 4d 28	 mov	 rcx, QWORD PTR $T2[rbp]
  00012	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$0
$T1 = 32
$T2 = 40
tv89 = 48
tv132 = 56
tv128 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$1@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$1
  0001d	40 55		 push	 rbp
  0001f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00023	48 8b ea	 mov	 rbp, rdx
  00026	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00029	83 e0 01	 and	 eax, 1
  0002c	85 c0		 test	 eax, eax
  0002e	74 0d		 je	 SHORT $LN8@dtor$1
  00030	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00034	48 8d 4d 58	 lea	 rcx, QWORD PTR $T5[rbp]
  00038	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN8@dtor$1:
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?dtor$1@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv89 = 48
tv132 = 56
tv128 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 10 00 00 00	 mov	 edx, 16
  0000e	48 8b 4d 28	 mov	 rcx, QWORD PTR $T2[rbp]
  00012	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv89 = 48
tv132 = 56
tv128 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$1@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$1
  0001d	40 55		 push	 rbp
  0001f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00023	48 8b ea	 mov	 rbp, rdx
  00026	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00029	83 e0 01	 and	 eax, 1
  0002c	85 c0		 test	 eax, eax
  0002e	74 0d		 je	 SHORT $LN8@dtor$1
  00030	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00034	48 8d 4d 58	 lea	 rcx, QWORD PTR $T5[rbp]
  00038	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN8@dtor$1:
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?dtor$1@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Psave$1 = 32
_Pf$2 = 40
_Lock$3 = 48
_Pfmod$4 = 56
_Id$5 = 64
$T6 = 72
$T7 = 80
$T8 = 88
_Loc$ = 128
??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >, COMDAT

; 553  : 	{	// get facet reference from locale

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00009	48 c7 44 24 50
	fe ff ff ff	 mov	 QWORD PTR $T7[rsp], -2

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

  00012	33 d2		 xor	 edx, edx
  00014	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  00019	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  0001e	90		 npad	 1

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

  0001f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
  00026	48 89 44 24 20	 mov	 QWORD PTR _Psave$1[rsp], rax

; 562  : 
; 563  : 		size_t _Id = _Facet::id;

  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
  00032	e8 00 00 00 00	 call	 ??Bid@locale@std@@QEAA_KXZ ; std::locale::id::operator unsigned __int64
  00037	48 89 44 24 40	 mov	 QWORD PTR _Id$5[rsp], rax

; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);

  0003c	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Id$5[rsp]
  00041	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Loc$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet
  0004e	48 89 44 24 28	 mov	 QWORD PTR _Pf$2[rsp], rax

; 565  : 
; 566  : 		if (_Pf != 0)

  00053	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pf$2[rsp], 0
  00059	74 05		 je	 SHORT $LN2@use_facet
  0005b	e9 84 00 00 00	 jmp	 $LN3@use_facet
$LN2@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

  00060	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Psave$1[rsp], 0
  00066	74 0c		 je	 SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  0006d	48 89 44 24 28	 mov	 QWORD PTR _Pf$2[rsp], rax
  00072	eb 70		 jmp	 SHORT $LN3@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

  00074	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Loc$[rsp]
  0007c	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _Psave$1[rsp]
  00081	e8 00 00 00 00	 call	 ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
  00086	48 83 f8 ff	 cmp	 rax, -1
  0008a	75 1e		 jne	 SHORT $LN6@use_facet

; 571  : 
; 572  :  #if _HAS_EXCEPTIONS
; 573  : 
; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

  0008c	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T8[rsp]
  00091	e8 00 00 00 00	 call	 ??0bad_cast@std@@QEAA@XZ ; std::bad_cast::bad_cast
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
  0009d	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T8[rsp]
  000a2	e8 00 00 00 00	 call	 _CxxThrowException
  000a7	90		 npad	 1

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else

  000a8	eb 3a		 jmp	 SHORT $LN3@use_facet
$LN6@use_facet:

; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

  000aa	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  000af	48 89 44 24 28	 mov	 QWORD PTR _Pf$2[rsp], rax

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

  000b4	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  000b9	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB, rax ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;

  000c0	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  000c5	48 89 44 24 38	 mov	 QWORD PTR _Pfmod$4[rsp], rax

; 586  : 			_Pfmod->_Incref();

  000ca	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pfmod$4[rsp]
  000cf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d2	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pfmod$4[rsp]
  000d7	ff 50 08	 call	 QWORD PTR [rax+8]

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

  000da	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pfmod$4[rsp]
  000df	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
$LN3@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

  000e4	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pf$2[rsp]
  000e9	48 89 44 24 48	 mov	 QWORD PTR $T6[rsp], rax
  000ee	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  000f3	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  000f8	48 8b 44 24 48	 mov	 rax, QWORD PTR $T6[rsp]

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

  000fd	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00101	c3		 ret	 0
$LN10@use_facet:
??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Psave$1 = 32
_Pf$2 = 40
_Lock$3 = 48
_Pfmod$4 = 56
_Id$5 = 64
$T6 = 72
$T7 = 80
$T8 = 88
_Loc$ = 128
?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 30	 lea	 rcx, QWORD PTR _Lock$3[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Psave$1 = 32
_Pf$2 = 40
_Lock$3 = 48
_Pfmod$4 = 56
_Id$5 = 64
$T6 = 72
$T7 = 80
$T8 = 88
_Loc$ = 128
?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 30	 lea	 rcx, QWORD PTR _Lock$3[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 141  : 			{	// test if stream state okay

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 142  : 			return (_Ok);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]

; 143  : 			}

  0000e	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 130  : 			{	// destroy the object

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 131  :  #if _HAS_EXCEPTIONS
; 132  : 			if (!_XSTD uncaught_exception())

  00012	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00017	90		 npad	 1
  00018	0f b6 c0	 movzx	 eax, al
  0001b	85 c0		 test	 eax, eax
  0001d	75 0e		 jne	 SHORT $LN2@sentry

; 133  : 				this->_Myostr._Osfx();

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00027	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
  0002c	90		 npad	 1
$LN2@sentry:

; 134  : 
; 135  :  #else /* _HAS_EXCEPTIONS */
; 136  : 			this->_Myostr._Osfx();
; 137  :  #endif /* _HAS_EXCEPTIONS */
; 138  : 			}

  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00037	90		 npad	 1
  00038	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003c	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 123  : 			{	// construct locking and testing stream

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 122  : 			: _Sentry_base(_Ostr)

  00017	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  0001c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00021	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  00026	90		 npad	 1

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00027	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0002c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002f	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00033	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00038	48 03 c8	 add	 rcx, rax
  0003b	48 8b c1	 mov	 rax, rcx
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?good@ios_base@std@@QEBA_NXZ ; std::ios_base::good
  00046	0f b6 c0	 movzx	 eax, al
  00049	85 c0		 test	 eax, eax
  0004b	74 71		 je	 SHORT $LN2@sentry
  0004d	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00059	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0005e	48 03 c8	 add	 rcx, rax
  00061	48 8b c1	 mov	 rax, rcx
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
  0006c	48 85 c0	 test	 rax, rax
  0006f	74 4d		 je	 SHORT $LN2@sentry
  00071	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00076	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00079	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0007d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00082	48 03 c8	 add	 rcx, rax
  00085	48 8b c1	 mov	 rax, rcx
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
  00090	48 3b 44 24 48	 cmp	 rax, QWORD PTR _Ostr$[rsp]
  00095	74 27		 je	 SHORT $LN2@sentry

; 125  : 				_Ostr.tie()->flush();

  00097	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0009c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009f	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000a3	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  000a8	48 03 c8	 add	 rcx, rax
  000ab	48 8b c1	 mov	 rax, rcx
  000ae	48 8b c8	 mov	 rcx, rax
  000b1	e8 00 00 00 00	 call	 ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
  000b6	48 8b c8	 mov	 rcx, rax
  000b9	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN2@sentry:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  000be	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  000c3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c6	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000ca	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  000cf	48 03 c8	 add	 rcx, rax
  000d2	48 8b c1	 mov	 rax, rcx
  000d5	48 8b c8	 mov	 rcx, rax
  000d8	e8 00 00 00 00	 call	 ?good@ios_base@std@@QEBA_NXZ ; std::ios_base::good
  000dd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000e2	88 41 08	 mov	 BYTE PTR [rcx+8], al

; 127  : 			}

  000e5	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000ea	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000ee	c3		 ret	 0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
tv72 = 32
tv87 = 40
tv94 = 48
$T1 = 56
this$ = 80
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 106  : 			{	// destroy after unlocking

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00009	48 c7 44 24 38
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 107  : 			if (_Myostr.rdbuf() != 0)

  00012	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001a	48 89 44 24 20	 mov	 QWORD PTR tv72[rsp], rax
  0001f	48 8b 44 24 20	 mov	 rax, QWORD PTR tv72[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0002b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv72[rsp]
  00030	48 03 c8	 add	 rcx, rax
  00033	48 8b c1	 mov	 rax, rcx
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  0003e	90		 npad	 1
  0003f	48 85 c0	 test	 rax, rax
  00042	74 43		 je	 SHORT $LN2@Sentry_bas

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00044	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004c	48 89 44 24 28	 mov	 QWORD PTR tv87[rsp], rax
  00051	48 8b 44 24 28	 mov	 rax, QWORD PTR tv87[rsp]
  00056	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00059	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0005d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv87[rsp]
  00062	48 03 c8	 add	 rcx, rax
  00065	48 8b c1	 mov	 rax, rcx
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  00070	90		 npad	 1
  00071	48 89 44 24 30	 mov	 QWORD PTR tv94[rsp], rax
  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR tv94[rsp]
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv94[rsp]
  00083	ff 50 10	 call	 QWORD PTR [rax+16]
  00086	90		 npad	 1
$LN2@Sentry_bas:

; 109  : 			}

  00087	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0008b	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
tv73 = 32
tv88 = 40
tv95 = 48
this$ = 80
_Ostr$ = 88
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 100  : 			{	// lock the stream buffer, if there

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 99   : 			: _Myostr(_Ostr)

  0000e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00013	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00018	48 89 08	 mov	 QWORD PTR [rax], rcx

; 101  : 			if (_Myostr.rdbuf() != 0)

  0001b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00020	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00023	48 89 44 24 20	 mov	 QWORD PTR tv73[rsp], rax
  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR tv73[rsp]
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00034	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv73[rsp]
  00039	48 03 c8	 add	 rcx, rax
  0003c	48 8b c1	 mov	 rax, rcx
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  00047	48 85 c0	 test	 rax, rax
  0004a	74 41		 je	 SHORT $LN2@Sentry_bas

; 102  : 				_Myostr.rdbuf()->_Lock();

  0004c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 89 44 24 28	 mov	 QWORD PTR tv88[rsp], rax
  00059	48 8b 44 24 28	 mov	 rax, QWORD PTR tv88[rsp]
  0005e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00061	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00065	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv88[rsp]
  0006a	48 03 c8	 add	 rcx, rax
  0006d	48 8b c1	 mov	 rax, rcx
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  00078	48 89 44 24 30	 mov	 QWORD PTR tv95[rsp], rax
  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR tv95[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv95[rsp]
  0008a	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 103  : 			}

  0008d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00092	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00096	c3		 ret	 0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

  0000a	c3		 ret	 0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al$ = 72
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>, COMDAT

; 597  : 		{	// construct allocator from _Al

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 595  : 		: _Mypair(_One_then_variadic_args_t(),

  0000e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  00013	e8 00 00 00 00	 call	 ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
  00018	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0001d	4c 8b c0	 mov	 r8, rax
  00020	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00025	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >

; 598  : 		}

  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00033	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>, COMDAT

; 1291 : 	{	// forward _Arg as movable

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1293 : 	}

  0000a	c3		 ret	 0
??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Ostr$ = 48
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 991  : 	{	// insert newline and flush stream

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00015	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0001a	48 03 c8	 add	 rcx, rax
  0001d	48 8b c1	 mov	 rax, rcx
  00020	b2 0a		 mov	 dl, 10
  00022	48 8b c8	 mov	 rcx, rax
  00025	e8 00 00 00 00	 call	 ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
  0002a	0f b6 d0	 movzx	 edx, al
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00032	e8 00 00 00 00	 call	 ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put

; 993  : 	_Ostr.flush();

  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 994  : 	return (_Ostr);

  00041	48 8b 44 24 30	 mov	 rax, QWORD PTR _Ostr$[rsp]

; 995  : 	}

  00046	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004a	c3		 ret	 0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
_State$ = 32
tv295 = 36
tv300 = 37
_Pad$ = 40
_Size$ = 48
tv139 = 56
tv297 = 60
$T1 = 64
$T2 = 68
tv302 = 72
$T3 = 76
$T4 = 80
tv137 = 88
tv296 = 96
tv298 = 104
tv299 = 112
tv301 = 120
$T5 = 128
_Ok$ = 136
$T6 = 152
_Ostr$ = 176
_Str$ = 184
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 170  : 	{	// insert a string

$LN25:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H
  00011	48 c7 84 24 98
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T6[rsp], -2

; 171  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 172  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Mystr;
; 173  : 	typedef typename _Mystr::size_type _Mysizt;
; 174  : 
; 175  : 	ios_base::iostate _State = ios_base::goodbit;

  0001d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _State$[rsp], 0

; 176  : 	_Mysizt _Size = _Str.size();

  00025	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR _Str$[rsp]
  0002d	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00032	48 89 44 24 30	 mov	 QWORD PTR _Size$[rsp], rax

; 177  : 	_Mysizt _Pad = _Ostr.width() <= 0 || (_Mysizt)_Ostr.width() <= _Size

  00037	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00046	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0004e	48 03 c8	 add	 rcx, rax
  00051	48 8b c1	 mov	 rax, rcx
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  0005c	48 85 c0	 test	 rax, rax
  0005f	7e 5d		 jle	 SHORT $LN17@operator
  00061	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00069	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00070	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00078	48 03 c8	 add	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 8b c8	 mov	 rcx, rax
  00081	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  00086	48 3b 44 24 30	 cmp	 rax, QWORD PTR _Size$[rsp]
  0008b	76 31		 jbe	 SHORT $LN17@operator
  0008d	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0009c	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  000a4	48 03 c8	 add	 rcx, rax
  000a7	48 8b c1	 mov	 rax, rcx
  000aa	48 8b c8	 mov	 rcx, rax
  000ad	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  000b2	48 2b 44 24 30	 sub	 rax, QWORD PTR _Size$[rsp]
  000b7	48 89 44 24 58	 mov	 QWORD PTR tv137[rsp], rax
  000bc	eb 09		 jmp	 SHORT $LN18@operator
$LN17@operator:
  000be	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR tv137[rsp], 0
$LN18@operator:
  000c7	48 8b 44 24 58	 mov	 rax, QWORD PTR tv137[rsp]
  000cc	48 89 44 24 28	 mov	 QWORD PTR _Pad$[rsp], rax

; 178  : 		? 0 : (_Mysizt)_Ostr.width() - _Size;
; 179  : 	const typename _Myos::sentry _Ok(_Ostr);

  000d1	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  000d9	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Ok$[rsp]
  000e1	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  000e6	90		 npad	 1

; 180  : 
; 181  : 	if (!_Ok)

  000e7	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Ok$[rsp]
  000ef	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  000f4	0f b6 c0	 movzx	 eax, al
  000f7	85 c0		 test	 eax, eax
  000f9	75 10		 jne	 SHORT $LN8@operator

; 182  : 		_State |= ios_base::badbit;

  000fb	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  000ff	83 c8 04	 or	 eax, 4
  00102	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 183  : 	else

  00106	e9 4a 02 00 00	 jmp	 $LN9@operator
$LN8@operator:

; 184  : 		{	// state okay, insert characters
; 185  : 	_TRY_IO_BEGIN
; 186  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

  0010b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00113	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00116	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0011a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00122	48 03 c8	 add	 rcx, rax
  00125	48 8b c1	 mov	 rax, rcx
  00128	48 8b c8	 mov	 rcx, rax
  0012b	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  00130	89 44 24 38	 mov	 DWORD PTR tv139[rsp], eax
  00134	8b 44 24 38	 mov	 eax, DWORD PTR tv139[rsp]
  00138	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  0013d	83 f8 40	 cmp	 eax, 64			; 00000040H
  00140	0f 84 ba 00 00
	00		 je	 $LN11@operator

; 187  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  00146	eb 0d		 jmp	 SHORT $LN4@operator
$LN2@operator:
  00148	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pad$[rsp]
  0014d	48 ff c8	 dec	 rax
  00150	48 89 44 24 28	 mov	 QWORD PTR _Pad$[rsp], rax
$LN4@operator:
  00155	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pad$[rsp], 0
  0015b	0f 86 9f 00 00
	00		 jbe	 $LN11@operator

; 188  : 				if (_Traits::eq_int_type(_Traits::eof(),

  00161	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00169	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0016c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00170	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00178	48 03 c8	 add	 rcx, rax
  0017b	48 8b c1	 mov	 rax, rcx
  0017e	48 8b c8	 mov	 rcx, rax
  00181	e8 00 00 00 00	 call	 ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
  00186	88 44 24 24	 mov	 BYTE PTR tv295[rsp], al
  0018a	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00192	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00195	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00199	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  001a1	48 03 c8	 add	 rcx, rax
  001a4	48 8b c1	 mov	 rax, rcx
  001a7	48 8b c8	 mov	 rcx, rax
  001aa	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  001af	48 89 44 24 60	 mov	 QWORD PTR tv296[rsp], rax
  001b4	0f b6 54 24 24	 movzx	 edx, BYTE PTR tv295[rsp]
  001b9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv296[rsp]
  001be	e8 00 00 00 00	 call	 ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
  001c3	89 44 24 3c	 mov	 DWORD PTR tv297[rsp], eax
  001c7	8b 44 24 3c	 mov	 eax, DWORD PTR tv297[rsp]
  001cb	89 44 24 40	 mov	 DWORD PTR $T1[rsp], eax
  001cf	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  001d4	89 44 24 44	 mov	 DWORD PTR $T2[rsp], eax
  001d8	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T1[rsp]
  001dd	48 8d 4c 24 44	 lea	 rcx, QWORD PTR $T2[rsp]
  001e2	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  001e7	0f b6 c0	 movzx	 eax, al
  001ea	85 c0		 test	 eax, eax
  001ec	74 0d		 je	 SHORT $LN12@operator

; 189  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 190  : 					{	// insertion failed, quit
; 191  : 					_State |= ios_base::badbit;

  001ee	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  001f2	83 c8 04	 or	 eax, 4
  001f5	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 192  : 					break;

  001f9	eb 05		 jmp	 SHORT $LN11@operator
$LN12@operator:

; 193  : 					}
; 194  : 
; 195  : 		if (_State == ios_base::goodbit

  001fb	e9 48 ff ff ff	 jmp	 $LN2@operator
$LN11@operator:

; 196  : 			&& _Ostr.rdbuf()->sputn(_Str.c_str(), (streamsize)_Size)

  00200	83 7c 24 20 00	 cmp	 DWORD PTR _State$[rsp], 0
  00205	75 6a		 jne	 SHORT $LN13@operator
  00207	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0020f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00212	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00216	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0021e	48 03 c8	 add	 rcx, rax
  00221	48 8b c1	 mov	 rax, rcx
  00224	48 8b c8	 mov	 rcx, rax
  00227	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  0022c	48 89 44 24 68	 mov	 QWORD PTR tv298[rsp], rax
  00231	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR _Str$[rsp]
  00239	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0023e	4c 8b 44 24 30	 mov	 r8, QWORD PTR _Size$[rsp]
  00243	48 8b d0	 mov	 rdx, rax
  00246	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv298[rsp]
  0024b	e8 00 00 00 00	 call	 ?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputn
  00250	48 89 44 24 70	 mov	 QWORD PTR tv299[rsp], rax
  00255	48 8b 44 24 30	 mov	 rax, QWORD PTR _Size$[rsp]
  0025a	48 39 44 24 70	 cmp	 QWORD PTR tv299[rsp], rax
  0025f	74 10		 je	 SHORT $LN13@operator

; 197  : 				!= (streamsize)_Size)
; 198  : 				_State |= ios_base::badbit;

  00261	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  00265	83 c8 04	 or	 eax, 4
  00268	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 199  : 		else

  0026c	e9 ba 00 00 00	 jmp	 $LN14@operator
$LN13@operator:

; 200  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  00271	eb 0d		 jmp	 SHORT $LN7@operator
$LN5@operator:
  00273	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pad$[rsp]
  00278	48 ff c8	 dec	 rax
  0027b	48 89 44 24 28	 mov	 QWORD PTR _Pad$[rsp], rax
$LN7@operator:
  00280	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pad$[rsp], 0
  00286	0f 86 9f 00 00
	00		 jbe	 $LN14@operator

; 201  : 				if (_Traits::eq_int_type(_Traits::eof(),

  0028c	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00294	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00297	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0029b	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  002a3	48 03 c8	 add	 rcx, rax
  002a6	48 8b c1	 mov	 rax, rcx
  002a9	48 8b c8	 mov	 rcx, rax
  002ac	e8 00 00 00 00	 call	 ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
  002b1	88 44 24 25	 mov	 BYTE PTR tv300[rsp], al
  002b5	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  002bd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002c0	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  002c4	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  002cc	48 03 c8	 add	 rcx, rax
  002cf	48 8b c1	 mov	 rax, rcx
  002d2	48 8b c8	 mov	 rcx, rax
  002d5	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  002da	48 89 44 24 78	 mov	 QWORD PTR tv301[rsp], rax
  002df	0f b6 54 24 25	 movzx	 edx, BYTE PTR tv300[rsp]
  002e4	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv301[rsp]
  002e9	e8 00 00 00 00	 call	 ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
  002ee	89 44 24 48	 mov	 DWORD PTR tv302[rsp], eax
  002f2	8b 44 24 48	 mov	 eax, DWORD PTR tv302[rsp]
  002f6	89 44 24 4c	 mov	 DWORD PTR $T3[rsp], eax
  002fa	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  002ff	89 44 24 50	 mov	 DWORD PTR $T4[rsp], eax
  00303	48 8d 54 24 4c	 lea	 rdx, QWORD PTR $T3[rsp]
  00308	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T4[rsp]
  0030d	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  00312	0f b6 c0	 movzx	 eax, al
  00315	85 c0		 test	 eax, eax
  00317	74 0d		 je	 SHORT $LN15@operator

; 202  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 203  : 					{	// insertion failed, quit
; 204  : 					_State |= ios_base::badbit;

  00319	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  0031d	83 c8 04	 or	 eax, 4
  00320	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 205  : 					break;

  00324	eb 05		 jmp	 SHORT $LN14@operator
$LN15@operator:

; 206  : 					}

  00326	e9 48 ff ff ff	 jmp	 $LN5@operator
$LN14@operator:

; 207  : 		_Ostr.width(0);

  0032b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00333	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00336	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0033a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00342	48 03 c8	 add	 rcx, rax
  00345	48 8b c1	 mov	 rax, rcx
  00348	33 d2		 xor	 edx, edx
  0034a	48 8b c8	 mov	 rcx, rax
  0034d	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEAA_J_J@Z ; std::ios_base::width
  00352	90		 npad	 1
  00353	eb 00		 jmp	 SHORT $LN9@operator
$LN23@operator:
$LN9@operator:

; 208  : 		_CATCH_IO_(_Ostr)
; 209  : 		}
; 210  : 
; 211  : 	_Ostr.setstate(_State);

  00355	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0035d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00360	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00364	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0036c	48 03 c8	 add	 rcx, rax
  0036f	48 8b c1	 mov	 rax, rcx
  00372	45 33 c0	 xor	 r8d, r8d
  00375	8b 54 24 20	 mov	 edx, DWORD PTR _State$[rsp]
  00379	48 8b c8	 mov	 rcx, rax
  0037c	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate

; 212  : 	return (_Ostr);

  00381	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00389	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR $T5[rsp], rax
  00391	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Ok$[rsp]
  00399	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0039e	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR $T5[rsp]

; 213  : 	}

  003a6	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  003ad	c3		 ret	 0
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv295 = 36
tv300 = 37
_Pad$ = 40
_Size$ = 48
tv139 = 56
tv297 = 60
$T1 = 64
$T2 = 68
tv302 = 72
$T3 = 76
$T4 = 80
tv137 = 88
tv296 = 96
tv298 = 104
tv299 = 112
tv301 = 120
$T5 = 128
_Ok$ = 136
$T6 = 152
_Ostr$ = 176
_Str$ = 184
?dtor$0@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA PROC ; `std::operator<<<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rbp]
  00010	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA ENDP ; `std::operator<<<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
_State$ = 32
tv295 = 36
tv300 = 37
_Pad$ = 40
_Size$ = 48
tv139 = 56
tv297 = 60
$T1 = 64
$T2 = 68
tv302 = 72
$T3 = 76
$T4 = 80
tv137 = 88
tv296 = 96
tv298 = 104
tv299 = 112
tv301 = 120
$T5 = 128
_Ok$ = 136
$T6 = 152
_Ostr$ = 176
_Str$ = 184
?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA PROC ; `std::operator<<<char,std::char_traits<char>,std::allocator<char> >'::`1'::catch$1

; 208  : 		_CATCH_IO_(_Ostr)

  0001b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00020	55		 push	 rbp
  00021	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00025	48 8b ea	 mov	 rbp, rdx
__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0:
  00028	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0002f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00032	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00036	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0003d	48 03 c8	 add	 rcx, rax
  00040	48 8b c1	 mov	 rax, rcx
  00043	41 b0 01	 mov	 r8b, 1
  00046	ba 04 00 00 00	 mov	 edx, 4
  0004b	48 8b c8	 mov	 rcx, rax
  0004e	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  00053	90		 npad	 1
  00054	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  0005b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
  00061	cc		 int	 3
?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA ENDP ; `std::operator<<<char,std::char_traits<char>,std::allocator<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv295 = 36
tv300 = 37
_Pad$ = 40
_Size$ = 48
tv139 = 56
tv297 = 60
$T1 = 64
$T2 = 68
tv302 = 72
$T3 = 76
$T4 = 80
tv137 = 88
tv296 = 96
tv298 = 104
tv299 = 112
tv301 = 120
$T5 = 128
_Ok$ = 136
$T6 = 152
_Ostr$ = 176
_Str$ = 184
?dtor$0@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA PROC ; `std::operator<<<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rbp]
  00010	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA ENDP ; `std::operator<<<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv295 = 36
tv300 = 37
_Pad$ = 40
_Size$ = 48
tv139 = 56
tv297 = 60
$T1 = 64
$T2 = 68
tv302 = 72
$T3 = 76
$T4 = 80
tv137 = 88
tv296 = 96
tv298 = 104
tv299 = 112
tv301 = 120
$T5 = 128
_Ok$ = 136
$T6 = 152
_Ostr$ = 176
_Str$ = 184
?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA PROC ; `std::operator<<<char,std::char_traits<char>,std::allocator<char> >'::`1'::catch$1

; 208  : 		_CATCH_IO_(_Ostr)

  0001b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00020	55		 push	 rbp
  00021	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00025	48 8b ea	 mov	 rbp, rdx
__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0:
  00028	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0002f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00032	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00036	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0003d	48 03 c8	 add	 rcx, rax
  00040	48 8b c1	 mov	 rax, rcx
  00043	41 b0 01	 mov	 r8b, 1
  00046	ba 04 00 00 00	 mov	 edx, 4
  0004b	48 8b c8	 mov	 rcx, rax
  0004e	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  00053	90		 npad	 1
  00054	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  0005b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
  00061	cc		 int	 3
?catch$1@?0???$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA ENDP ; `std::operator<<<char,std::char_traits<char>,std::allocator<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp
; File d:\rtaudiojs\wav_read\playraw.cpp
_TEXT	SEGMENT
device$ = 80
dac$ = 88
offset$ = 96
channels$ = 100
bufferFrames$ = 104
fs$ = 108
$T1 = 112
oParams$ = 120
file$ = 136
data$ = 144
e$2 = 160
tv67 = 168
tv195 = 176
$T3 = 184
$T4 = 192
__$ArrayPad$ = 224
argc$ = 256
argv$ = 264
main	PROC

; 89   : {

$LN25:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00009	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00010	48 c7 84 24 b8
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T3[rsp], -2
  0001c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00023	48 33 c4	 xor	 rax, rsp
  00026	48 89 84 24 e0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 90   :   unsigned int channels, fs, bufferFrames, device = 0, offset = 0;

  0002e	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR device$[rsp], 0
  00036	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR offset$[rsp], 0

; 91   :   char *file;
; 92   : 
; 93   :   // minimal command-line checking
; 94   :   if ( argc < 4 || argc > 6 ) usage();

  0003e	83 bc 24 00 01
	00 00 04	 cmp	 DWORD PTR argc$[rsp], 4
  00046	7c 0a		 jl	 SHORT $LN5@main
  00048	83 bc 24 00 01
	00 00 06	 cmp	 DWORD PTR argc$[rsp], 6
  00050	7e 05		 jle	 SHORT $LN4@main
$LN5@main:
  00052	e8 00 00 00 00	 call	 ?usage@@YAXXZ		; usage
$LN4@main:

; 95   : 
; 96   :   RtAudio dac;

  00057	33 d2		 xor	 edx, edx
  00059	48 8d 4c 24 58	 lea	 rcx, QWORD PTR dac$[rsp]
  0005e	e8 00 00 00 00	 call	 ??0RtAudio@@QEAA@W4Api@0@@Z ; RtAudio::RtAudio
  00063	90		 npad	 1

; 97   :   if ( dac.getDeviceCount() < 1 ) {

  00064	48 8d 4c 24 58	 lea	 rcx, QWORD PTR dac$[rsp]
  00069	e8 00 00 00 00	 call	 ?getDeviceCount@RtAudio@@QEAAIXZ ; RtAudio::getDeviceCount
  0006e	83 f8 01	 cmp	 eax, 1
  00071	73 1a		 jae	 SHORT $LN6@main

; 98   :     std::cout << "\nNo audio devices found!\n";

  00073	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123185
  0007a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  00081	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 99   :     exit( 0 );

  00086	33 c9		 xor	 ecx, ecx
  00088	e8 00 00 00 00	 call	 exit
$LN6@main:

; 100  :   }
; 101  : 
; 102  :   channels = (unsigned int) atoi( argv[1]) ;

  0008d	b8 08 00 00 00	 mov	 eax, 8
  00092	48 6b c0 01	 imul	 rax, rax, 1
  00096	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR argv$[rsp]
  0009e	48 8b 0c 01	 mov	 rcx, QWORD PTR [rcx+rax]
  000a2	e8 00 00 00 00	 call	 atoi
  000a7	89 44 24 64	 mov	 DWORD PTR channels$[rsp], eax

; 103  :   fs = (unsigned int) atoi( argv[2] );

  000ab	b8 08 00 00 00	 mov	 eax, 8
  000b0	48 6b c0 02	 imul	 rax, rax, 2
  000b4	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR argv$[rsp]
  000bc	48 8b 0c 01	 mov	 rcx, QWORD PTR [rcx+rax]
  000c0	e8 00 00 00 00	 call	 atoi
  000c5	89 44 24 6c	 mov	 DWORD PTR fs$[rsp], eax

; 104  :   file = argv[3];

  000c9	b8 08 00 00 00	 mov	 eax, 8
  000ce	48 6b c0 03	 imul	 rax, rax, 3
  000d2	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR argv$[rsp]
  000da	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  000de	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR file$[rsp], rax

; 105  :   if ( argc > 4 )

  000e6	83 bc 24 00 01
	00 00 04	 cmp	 DWORD PTR argc$[rsp], 4
  000ee	7e 1e		 jle	 SHORT $LN7@main

; 106  :     device = (unsigned int) atoi( argv[4] );

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 04	 imul	 rax, rax, 4
  000f9	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR argv$[rsp]
  00101	48 8b 0c 01	 mov	 rcx, QWORD PTR [rcx+rax]
  00105	e8 00 00 00 00	 call	 atoi
  0010a	89 44 24 50	 mov	 DWORD PTR device$[rsp], eax
$LN7@main:

; 107  :   if ( argc > 5 )

  0010e	83 bc 24 00 01
	00 00 05	 cmp	 DWORD PTR argc$[rsp], 5
  00116	7e 1e		 jle	 SHORT $LN8@main

; 108  :     offset = (unsigned int) atoi( argv[5] );

  00118	b8 08 00 00 00	 mov	 eax, 8
  0011d	48 6b c0 05	 imul	 rax, rax, 5
  00121	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR argv$[rsp]
  00129	48 8b 0c 01	 mov	 rcx, QWORD PTR [rcx+rax]
  0012d	e8 00 00 00 00	 call	 atoi
  00132	89 44 24 60	 mov	 DWORD PTR offset$[rsp], eax
$LN8@main:

; 109  : 
; 110  :   OutputData data;
; 111  :   data.fd = fopen( file, "rb" );

  00136	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123188
  0013d	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR file$[rsp]
  00145	e8 00 00 00 00	 call	 fopen
  0014a	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR data$[rsp], rax

; 112  :   if ( !data.fd ) {

  00152	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR data$[rsp], 0
  0015b	75 1d		 jne	 SHORT $LN9@main

; 113  :     std::cout << "Unable to find or open file!\n";

  0015d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123190
  00164	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  0016b	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 114  :     exit( 1 );

  00170	b9 01 00 00 00	 mov	 ecx, 1
  00175	e8 00 00 00 00	 call	 exit
$LN9@main:

; 115  :   }
; 116  : 
; 117  :   // Set our stream parameters for output only.
; 118  :   bufferFrames = 512;

  0017a	c7 44 24 68 00
	02 00 00	 mov	 DWORD PTR bufferFrames$[rsp], 512 ; 00000200H

; 119  :   RtAudio::StreamParameters oParams;

  00182	48 8d 4c 24 78	 lea	 rcx, QWORD PTR oParams$[rsp]
  00187	e8 00 00 00 00	 call	 ??0StreamParameters@RtAudio@@QEAA@XZ ; RtAudio::StreamParameters::StreamParameters

; 120  :   oParams.deviceId = device;

  0018c	8b 44 24 50	 mov	 eax, DWORD PTR device$[rsp]
  00190	89 44 24 78	 mov	 DWORD PTR oParams$[rsp], eax

; 121  :   oParams.nChannels = channels;

  00194	8b 44 24 64	 mov	 eax, DWORD PTR channels$[rsp]
  00198	89 44 24 7c	 mov	 DWORD PTR oParams$[rsp+4], eax

; 122  :   oParams.firstChannel = offset;

  0019c	8b 44 24 60	 mov	 eax, DWORD PTR offset$[rsp]
  001a0	89 84 24 80 00
	00 00		 mov	 DWORD PTR oParams$[rsp+8], eax

; 123  : 
; 124  :   if ( device == 0 )

  001a7	83 7c 24 50 00	 cmp	 DWORD PTR device$[rsp], 0
  001ac	75 0e		 jne	 SHORT $LN10@main

; 125  :     oParams.deviceId = dac.getDefaultOutputDevice();

  001ae	48 8d 4c 24 58	 lea	 rcx, QWORD PTR dac$[rsp]
  001b3	e8 00 00 00 00	 call	 ?getDefaultOutputDevice@RtAudio@@QEAAIXZ ; RtAudio::getDefaultOutputDevice
  001b8	89 44 24 78	 mov	 DWORD PTR oParams$[rsp], eax
$LN10@main:

; 126  : 
; 127  :   data.channels = channels;

  001bc	8b 44 24 64	 mov	 eax, DWORD PTR channels$[rsp]
  001c0	89 84 24 98 00
	00 00		 mov	 DWORD PTR data$[rsp+8], eax

; 128  :   try {
; 129  :     dac.openStream( &oParams, NULL, FORMAT, fs, &bufferFrames, &output, (void *)&data );

  001c7	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR [rsp+72], 0
  001d0	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  001d9	48 8d 84 24 90
	00 00 00	 lea	 rax, QWORD PTR data$[rsp]
  001e1	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  001e6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?output@@YAHPEAX0INI0@Z ; output
  001ed	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  001f2	48 8d 44 24 68	 lea	 rax, QWORD PTR bufferFrames$[rsp]
  001f7	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001fc	8b 44 24 6c	 mov	 eax, DWORD PTR fs$[rsp]
  00200	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00204	41 b9 02 00 00
	00		 mov	 r9d, 2
  0020a	45 33 c0	 xor	 r8d, r8d
  0020d	48 8d 54 24 78	 lea	 rdx, QWORD PTR oParams$[rsp]
  00212	48 8d 4c 24 58	 lea	 rcx, QWORD PTR dac$[rsp]
  00217	e8 00 00 00 00	 call	 ?openStream@RtAudio@@QEAAXPEAUStreamParameters@1@0KIPEAIP6AHPEAX2INI2@Z2PEAUStreamOptions@1@P6AXW4Type@RtAudioError@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z ; RtAudio::openStream

; 130  :     dac.startStream();

  0021c	48 8d 4c 24 58	 lea	 rcx, QWORD PTR dac$[rsp]
  00221	e8 00 00 00 00	 call	 ?startStream@RtAudio@@QEAAXXZ ; RtAudio::startStream
  00226	90		 npad	 1
  00227	eb 00		 jmp	 SHORT $LN21@main
$LN22@main:
$LN21@main:
  00229	eb 05		 jmp	 SHORT $LN19@main
$LN20@main:

; 131  :   }
; 132  :   catch ( RtAudioError& e ) {
; 133  :     std::cout << '\n' << e.getMessage() << '\n' << std::endl;
; 134  :     goto cleanup;

  0022b	e9 83 00 00 00	 jmp	 $cleanup$26
$LN19@main:

; 135  :   }
; 136  : 
; 137  :   std::cout << "\nPlaying raw file " << file << " (buffer frames = " << bufferFrames << ")." << std::endl;

  00230	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123197
  00237	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  0023e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00243	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR file$[rsp]
  0024b	48 8b c8	 mov	 rcx, rax
  0024e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00253	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123196
  0025a	48 8b c8	 mov	 rcx, rax
  0025d	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00262	8b 54 24 68	 mov	 edx, DWORD PTR bufferFrames$[rsp]
  00266	48 8b c8	 mov	 rcx, rax
  00269	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
  0026e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123195
  00275	48 8b c8	 mov	 rcx, rax
  00278	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0027d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  00284	48 8b c8	 mov	 rcx, rax
  00287	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
$LN2@main:

; 138  :   while ( 1 ) {

  0028c	33 c0		 xor	 eax, eax
  0028e	83 f8 01	 cmp	 eax, 1
  00291	74 20		 je	 SHORT $cleanup$26

; 139  :     SLEEP( 100 ); // wake every 100 ms to check if we're done

  00293	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00298	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_Sleep

; 140  :     if ( dac.isStreamRunning() == false ) break;

  0029e	48 8d 4c 24 58	 lea	 rcx, QWORD PTR dac$[rsp]
  002a3	e8 00 00 00 00	 call	 ?isStreamRunning@RtAudio@@QEBA_NXZ ; RtAudio::isStreamRunning
  002a8	0f b6 c0	 movzx	 eax, al
  002ab	85 c0		 test	 eax, eax
  002ad	75 02		 jne	 SHORT $LN13@main
  002af	eb 02		 jmp	 SHORT $cleanup$26
$LN13@main:

; 141  :   }

  002b1	eb d9		 jmp	 SHORT $LN2@main
$cleanup$26:

; 142  : 
; 143  :  cleanup:
; 144  :   fclose( data.fd );

  002b3	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  002bb	e8 00 00 00 00	 call	 fclose

; 145  :   dac.closeStream();

  002c0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR dac$[rsp]
  002c5	e8 00 00 00 00	 call	 ?closeStream@RtAudio@@QEAAXXZ ; RtAudio::closeStream

; 146  : 
; 147  :   return 0;

  002ca	c7 44 24 70 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
  002d2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR dac$[rsp]
  002d7	e8 00 00 00 00	 call	 ??1RtAudio@@QEAA@XZ	; RtAudio::~RtAudio
  002dc	8b 44 24 70	 mov	 eax, DWORD PTR $T1[rsp]

; 148  : }

  002e0	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  002e8	48 33 cc	 xor	 rcx, rsp
  002eb	e8 00 00 00 00	 call	 __security_check_cookie
  002f0	48 81 c4 f8 00
	00 00		 add	 rsp, 248		; 000000f8H
  002f7	c3		 ret	 0
$LN23@main:
main	ENDP
_TEXT	ENDS
text$x	SEGMENT
device$ = 80
dac$ = 88
offset$ = 96
channels$ = 100
bufferFrames$ = 104
fs$ = 108
$T1 = 112
oParams$ = 120
file$ = 136
data$ = 144
e$2 = 160
tv67 = 168
tv195 = 176
$T3 = 184
$T4 = 192
__$ArrayPad$ = 224
argc$ = 256
argv$ = 264
main$dtor$0 PROC
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 58	 lea	 rcx, QWORD PTR dac$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1RtAudio@@QEAA@XZ	; RtAudio::~RtAudio
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
main$dtor$0 ENDP
device$ = 80
dac$ = 88
offset$ = 96
channels$ = 100
bufferFrames$ = 104
fs$ = 108
$T1 = 112
oParams$ = 120
file$ = 136
data$ = 144
e$2 = 160
tv67 = 168
tv195 = 176
$T3 = 184
$T4 = 192
__$ArrayPad$ = 224
argc$ = 256
argv$ = 264
main$catch$2 PROC

; 131  :   }
; 132  :   catch ( RtAudioError& e ) {

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$main$0:

; 131  :   }
; 132  :   catch ( RtAudioError& e ) {
; 133  :     std::cout << '\n' << e.getMessage() << '\n' << std::endl;

  00025	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR e$2[rbp]
  0002c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002f	48 8d 95 c0 00
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00036	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR e$2[rbp]
  0003d	ff 50 20	 call	 QWORD PTR [rax+32]
  00040	48 89 85 a8 00
	00 00		 mov	 QWORD PTR tv67[rbp], rax
  00047	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR tv67[rbp]
  0004e	48 89 85 b0 00
	00 00		 mov	 QWORD PTR tv195[rbp], rax
  00055	b2 0a		 mov	 dl, 10
  00057	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  0005e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
  00063	48 8b 95 b0 00
	00 00		 mov	 rdx, QWORD PTR tv195[rbp]
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
  00072	b2 0a		 mov	 dl, 10
  00074	48 8b c8	 mov	 rcx, rax
  00077	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
  0007c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  00083	48 8b c8	 mov	 rcx, rax
  00086	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
  0008b	90		 npad	 1
  0008c	48 8d 8d c0 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00093	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00098	90		 npad	 1

; 142  : 
; 143  :  cleanup:

  00099	48 8d 05 00 00
	00 00		 lea	 rax, $LN20@main$catch
  000a0	eb 07		 jmp	 SHORT $LN24@main$catch

; 135  :   }

  000a2	48 8d 05 00 00
	00 00		 lea	 rax, $LN22@main$catch
$LN24@main$catch:
  000a9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000ad	5d		 pop	 rbp
  000ae	c3		 ret	 0
  000af	cc		 int	 3
main$catch$2 ENDP
device$ = 80
dac$ = 88
offset$ = 96
channels$ = 100
bufferFrames$ = 104
fs$ = 108
$T1 = 112
oParams$ = 120
file$ = 136
data$ = 144
e$2 = 160
tv67 = 168
tv195 = 176
$T3 = 184
$T4 = 192
__$ArrayPad$ = 224
argc$ = 256
argv$ = 264
main$dtor$1 PROC
  000b0	40 55		 push	 rbp
  000b2	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  000b6	48 8b ea	 mov	 rbp, rdx
  000b9	48 8d 8d c0 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  000c0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c5	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c9	5d		 pop	 rbp
  000ca	c3		 ret	 0
main$dtor$1 ENDP
text$x	ENDS
; Function compile flags: /Odtp
text$x	SEGMENT
device$ = 80
dac$ = 88
offset$ = 96
channels$ = 100
bufferFrames$ = 104
fs$ = 108
$T1 = 112
oParams$ = 120
file$ = 136
data$ = 144
e$2 = 160
tv67 = 168
tv195 = 176
$T3 = 184
$T4 = 192
__$ArrayPad$ = 224
argc$ = 256
argv$ = 264
main$dtor$0 PROC
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 58	 lea	 rcx, QWORD PTR dac$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1RtAudio@@QEAA@XZ	; RtAudio::~RtAudio
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
main$dtor$0 ENDP
text$x	ENDS
; Function compile flags: /Odtp
text$x	SEGMENT
device$ = 80
dac$ = 88
offset$ = 96
channels$ = 100
bufferFrames$ = 104
fs$ = 108
$T1 = 112
oParams$ = 120
file$ = 136
data$ = 144
e$2 = 160
tv67 = 168
tv195 = 176
$T3 = 184
$T4 = 192
__$ArrayPad$ = 224
argc$ = 256
argv$ = 264
main$catch$2 PROC

; 132  :   catch ( RtAudioError& e ) {

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$main$0:

; 133  :     std::cout << '\n' << e.getMessage() << '\n' << std::endl;

  00025	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR e$2[rbp]
  0002c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002f	48 8d 95 c0 00
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00036	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR e$2[rbp]
  0003d	ff 50 20	 call	 QWORD PTR [rax+32]
  00040	48 89 85 a8 00
	00 00		 mov	 QWORD PTR tv67[rbp], rax
  00047	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR tv67[rbp]
  0004e	48 89 85 b0 00
	00 00		 mov	 QWORD PTR tv195[rbp], rax
  00055	b2 0a		 mov	 dl, 10
  00057	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  0005e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
  00063	48 8b 95 b0 00
	00 00		 mov	 rdx, QWORD PTR tv195[rbp]
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
  00072	b2 0a		 mov	 dl, 10
  00074	48 8b c8	 mov	 rcx, rax
  00077	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
  0007c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  00083	48 8b c8	 mov	 rcx, rax
  00086	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
  0008b	90		 npad	 1
  0008c	48 8d 8d c0 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00093	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00098	90		 npad	 1

; 136  : 
; 137  :   std::cout << "\nPlaying raw file " << file << " (buffer frames = " << bufferFrames << ")." << std::endl;
; 138  :   while ( 1 ) {
; 139  :     SLEEP( 100 ); // wake every 100 ms to check if we're done
; 140  :     if ( dac.isStreamRunning() == false ) break;
; 141  :   }
; 142  : 
; 143  :  cleanup:

  00099	48 8d 05 00 00
	00 00		 lea	 rax, $LN20@main$catch
  000a0	eb 07		 jmp	 SHORT $LN24@main$catch

; 134  :     goto cleanup;
; 135  :   }

  000a2	48 8d 05 00 00
	00 00		 lea	 rax, $LN22@main$catch
$LN24@main$catch:
  000a9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000ad	5d		 pop	 rbp
  000ae	c3		 ret	 0
  000af	cc		 int	 3
main$catch$2 ENDP
text$x	ENDS
; Function compile flags: /Odtp
text$x	SEGMENT
device$ = 80
dac$ = 88
offset$ = 96
channels$ = 100
bufferFrames$ = 104
fs$ = 108
$T1 = 112
oParams$ = 120
file$ = 136
data$ = 144
e$2 = 160
tv67 = 168
tv195 = 176
$T3 = 184
$T4 = 192
__$ArrayPad$ = 224
argc$ = 256
argv$ = 264
main$dtor$1 PROC
  000b0	40 55		 push	 rbp
  000b2	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  000b6	48 8b ea	 mov	 rbp, rdx
  000b9	48 8d 8d c0 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  000c0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c5	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c9	5d		 pop	 rbp
  000ca	c3		 ret	 0
main$dtor$1 ENDP
text$x	ENDS
; Function compile flags: /Odtp
; File d:\rtaudiojs\wav_read\playraw.cpp
_TEXT	SEGMENT
count$ = 32
bytes$1 = 36
startByte$2 = 40
oData$ = 48
outputBuffer$ = 80
__formal$ = 88
nBufferFrames$ = 96
__formal$ = 104
__formal$ = 112
data$ = 120
?output@@YAHPEAX0INI0@Z PROC				; output

; 71   : {

$LN4:
  00000	f2 0f 11 5c 24
	20		 movsd	 QWORD PTR [rsp+32], xmm3
  00006	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00015	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 72   :   OutputData *oData = (OutputData*) data;

  00019	48 8b 44 24 78	 mov	 rax, QWORD PTR data$[rsp]
  0001e	48 89 44 24 30	 mov	 QWORD PTR oData$[rsp], rax

; 73   : 
; 74   :   // In general, it's not a good idea to do file input in the audio
; 75   :   // callback function but I'm doing it here because I don't know the
; 76   :   // length of the file we are reading.
; 77   :   unsigned int count = fread( outputBuffer, oData->channels * sizeof( MY_TYPE ), nBufferFrames, oData->fd);

  00023	8b 44 24 60	 mov	 eax, DWORD PTR nBufferFrames$[rsp]
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR oData$[rsp]
  0002c	8b 49 08	 mov	 ecx, DWORD PTR [rcx+8]
  0002f	48 d1 e1	 shl	 rcx, 1
  00032	48 8b 54 24 30	 mov	 rdx, QWORD PTR oData$[rsp]
  00037	4c 8b 0a	 mov	 r9, QWORD PTR [rdx]
  0003a	44 8b c0	 mov	 r8d, eax
  0003d	48 8b d1	 mov	 rdx, rcx
  00040	48 8b 4c 24 50	 mov	 rcx, QWORD PTR outputBuffer$[rsp]
  00045	e8 00 00 00 00	 call	 fread
  0004a	89 44 24 20	 mov	 DWORD PTR count$[rsp], eax

; 78   :   if ( count < nBufferFrames ) {

  0004e	8b 44 24 60	 mov	 eax, DWORD PTR nBufferFrames$[rsp]
  00052	39 44 24 20	 cmp	 DWORD PTR count$[rsp], eax
  00056	73 5a		 jae	 SHORT $LN2@output

; 79   :     unsigned int bytes = (nBufferFrames - count) * oData->channels * sizeof( MY_TYPE );

  00058	8b 44 24 20	 mov	 eax, DWORD PTR count$[rsp]
  0005c	8b 4c 24 60	 mov	 ecx, DWORD PTR nBufferFrames$[rsp]
  00060	2b c8		 sub	 ecx, eax
  00062	8b c1		 mov	 eax, ecx
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR oData$[rsp]
  00069	0f af 41 08	 imul	 eax, DWORD PTR [rcx+8]
  0006d	8b c0		 mov	 eax, eax
  0006f	48 d1 e0	 shl	 rax, 1
  00072	89 44 24 24	 mov	 DWORD PTR bytes$1[rsp], eax

; 80   :     unsigned int startByte = count * oData->channels * sizeof( MY_TYPE );

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR oData$[rsp]
  0007b	8b 4c 24 20	 mov	 ecx, DWORD PTR count$[rsp]
  0007f	0f af 48 08	 imul	 ecx, DWORD PTR [rax+8]
  00083	8b c1		 mov	 eax, ecx
  00085	8b c0		 mov	 eax, eax
  00087	48 d1 e0	 shl	 rax, 1
  0008a	89 44 24 28	 mov	 DWORD PTR startByte$2[rsp], eax

; 81   :     memset( (char *)(outputBuffer)+startByte, 0, bytes );

  0008e	8b 44 24 24	 mov	 eax, DWORD PTR bytes$1[rsp]
  00092	8b 4c 24 28	 mov	 ecx, DWORD PTR startByte$2[rsp]
  00096	48 8b 54 24 50	 mov	 rdx, QWORD PTR outputBuffer$[rsp]
  0009b	48 03 d1	 add	 rdx, rcx
  0009e	48 8b ca	 mov	 rcx, rdx
  000a1	44 8b c0	 mov	 r8d, eax
  000a4	33 d2		 xor	 edx, edx
  000a6	e8 00 00 00 00	 call	 memset

; 82   :     return 1;

  000ab	b8 01 00 00 00	 mov	 eax, 1
  000b0	eb 02		 jmp	 SHORT $LN1@output
$LN2@output:

; 83   :   }
; 84   : 
; 85   :   return 0;

  000b2	33 c0		 xor	 eax, eax
$LN1@output:

; 86   : }

  000b4	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000b8	c3		 ret	 0
?output@@YAHPEAX0INI0@Z ENDP				; output
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\rtaudiojs\wav_read\playraw.cpp
_TEXT	SEGMENT
?usage@@YAXXZ PROC					; usage

; 51   : void usage( void ) {

$LN3:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 52   :   // Error function in case of incorrect command-line
; 53   :   // argument specifications
; 54   :   std::cout << "\nusage: playraw N fs file <device> <channelOffset>\n";

  00004	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123011
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  00012	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 55   :   std::cout << "    where N = number of channels,\n";

  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123012
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  00025	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 56   :   std::cout << "    fs = the sample rate, \n";

  0002a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123013
  00031	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  00038	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 57   :   std::cout << "    file = the raw file to play,\n";

  0003d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123014
  00044	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  0004b	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 58   :   std::cout << "    device = optional device to use (default = 0),\n";

  00050	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123015
  00057	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  0005e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 59   :   std::cout << "    and channelOffset = an optional channel offset on the device (default = 0).\n\n";

  00063	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG123016
  0006a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  00071	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 60   :   exit( 0 );

  00076	33 c9		 xor	 ecx, ecx
  00078	e8 00 00 00 00	 call	 exit
$LN2@usage:

; 61   : }

  0007d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00081	c3		 ret	 0
?usage@@YAXXZ ENDP					; usage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail, COMDAT

; 313  : 		{	// count number of available positions in write buffer

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00009	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  00012	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00016	74 10		 je	 SHORT $LN3@Pnavail
  00018	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00021	8b 00		 mov	 eax, DWORD PTR [rax]
  00023	89 04 24	 mov	 DWORD PTR tv69[rsp], eax
  00026	eb 07		 jmp	 SHORT $LN4@Pnavail
$LN3@Pnavail:
  00028	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv69[rsp], 0
$LN4@Pnavail:
  0002f	48 63 04 24	 movsxd	 rax, DWORD PTR tv69[rsp]

; 315  : 		}

  00033	48 83 c4 18	 add	 rsp, 24
  00037	c3		 ret	 0
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
_TEXT	SEGMENT
tv76 = 0
this$ = 32
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc, COMDAT

; 307  : 		{	// increment current position in write buffer

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 308  : 		--*_IPcount;

  00009	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00012	8b 00		 mov	 eax, DWORD PTR [rax]
  00014	ff c8		 dec	 eax
  00016	48 8b 4c 24 20	 mov	 rcx, QWORD PTR this$[rsp]
  0001b	48 8b 49 58	 mov	 rcx, QWORD PTR [rcx+88]
  0001f	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00021	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00026	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  0002a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002d	48 89 04 24	 mov	 QWORD PTR tv76[rsp], rax
  00031	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  0003a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003d	48 ff c0	 inc	 rax
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR this$[rsp]
  00045	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00049	48 89 01	 mov	 QWORD PTR [rcx], rax
  0004c	48 8b 04 24	 mov	 rax, QWORD PTR tv76[rsp]

; 310  : 		}

  00050	48 83 c4 18	 add	 rsp, 24
  00054	c3		 ret	 0
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputn, COMDAT

; 207  : 		{	// put _Count characters from array beginning at _Ptr

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 208  : 		return (xsputn(_Ptr, _Count));

  00013	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00018	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001b	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  00020	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	ff 50 48	 call	 QWORD PTR [rax+72]

; 209  : 		}

  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	c3		 ret	 0
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
_TEXT	SEGMENT
tv78 = 32
$T1 = 40
tv79 = 48
this$ = 80
_Ch$ = 88
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputc, COMDAT

; 199  : 		{	// put a character

$LN5:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 200  : 		return (0 < _Pnavail()

  0000d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
  00017	48 85 c0	 test	 rax, rax
  0001a	7e 2b		 jle	 SHORT $LN3@sputc
  0001c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00021	e8 00 00 00 00	 call	 ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
  00026	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  0002b	48 8b 44 24 28	 mov	 rax, QWORD PTR $T1[rsp]
  00030	0f b6 4c 24 58	 movzx	 ecx, BYTE PTR _Ch$[rsp]
  00035	88 08		 mov	 BYTE PTR [rax], cl
  00037	48 8b 4c 24 28	 mov	 rcx, QWORD PTR $T1[rsp]
  0003c	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHAEBD@Z ; std::char_traits<char>::to_int_type
  00041	89 44 24 20	 mov	 DWORD PTR tv78[rsp], eax
  00045	eb 2a		 jmp	 SHORT $LN4@sputc
$LN3@sputc:
  00047	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Ch$[rsp]
  0004c	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHAEBD@Z ; std::char_traits<char>::to_int_type
  00051	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00056	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00059	48 89 4c 24 30	 mov	 QWORD PTR tv79[rsp], rcx
  0005e	8b d0		 mov	 edx, eax
  00060	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00065	48 8b 44 24 30	 mov	 rax, QWORD PTR tv79[rsp]
  0006a	ff 50 18	 call	 QWORD PTR [rax+24]
  0006d	89 44 24 20	 mov	 DWORD PTR tv78[rsp], eax
$LN4@sputc:
  00071	8b 44 24 20	 mov	 eax, DWORD PTR tv78[rsp]

; 201  : 			? _Traits::to_int_type(*_Pninc() = _Ch)
; 202  : 			: overflow(_Traits::to_int_type(_Ch)));
; 203  : 		}

  00075	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00079	c3		 ret	 0
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
_TEXT	SEGMENT
this$ = 48
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pubsync, COMDAT

; 144  : 		{	// synchronize with external agent

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 145  : 		return (sync());

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00016	ff 50 68	 call	 QWORD PTR [rax+104]

; 146  : 		}

  00019	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001d	c3		 ret	 0
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\rtaudiojs\lib\rtaudio\rtaudio.h
;	COMDAT ?isStreamRunning@RtApi@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 0
this$ = 32
?isStreamRunning@RtApi@@QEBA_NXZ PROC			; RtApi::isStreamRunning, COMDAT

; 710  :   bool isStreamRunning( void ) const { return stream_.state == STREAM_RUNNING; }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24
  00009	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0000e	83 b8 2c 01 00
	00 02		 cmp	 DWORD PTR [rax+300], 2
  00015	75 09		 jne	 SHORT $LN3@isStreamRu
  00017	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  0001e	eb 07		 jmp	 SHORT $LN4@isStreamRu
$LN3@isStreamRu:
  00020	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@isStreamRu:
  00027	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]
  0002b	48 83 c4 18	 add	 rsp, 24
  0002f	c3		 ret	 0
?isStreamRunning@RtApi@@QEBA_NXZ ENDP			; RtApi::isStreamRunning
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\rtaudiojs\lib\rtaudio\rtaudio.h
;	COMDAT ?isStreamRunning@RtAudio@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 48
?isStreamRunning@RtAudio@@QEBA_NXZ PROC			; RtAudio::isStreamRunning, COMDAT

; 849  : inline bool RtAudio :: isStreamRunning( void ) const { return rtapi_->isStreamRunning(); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00011	e8 00 00 00 00	 call	 ?isStreamRunning@RtApi@@QEBA_NXZ ; RtApi::isStreamRunning
  00016	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001a	c3		 ret	 0
?isStreamRunning@RtAudio@@QEBA_NXZ ENDP			; RtAudio::isStreamRunning
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\rtaudiojs\lib\rtaudio\rtaudio.h
;	COMDAT ?startStream@RtAudio@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?startStream@RtAudio@@QEAAXXZ PROC			; RtAudio::startStream, COMDAT

; 845  : inline void RtAudio :: startStream( void ) { return rtapi_->startStream(); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00016	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00019	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001c	ff 50 38	 call	 QWORD PTR [rax+56]
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
?startStream@RtAudio@@QEAAXXZ ENDP			; RtAudio::startStream
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\rtaudiojs\lib\rtaudio\rtaudio.h
;	COMDAT ?closeStream@RtAudio@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?closeStream@RtAudio@@QEAAXXZ PROC			; RtAudio::closeStream, COMDAT

; 844  : inline void RtAudio :: closeStream( void ) { return rtapi_->closeStream(); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00016	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00019	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001c	ff 50 30	 call	 QWORD PTR [rax+48]
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
?closeStream@RtAudio@@QEAAXXZ ENDP			; RtAudio::closeStream
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\rtaudiojs\lib\rtaudio\rtaudio.h
;	COMDAT ?getDefaultOutputDevice@RtAudio@@QEAAIXZ
_TEXT	SEGMENT
this$ = 48
?getDefaultOutputDevice@RtAudio@@QEAAIXZ PROC		; RtAudio::getDefaultOutputDevice, COMDAT

; 843  : inline unsigned int RtAudio :: getDefaultOutputDevice( void ) { return rtapi_->getDefaultOutputDevice(); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00016	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00019	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001c	ff 50 28	 call	 QWORD PTR [rax+40]
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
?getDefaultOutputDevice@RtAudio@@QEAAIXZ ENDP		; RtAudio::getDefaultOutputDevice
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\rtaudiojs\lib\rtaudio\rtaudio.h
;	COMDAT ?getDeviceCount@RtAudio@@QEAAIXZ
_TEXT	SEGMENT
this$ = 48
?getDeviceCount@RtAudio@@QEAAIXZ PROC			; RtAudio::getDeviceCount, COMDAT

; 840  : inline unsigned int RtAudio :: getDeviceCount( void ) { return rtapi_->getDeviceCount(); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00016	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00019	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001c	ff 50 10	 call	 QWORD PTR [rax+16]
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
?getDeviceCount@RtAudio@@QEAAIXZ ENDP			; RtAudio::getDeviceCount
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\rtaudiojs\lib\rtaudio\rtaudio.h
;	COMDAT ??0StreamParameters@RtAudio@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0StreamParameters@RtAudio@@QEAA@XZ PROC		; RtAudio::StreamParameters::StreamParameters, COMDAT

; 317  :     StreamParameters()

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 318  :       : deviceId(0), nChannels(0), firstChannel(0) {}

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  00010	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00015	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [rax+4], 0
  0001c	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00021	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0
  00028	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0002d	c3		 ret	 0
??0StreamParameters@RtAudio@@QEAA@XZ ENDP		; RtAudio::StreamParameters::StreamParameters
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
_TEXT	SEGMENT
_State$ = 32
tv283 = 36
tv288 = 37
_Pad$1 = 40
tv65 = 48
tv285 = 52
$T2 = 56
$T3 = 60
tv287 = 64
$T4 = 68
$T5 = 72
tv290 = 76
$T6 = 80
$T7 = 84
tv130 = 88
tv284 = 96
tv286 = 104
tv289 = 112
$T8 = 120
_Ok$ = 128
$T9 = 144
_Ostr$ = 176
_Ch$ = 184
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 826  : 	{	// insert a char into char stream

$LN23:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H
  00010	48 c7 84 24 90
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T9[rsp], -2

; 827  : 	typedef char _Elem;
; 828  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 829  : 	ios_base::iostate _State = ios_base::goodbit;

  0001c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _State$[rsp], 0

; 830  : 	const typename _Myos::sentry _Ok(_Ostr);

  00024	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  0002c	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Ok$[rsp]
  00034	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  00039	90		 npad	 1

; 831  : 
; 832  : 	if (_Ok)

  0003a	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Ok$[rsp]
  00042	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00047	0f b6 c0	 movzx	 eax, al
  0004a	85 c0		 test	 eax, eax
  0004c	0f 84 a9 02 00
	00		 je	 $LN8@operator

; 833  : 		{	// state okay, insert
; 834  : 		streamsize _Pad = _Ostr.width() <= 1 ? 0 : _Ostr.width() - 1;

  00052	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00061	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00069	48 03 c8	 add	 rcx, rax
  0006c	48 8b c1	 mov	 rax, rcx
  0006f	48 8b c8	 mov	 rcx, rax
  00072	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  00077	48 83 f8 01	 cmp	 rax, 1
  0007b	7f 0b		 jg	 SHORT $LN15@operator
  0007d	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR tv130[rsp], 0
  00086	eb 2d		 jmp	 SHORT $LN16@operator
$LN15@operator:
  00088	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00097	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0009f	48 03 c8	 add	 rcx, rax
  000a2	48 8b c1	 mov	 rax, rcx
  000a5	48 8b c8	 mov	 rcx, rax
  000a8	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  000ad	48 ff c8	 dec	 rax
  000b0	48 89 44 24 58	 mov	 QWORD PTR tv130[rsp], rax
$LN16@operator:
  000b5	48 8b 44 24 58	 mov	 rax, QWORD PTR tv130[rsp]
  000ba	48 89 44 24 28	 mov	 QWORD PTR _Pad$1[rsp], rax

; 835  : 
; 836  : 		_TRY_IO_BEGIN
; 837  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

  000bf	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  000c7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ca	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000ce	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  000d6	48 03 c8	 add	 rcx, rax
  000d9	48 8b c1	 mov	 rax, rcx
  000dc	48 8b c8	 mov	 rcx, rax
  000df	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  000e4	89 44 24 30	 mov	 DWORD PTR tv65[rsp], eax
  000e8	8b 44 24 30	 mov	 eax, DWORD PTR tv65[rsp]
  000ec	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  000f1	83 f8 40	 cmp	 eax, 64			; 00000040H
  000f4	0f 84 c3 00 00
	00		 je	 $LN10@operator

; 838  : 			for (; _State == ios_base::goodbit && 0 < _Pad;

  000fa	eb 0d		 jmp	 SHORT $LN4@operator
$LN2@operator:

; 839  : 				--_Pad)	// pad on left

  000fc	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pad$1[rsp]
  00101	48 ff c8	 dec	 rax
  00104	48 89 44 24 28	 mov	 QWORD PTR _Pad$1[rsp], rax
$LN4@operator:

; 838  : 			for (; _State == ios_base::goodbit && 0 < _Pad;

  00109	83 7c 24 20 00	 cmp	 DWORD PTR _State$[rsp], 0
  0010e	0f 85 a9 00 00
	00		 jne	 $LN10@operator
  00114	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pad$1[rsp], 0
  0011a	0f 8e 9d 00 00
	00		 jle	 $LN10@operator

; 840  : 				if (_Traits::eq_int_type(_Traits::eof(),

  00120	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00128	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0012b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0012f	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00137	48 03 c8	 add	 rcx, rax
  0013a	48 8b c1	 mov	 rax, rcx
  0013d	48 8b c8	 mov	 rcx, rax
  00140	e8 00 00 00 00	 call	 ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
  00145	88 44 24 24	 mov	 BYTE PTR tv283[rsp], al
  00149	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00151	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00154	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00158	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00160	48 03 c8	 add	 rcx, rax
  00163	48 8b c1	 mov	 rax, rcx
  00166	48 8b c8	 mov	 rcx, rax
  00169	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  0016e	48 89 44 24 60	 mov	 QWORD PTR tv284[rsp], rax
  00173	0f b6 54 24 24	 movzx	 edx, BYTE PTR tv283[rsp]
  00178	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv284[rsp]
  0017d	e8 00 00 00 00	 call	 ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
  00182	89 44 24 34	 mov	 DWORD PTR tv285[rsp], eax
  00186	8b 44 24 34	 mov	 eax, DWORD PTR tv285[rsp]
  0018a	89 44 24 38	 mov	 DWORD PTR $T2[rsp], eax
  0018e	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00193	89 44 24 3c	 mov	 DWORD PTR $T3[rsp], eax
  00197	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T2[rsp]
  0019c	48 8d 4c 24 3c	 lea	 rcx, QWORD PTR $T3[rsp]
  001a1	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  001a6	0f b6 c0	 movzx	 eax, al
  001a9	85 c0		 test	 eax, eax
  001ab	74 0b		 je	 SHORT $LN11@operator

; 841  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 842  : 					_State |= ios_base::badbit;

  001ad	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  001b1	83 c8 04	 or	 eax, 4
  001b4	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax
$LN11@operator:

; 843  : 
; 844  : 		if (_State == ios_base::goodbit

  001b8	e9 3f ff ff ff	 jmp	 $LN2@operator
$LN10@operator:

; 845  : 			&& _Traits::eq_int_type(_Traits::eof(),

  001bd	83 7c 24 20 00	 cmp	 DWORD PTR _State$[rsp], 0
  001c2	75 72		 jne	 SHORT $LN12@operator
  001c4	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  001cc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001cf	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  001d3	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  001db	48 03 c8	 add	 rcx, rax
  001de	48 8b c1	 mov	 rax, rcx
  001e1	48 8b c8	 mov	 rcx, rax
  001e4	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  001e9	48 89 44 24 68	 mov	 QWORD PTR tv286[rsp], rax
  001ee	0f b6 94 24 b8
	00 00 00	 movzx	 edx, BYTE PTR _Ch$[rsp]
  001f6	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv286[rsp]
  001fb	e8 00 00 00 00	 call	 ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
  00200	89 44 24 40	 mov	 DWORD PTR tv287[rsp], eax
  00204	8b 44 24 40	 mov	 eax, DWORD PTR tv287[rsp]
  00208	89 44 24 44	 mov	 DWORD PTR $T4[rsp], eax
  0020c	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00211	89 44 24 48	 mov	 DWORD PTR $T5[rsp], eax
  00215	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0021a	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T5[rsp]
  0021f	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  00224	0f b6 c0	 movzx	 eax, al
  00227	85 c0		 test	 eax, eax
  00229	74 0b		 je	 SHORT $LN12@operator

; 846  : 				_Ostr.rdbuf()->sputc(_Ch)))
; 847  : 			_State |= ios_base::badbit;

  0022b	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  0022f	83 c8 04	 or	 eax, 4
  00232	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax
$LN12@operator:

; 848  : 
; 849  : 		for (; _State == ios_base::goodbit && 0 < _Pad;

  00236	eb 0d		 jmp	 SHORT $LN7@operator
$LN5@operator:

; 850  : 			--_Pad)	// pad on right

  00238	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pad$1[rsp]
  0023d	48 ff c8	 dec	 rax
  00240	48 89 44 24 28	 mov	 QWORD PTR _Pad$1[rsp], rax
$LN7@operator:

; 848  : 
; 849  : 		for (; _State == ios_base::goodbit && 0 < _Pad;

  00245	83 7c 24 20 00	 cmp	 DWORD PTR _State$[rsp], 0
  0024a	0f 85 a9 00 00
	00		 jne	 $LN6@operator
  00250	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pad$1[rsp], 0
  00256	0f 8e 9d 00 00
	00		 jle	 $LN6@operator

; 851  : 			if (_Traits::eq_int_type(_Traits::eof(),

  0025c	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00264	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00267	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0026b	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00273	48 03 c8	 add	 rcx, rax
  00276	48 8b c1	 mov	 rax, rcx
  00279	48 8b c8	 mov	 rcx, rax
  0027c	e8 00 00 00 00	 call	 ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
  00281	88 44 24 25	 mov	 BYTE PTR tv288[rsp], al
  00285	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0028d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00290	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00294	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0029c	48 03 c8	 add	 rcx, rax
  0029f	48 8b c1	 mov	 rax, rcx
  002a2	48 8b c8	 mov	 rcx, rax
  002a5	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  002aa	48 89 44 24 70	 mov	 QWORD PTR tv289[rsp], rax
  002af	0f b6 54 24 25	 movzx	 edx, BYTE PTR tv288[rsp]
  002b4	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv289[rsp]
  002b9	e8 00 00 00 00	 call	 ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
  002be	89 44 24 4c	 mov	 DWORD PTR tv290[rsp], eax
  002c2	8b 44 24 4c	 mov	 eax, DWORD PTR tv290[rsp]
  002c6	89 44 24 50	 mov	 DWORD PTR $T6[rsp], eax
  002ca	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  002cf	89 44 24 54	 mov	 DWORD PTR $T7[rsp], eax
  002d3	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T6[rsp]
  002d8	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T7[rsp]
  002dd	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  002e2	0f b6 c0	 movzx	 eax, al
  002e5	85 c0		 test	 eax, eax
  002e7	74 0b		 je	 SHORT $LN13@operator

; 852  : 				_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 853  : 				_State |= ios_base::badbit;

  002e9	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  002ed	83 c8 04	 or	 eax, 4
  002f0	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax
$LN13@operator:

; 854  : 		_CATCH_IO_(_Ostr)

  002f4	e9 3f ff ff ff	 jmp	 $LN5@operator
$LN6@operator:
  002f9	eb 00		 jmp	 SHORT $LN8@operator
$LN21@operator:
$LN8@operator:

; 855  : 		}
; 856  : 
; 857  : 	_Ostr.width(0);

  002fb	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00303	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00306	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0030a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00312	48 03 c8	 add	 rcx, rax
  00315	48 8b c1	 mov	 rax, rcx
  00318	33 d2		 xor	 edx, edx
  0031a	48 8b c8	 mov	 rcx, rax
  0031d	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEAA_J_J@Z ; std::ios_base::width

; 858  : 	_Ostr.setstate(_State);

  00322	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0032a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0032d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00331	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00339	48 03 c8	 add	 rcx, rax
  0033c	48 8b c1	 mov	 rax, rcx
  0033f	45 33 c0	 xor	 r8d, r8d
  00342	8b 54 24 20	 mov	 edx, DWORD PTR _State$[rsp]
  00346	48 8b c8	 mov	 rcx, rax
  00349	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate

; 859  : 	return (_Ostr);

  0034e	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00356	48 89 44 24 78	 mov	 QWORD PTR $T8[rsp], rax
  0035b	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Ok$[rsp]
  00363	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00368	48 8b 44 24 78	 mov	 rax, QWORD PTR $T8[rsp]

; 860  : 	}

  0036d	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  00374	c3		 ret	 0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv283 = 36
tv288 = 37
_Pad$1 = 40
tv65 = 48
tv285 = 52
$T2 = 56
$T3 = 60
tv287 = 64
$T4 = 68
$T5 = 72
tv290 = 76
$T6 = 80
$T7 = 84
tv130 = 88
tv284 = 96
tv286 = 104
tv289 = 112
$T8 = 120
_Ok$ = 128
$T9 = 144
_Ostr$ = 176
_Ch$ = 184
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d 80 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rbp]
  00010	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
_State$ = 32
tv283 = 36
tv288 = 37
_Pad$1 = 40
tv65 = 48
tv285 = 52
$T2 = 56
$T3 = 60
tv287 = 64
$T4 = 68
$T5 = 72
tv290 = 76
$T6 = 80
$T7 = 84
tv130 = 88
tv284 = 96
tv286 = 104
tv289 = 112
$T8 = 120
_Ok$ = 128
$T9 = 144
_Ostr$ = 176
_Ch$ = 184
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 854  : 		_CATCH_IO_(_Ostr)

  0001b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00020	55		 push	 rbp
  00021	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00025	48 8b ea	 mov	 rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$0:
  00028	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0002f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00032	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00036	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0003d	48 03 c8	 add	 rcx, rax
  00040	48 8b c1	 mov	 rax, rcx
  00043	41 b0 01	 mov	 r8b, 1
  00046	ba 04 00 00 00	 mov	 edx, 4
  0004b	48 8b c8	 mov	 rcx, rax
  0004e	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  00053	90		 npad	 1
  00054	48 8d 05 00 00
	00 00		 lea	 rax, $LN21@catch$1
  0005b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
  00061	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv283 = 36
tv288 = 37
_Pad$1 = 40
tv65 = 48
tv285 = 52
$T2 = 56
$T3 = 60
tv287 = 64
$T4 = 68
$T5 = 72
tv290 = 76
$T6 = 80
$T7 = 84
tv130 = 88
tv284 = 96
tv286 = 104
tv289 = 112
$T8 = 120
_Ok$ = 128
$T9 = 144
_Ostr$ = 176
_Ch$ = 184
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d 80 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rbp]
  00010	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv283 = 36
tv288 = 37
_Pad$1 = 40
tv65 = 48
tv285 = 52
$T2 = 56
$T3 = 60
tv287 = 64
$T4 = 68
$T5 = 72
tv290 = 76
$T6 = 80
$T7 = 84
tv130 = 88
tv284 = 96
tv286 = 104
tv289 = 112
$T8 = 120
_Ok$ = 128
$T9 = 144
_Ostr$ = 176
_Ch$ = 184
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 854  : 		_CATCH_IO_(_Ostr)

  0001b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00020	55		 push	 rbp
  00021	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00025	48 8b ea	 mov	 rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$0:
  00028	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0002f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00032	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00036	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0003d	48 03 c8	 add	 rcx, rax
  00040	48 8b c1	 mov	 rax, rcx
  00043	41 b0 01	 mov	 r8b, 1
  00046	ba 04 00 00 00	 mov	 edx, 4
  0004b	48 8b c8	 mov	 rcx, rax
  0004e	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  00053	90		 npad	 1
  00054	48 8d 05 00 00
	00 00		 lea	 rax, $LN21@catch$1
  0005b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
  00061	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 32
tv294 = 36
tv299 = 37
_Pad$ = 40
_Count$ = 48
tv139 = 56
tv296 = 60
$T1 = 64
$T2 = 68
tv301 = 72
$T3 = 76
$T4 = 80
tv137 = 88
tv295 = 96
tv297 = 104
tv298 = 112
tv300 = 120
$T5 = 128
_Ok$ = 136
$T6 = 152
_Ostr$ = 176
_Val$ = 184
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 780  : 	{	// insert NTBS into char stream

$LN25:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H
  00011	48 c7 84 24 98
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T6[rsp], -2

; 781  : 	typedef char _Elem;
; 782  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 783  : 	ios_base::iostate _State = ios_base::goodbit;

  0001d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _State$[rsp], 0

; 784  : 	streamsize _Count = (streamsize)_Traits::length(_Val);	// may overflow

  00025	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR _Val$[rsp]
  0002d	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SA_KPEBD@Z ; std::char_traits<char>::length
  00032	48 89 44 24 30	 mov	 QWORD PTR _Count$[rsp], rax

; 785  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

  00037	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00046	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0004e	48 03 c8	 add	 rcx, rax
  00051	48 8b c1	 mov	 rax, rcx
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  0005c	48 85 c0	 test	 rax, rax
  0005f	7e 5d		 jle	 SHORT $LN17@operator
  00061	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00069	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00070	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00078	48 03 c8	 add	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 8b c8	 mov	 rcx, rax
  00081	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  00086	48 3b 44 24 30	 cmp	 rax, QWORD PTR _Count$[rsp]
  0008b	7e 31		 jle	 SHORT $LN17@operator
  0008d	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0009c	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  000a4	48 03 c8	 add	 rcx, rax
  000a7	48 8b c1	 mov	 rax, rcx
  000aa	48 8b c8	 mov	 rcx, rax
  000ad	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width
  000b2	48 2b 44 24 30	 sub	 rax, QWORD PTR _Count$[rsp]
  000b7	48 89 44 24 58	 mov	 QWORD PTR tv137[rsp], rax
  000bc	eb 09		 jmp	 SHORT $LN18@operator
$LN17@operator:
  000be	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR tv137[rsp], 0
$LN18@operator:
  000c7	48 8b 44 24 58	 mov	 rax, QWORD PTR tv137[rsp]
  000cc	48 89 44 24 28	 mov	 QWORD PTR _Pad$[rsp], rax

; 786  : 		? 0 : _Ostr.width() - _Count;
; 787  : 	const typename _Myos::sentry _Ok(_Ostr);

  000d1	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  000d9	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Ok$[rsp]
  000e1	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  000e6	90		 npad	 1

; 788  : 
; 789  : 	if (!_Ok)

  000e7	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Ok$[rsp]
  000ef	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  000f4	0f b6 c0	 movzx	 eax, al
  000f7	85 c0		 test	 eax, eax
  000f9	75 10		 jne	 SHORT $LN8@operator

; 790  : 		_State |= ios_base::badbit;

  000fb	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  000ff	83 c8 04	 or	 eax, 4
  00102	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 791  : 	else

  00106	e9 48 02 00 00	 jmp	 $LN9@operator
$LN8@operator:

; 792  : 		{	// state okay, insert
; 793  : 		_TRY_IO_BEGIN
; 794  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

  0010b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00113	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00116	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0011a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00122	48 03 c8	 add	 rcx, rax
  00125	48 8b c1	 mov	 rax, rcx
  00128	48 8b c8	 mov	 rcx, rax
  0012b	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  00130	89 44 24 38	 mov	 DWORD PTR tv139[rsp], eax
  00134	8b 44 24 38	 mov	 eax, DWORD PTR tv139[rsp]
  00138	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  0013d	83 f8 40	 cmp	 eax, 64			; 00000040H
  00140	0f 84 ba 00 00
	00		 je	 $LN11@operator

; 795  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  00146	eb 0d		 jmp	 SHORT $LN4@operator
$LN2@operator:
  00148	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pad$[rsp]
  0014d	48 ff c8	 dec	 rax
  00150	48 89 44 24 28	 mov	 QWORD PTR _Pad$[rsp], rax
$LN4@operator:
  00155	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pad$[rsp], 0
  0015b	0f 8e 9f 00 00
	00		 jle	 $LN11@operator

; 796  : 				if (_Traits::eq_int_type(_Traits::eof(),

  00161	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00169	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0016c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00170	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00178	48 03 c8	 add	 rcx, rax
  0017b	48 8b c1	 mov	 rax, rcx
  0017e	48 8b c8	 mov	 rcx, rax
  00181	e8 00 00 00 00	 call	 ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
  00186	88 44 24 24	 mov	 BYTE PTR tv294[rsp], al
  0018a	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00192	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00195	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00199	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  001a1	48 03 c8	 add	 rcx, rax
  001a4	48 8b c1	 mov	 rax, rcx
  001a7	48 8b c8	 mov	 rcx, rax
  001aa	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  001af	48 89 44 24 60	 mov	 QWORD PTR tv295[rsp], rax
  001b4	0f b6 54 24 24	 movzx	 edx, BYTE PTR tv294[rsp]
  001b9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv295[rsp]
  001be	e8 00 00 00 00	 call	 ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
  001c3	89 44 24 3c	 mov	 DWORD PTR tv296[rsp], eax
  001c7	8b 44 24 3c	 mov	 eax, DWORD PTR tv296[rsp]
  001cb	89 44 24 40	 mov	 DWORD PTR $T1[rsp], eax
  001cf	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  001d4	89 44 24 44	 mov	 DWORD PTR $T2[rsp], eax
  001d8	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T1[rsp]
  001dd	48 8d 4c 24 44	 lea	 rcx, QWORD PTR $T2[rsp]
  001e2	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  001e7	0f b6 c0	 movzx	 eax, al
  001ea	85 c0		 test	 eax, eax
  001ec	74 0d		 je	 SHORT $LN12@operator

; 797  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 798  : 					{	// insertion failed, quit
; 799  : 					_State |= ios_base::badbit;

  001ee	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  001f2	83 c8 04	 or	 eax, 4
  001f5	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 800  : 					break;

  001f9	eb 05		 jmp	 SHORT $LN11@operator
$LN12@operator:

; 801  : 					}
; 802  : 
; 803  : 		if (_State == ios_base::goodbit

  001fb	e9 48 ff ff ff	 jmp	 $LN2@operator
$LN11@operator:

; 804  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

  00200	83 7c 24 20 00	 cmp	 DWORD PTR _State$[rsp], 0
  00205	75 5d		 jne	 SHORT $LN13@operator
  00207	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0020f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00212	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00216	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0021e	48 03 c8	 add	 rcx, rax
  00221	48 8b c1	 mov	 rax, rcx
  00224	48 8b c8	 mov	 rcx, rax
  00227	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  0022c	48 89 44 24 68	 mov	 QWORD PTR tv297[rsp], rax
  00231	4c 8b 44 24 30	 mov	 r8, QWORD PTR _Count$[rsp]
  00236	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR _Val$[rsp]
  0023e	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv297[rsp]
  00243	e8 00 00 00 00	 call	 ?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputn
  00248	48 89 44 24 70	 mov	 QWORD PTR tv298[rsp], rax
  0024d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Count$[rsp]
  00252	48 39 44 24 70	 cmp	 QWORD PTR tv298[rsp], rax
  00257	74 0b		 je	 SHORT $LN13@operator

; 805  : 			_State |= ios_base::badbit;

  00259	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  0025d	83 c8 04	 or	 eax, 4
  00260	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax
$LN13@operator:

; 806  : 
; 807  : 		if (_State == ios_base::goodbit)

  00264	83 7c 24 20 00	 cmp	 DWORD PTR _State$[rsp], 0
  00269	0f 85 ba 00 00
	00		 jne	 $LN14@operator

; 808  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  0026f	eb 0d		 jmp	 SHORT $LN7@operator
$LN5@operator:
  00271	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pad$[rsp]
  00276	48 ff c8	 dec	 rax
  00279	48 89 44 24 28	 mov	 QWORD PTR _Pad$[rsp], rax
$LN7@operator:
  0027e	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pad$[rsp], 0
  00284	0f 8e 9f 00 00
	00		 jle	 $LN14@operator

; 809  : 				if (_Traits::eq_int_type(_Traits::eof(),

  0028a	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00292	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00295	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00299	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  002a1	48 03 c8	 add	 rcx, rax
  002a4	48 8b c1	 mov	 rax, rcx
  002a7	48 8b c8	 mov	 rcx, rax
  002aa	e8 00 00 00 00	 call	 ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
  002af	88 44 24 25	 mov	 BYTE PTR tv299[rsp], al
  002b3	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  002bb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002be	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  002c2	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  002ca	48 03 c8	 add	 rcx, rax
  002cd	48 8b c1	 mov	 rax, rcx
  002d0	48 8b c8	 mov	 rcx, rax
  002d3	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  002d8	48 89 44 24 78	 mov	 QWORD PTR tv300[rsp], rax
  002dd	0f b6 54 24 25	 movzx	 edx, BYTE PTR tv299[rsp]
  002e2	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv300[rsp]
  002e7	e8 00 00 00 00	 call	 ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
  002ec	89 44 24 48	 mov	 DWORD PTR tv301[rsp], eax
  002f0	8b 44 24 48	 mov	 eax, DWORD PTR tv301[rsp]
  002f4	89 44 24 4c	 mov	 DWORD PTR $T3[rsp], eax
  002f8	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  002fd	89 44 24 50	 mov	 DWORD PTR $T4[rsp], eax
  00301	48 8d 54 24 4c	 lea	 rdx, QWORD PTR $T3[rsp]
  00306	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T4[rsp]
  0030b	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  00310	0f b6 c0	 movzx	 eax, al
  00313	85 c0		 test	 eax, eax
  00315	74 0d		 je	 SHORT $LN15@operator

; 810  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 811  : 					{	// insertion failed, quit
; 812  : 					_State |= ios_base::badbit;

  00317	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  0031b	83 c8 04	 or	 eax, 4
  0031e	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 813  : 					break;

  00322	eb 05		 jmp	 SHORT $LN14@operator
$LN15@operator:

; 814  : 					}

  00324	e9 48 ff ff ff	 jmp	 $LN5@operator
$LN14@operator:

; 815  : 		_Ostr.width(0);

  00329	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00331	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00334	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00338	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00340	48 03 c8	 add	 rcx, rax
  00343	48 8b c1	 mov	 rax, rcx
  00346	33 d2		 xor	 edx, edx
  00348	48 8b c8	 mov	 rcx, rax
  0034b	e8 00 00 00 00	 call	 ?width@ios_base@std@@QEAA_J_J@Z ; std::ios_base::width
  00350	90		 npad	 1
  00351	eb 00		 jmp	 SHORT $LN9@operator
$LN23@operator:
$LN9@operator:

; 816  : 		_CATCH_IO_(_Ostr)
; 817  : 		}
; 818  : 
; 819  : 	_Ostr.setstate(_State);

  00353	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0035b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0035e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00362	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0036a	48 03 c8	 add	 rcx, rax
  0036d	48 8b c1	 mov	 rax, rcx
  00370	45 33 c0	 xor	 r8d, r8d
  00373	8b 54 24 20	 mov	 edx, DWORD PTR _State$[rsp]
  00377	48 8b c8	 mov	 rcx, rax
  0037a	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate

; 820  : 	return (_Ostr);

  0037f	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00387	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR $T5[rsp], rax
  0038f	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Ok$[rsp]
  00397	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0039c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR $T5[rsp]

; 821  : 	}

  003a4	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  003ab	c3		 ret	 0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv294 = 36
tv299 = 37
_Pad$ = 40
_Count$ = 48
tv139 = 56
tv296 = 60
$T1 = 64
$T2 = 68
tv301 = 72
$T3 = 76
$T4 = 80
tv137 = 88
tv295 = 96
tv297 = 104
tv298 = 112
tv300 = 120
$T5 = 128
_Ok$ = 136
$T6 = 152
_Ostr$ = 176
_Val$ = 184
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rbp]
  00010	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
_State$ = 32
tv294 = 36
tv299 = 37
_Pad$ = 40
_Count$ = 48
tv139 = 56
tv296 = 60
$T1 = 64
$T2 = 68
tv301 = 72
$T3 = 76
$T4 = 80
tv137 = 88
tv295 = 96
tv297 = 104
tv298 = 112
tv300 = 120
$T5 = 128
_Ok$ = 136
$T6 = 152
_Ostr$ = 176
_Val$ = 184
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 816  : 		_CATCH_IO_(_Ostr)

  0001b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00020	55		 push	 rbp
  00021	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00025	48 8b ea	 mov	 rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00028	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0002f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00032	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00036	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0003d	48 03 c8	 add	 rcx, rax
  00040	48 8b c1	 mov	 rax, rcx
  00043	41 b0 01	 mov	 r8b, 1
  00046	ba 04 00 00 00	 mov	 edx, 4
  0004b	48 8b c8	 mov	 rcx, rax
  0004e	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  00053	90		 npad	 1
  00054	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  0005b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
  00061	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv294 = 36
tv299 = 37
_Pad$ = 40
_Count$ = 48
tv139 = 56
tv296 = 60
$T1 = 64
$T2 = 68
tv301 = 72
$T3 = 76
$T4 = 80
tv137 = 88
tv295 = 96
tv297 = 104
tv298 = 112
tv300 = 120
$T5 = 128
_Ok$ = 136
$T6 = 152
_Ostr$ = 176
_Val$ = 184
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rbp]
  00010	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv294 = 36
tv299 = 37
_Pad$ = 40
_Count$ = 48
tv139 = 56
tv296 = 60
$T1 = 64
$T2 = 68
tv301 = 72
$T3 = 76
$T4 = 80
tv137 = 88
tv295 = 96
tv297 = 104
tv298 = 112
tv300 = 120
$T5 = 128
_Ok$ = 136
$T6 = 152
_Ostr$ = 176
_Val$ = 184
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 816  : 		_CATCH_IO_(_Ostr)

  0001b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00020	55		 push	 rbp
  00021	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00025	48 8b ea	 mov	 rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00028	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0002f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00032	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00036	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0003d	48 03 c8	 add	 rcx, rax
  00040	48 8b c1	 mov	 rax, rcx
  00043	41 b0 01	 mov	 r8b, 1
  00046	ba 04 00 00 00	 mov	 edx, 4
  0004b	48 8b c8	 mov	 rcx, rax
  0004e	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  00053	90		 npad	 1
  00054	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  0005b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
  00061	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
_TEXT	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::flush, COMDAT

; 574  : 		{	// flush output stream

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 575  : 		if (_Myios::rdbuf() != 0)

  00012	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001a	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00023	48 03 c8	 add	 rcx, rax
  00026	48 8b c1	 mov	 rax, rcx
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  00031	48 85 c0	 test	 rax, rax
  00034	74 7f		 je	 SHORT $LN2@flush

; 576  : 			{	// buffer exists, flush it
; 577  : 			const sentry _Ok(*this);

  00036	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  0003b	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ok$2[rsp]
  00040	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  00045	90		 npad	 1

; 578  : 
; 579  : 			if (_Ok && _Myios::rdbuf()->pubsync() == -1)

  00046	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ok$2[rsp]
  0004b	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00050	0f b6 c0	 movzx	 eax, al
  00053	85 c0		 test	 eax, eax
  00055	74 54		 je	 SHORT $LN3@flush
  00057	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005f	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00063	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 03 c8	 add	 rcx, rax
  0006b	48 8b c1	 mov	 rax, rcx
  0006e	48 8b c8	 mov	 rcx, rax
  00071	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
  0007e	83 f8 ff	 cmp	 eax, -1
  00081	75 28		 jne	 SHORT $LN3@flush

; 580  : 				_Myios::setstate(ios_base::badbit);	// sync failed

  00083	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00088	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0008f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00094	48 03 c8	 add	 rcx, rax
  00097	48 8b c1	 mov	 rax, rcx
  0009a	45 33 c0	 xor	 r8d, r8d
  0009d	ba 04 00 00 00	 mov	 edx, 4
  000a2	48 8b c8	 mov	 rcx, rax
  000a5	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  000aa	90		 npad	 1
$LN3@flush:

; 581  : 			}

  000ab	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ok$2[rsp]
  000b0	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
$LN2@flush:

; 582  : 		return (*this);

  000b5	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 583  : 		}

  000ba	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000be	c3		 ret	 0
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::flush
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ok$2[rbp]
  0000d	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ok$2[rbp]
  0000d	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
_TEXT	SEGMENT
_State$ = 32
tv156 = 36
$T1 = 40
$T2 = 44
tv65 = 48
$T3 = 56
$T4 = 64
_Ok$ = 72
this$ = 112
_Ch$ = 120
?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::put, COMDAT

; 533  : 		{	// insert a character

$LN13:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0000d	48 c7 44 24 40
	fe ff ff ff	 mov	 QWORD PTR $T4[rsp], -2

; 534  : 		ios_base::iostate _State = ios_base::goodbit;

  00016	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _State$[rsp], 0

; 535  : 		const sentry _Ok(*this);

  0001e	48 8b 54 24 70	 mov	 rdx, QWORD PTR this$[rsp]
  00023	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Ok$[rsp]
  00028	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  0002d	90		 npad	 1

; 536  : 
; 537  : 		if (!_Ok)

  0002e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Ok$[rsp]
  00033	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	75 0d		 jne	 SHORT $LN2@put

; 538  : 			_State |= ios_base::badbit;

  0003f	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  00043	83 c8 04	 or	 eax, 4
  00046	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 539  : 		else

  0004a	eb 6b		 jmp	 SHORT $LN3@put
$LN2@put:

; 540  : 			{	// state okay, insert character
; 541  : 			_TRY_IO_BEGIN
; 542  : 			if (_Traits::eq_int_type(_Traits::eof(),

  0004c	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00058	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	48 03 c8	 add	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 8b c8	 mov	 rcx, rax
  00066	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  0006b	48 89 44 24 30	 mov	 QWORD PTR tv65[rsp], rax
  00070	0f b6 54 24 78	 movzx	 edx, BYTE PTR _Ch$[rsp]
  00075	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv65[rsp]
  0007a	e8 00 00 00 00	 call	 ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
  0007f	89 44 24 24	 mov	 DWORD PTR tv156[rsp], eax
  00083	8b 44 24 24	 mov	 eax, DWORD PTR tv156[rsp]
  00087	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  0008b	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00090	89 44 24 2c	 mov	 DWORD PTR $T2[rsp], eax
  00094	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  00099	48 8d 4c 24 2c	 lea	 rcx, QWORD PTR $T2[rsp]
  0009e	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  000a3	0f b6 c0	 movzx	 eax, al
  000a6	85 c0		 test	 eax, eax
  000a8	74 0b		 je	 SHORT $LN5@put

; 543  : 				_Myios::rdbuf()->sputc(_Ch)))
; 544  : 				_State |= ios_base::badbit;

  000aa	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  000ae	83 c8 04	 or	 eax, 4
  000b1	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax
$LN5@put:
  000b5	eb 00		 jmp	 SHORT $LN3@put
$LN11@put:
$LN3@put:

; 545  : 			_CATCH_IO_END
; 546  : 			}
; 547  : 
; 548  : 		_Myios::setstate(_State);

  000b7	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000bc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bf	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c3	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000c8	48 03 c8	 add	 rcx, rax
  000cb	48 8b c1	 mov	 rax, rcx
  000ce	45 33 c0	 xor	 r8d, r8d
  000d1	8b 54 24 20	 mov	 edx, DWORD PTR _State$[rsp]
  000d5	48 8b c8	 mov	 rcx, rax
  000d8	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate

; 549  : 		return (*this);

  000dd	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000e2	48 89 44 24 38	 mov	 QWORD PTR $T3[rsp], rax
  000e7	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Ok$[rsp]
  000ec	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  000f1	48 8b 44 24 38	 mov	 rax, QWORD PTR $T3[rsp]

; 550  : 		}

  000f6	48 83 c4 68	 add	 rsp, 104		; 00000068H
  000fa	c3		 ret	 0
?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv156 = 36
$T1 = 40
$T2 = 44
tv65 = 48
$T3 = 56
$T4 = 64
_Ok$ = 72
this$ = 112
_Ch$ = 120
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 48	 lea	 rcx, QWORD PTR _Ok$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
_State$ = 32
tv156 = 36
$T1 = 40
$T2 = 44
tv65 = 48
$T3 = 56
$T4 = 64
_Ok$ = 72
this$ = 112
_Ch$ = 120
?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$1

; 545  : 			_CATCH_IO_END

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z$0:
  00025	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00030	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00034	48 03 c8	 add	 rcx, rax
  00037	48 8b c1	 mov	 rax, rcx
  0003a	41 b0 01	 mov	 r8b, 1
  0003d	ba 04 00 00 00	 mov	 edx, 4
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  0004a	90		 npad	 1
  0004b	48 8d 05 00 00
	00 00		 lea	 rax, $LN11@catch$1
  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5d		 pop	 rbp
  00057	c3		 ret	 0
  00058	cc		 int	 3
?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv156 = 36
$T1 = 40
$T2 = 44
tv65 = 48
$T3 = 56
$T4 = 64
_Ok$ = 72
this$ = 112
_Ch$ = 120
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 48	 lea	 rcx, QWORD PTR _Ok$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
tv156 = 36
$T1 = 40
$T2 = 44
tv65 = 48
$T3 = 56
$T4 = 64
_Ok$ = 72
this$ = 112
_Ch$ = 120
?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$1

; 545  : 			_CATCH_IO_END

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z$0:
  00025	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00030	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00034	48 03 c8	 add	 rcx, rax
  00037	48 8b c1	 mov	 rax, rcx
  0003a	41 b0 01	 mov	 r8b, 1
  0003d	ba 04 00 00 00	 mov	 edx, 4
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  0004a	90		 npad	 1
  0004b	48 8d 05 00 00
	00 00		 lea	 rax, $LN11@catch$1
  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5d		 pop	 rbp
  00057	c3		 ret	 0
  00058	cc		 int	 3
?catch$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
_TEXT	SEGMENT
tv203 = 48
_State$ = 52
tv148 = 56
tv65 = 64
tv200 = 72
tv204 = 80
_Nput_fac$1 = 88
tv205 = 96
$T2 = 104
_Ok$ = 112
$T3 = 128
$T4 = 136
$T5 = 160
$T6 = 176
$T7 = 192
this$ = 240
_Val$ = 248
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT

; 316  : 		{	// insert an unsigned int

$LN15:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	56		 push	 rsi
  0000a	57		 push	 rdi
  0000b	48 81 ec d8 00
	00 00		 sub	 rsp, 216		; 000000d8H
  00012	48 c7 84 24 80
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T3[rsp], -2

; 317  : 		ios_base::iostate _State = ios_base::goodbit;

  0001e	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR _State$[rsp], 0

; 318  : 		const sentry _Ok(*this);

  00026	48 8b 94 24 f0
	00 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  0002e	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _Ok$[rsp]
  00033	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  00038	90		 npad	 1

; 319  : 
; 320  : 		if (_Ok)

  00039	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _Ok$[rsp]
  0003e	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00043	0f b6 c0	 movzx	 eax, al
  00046	85 c0		 test	 eax, eax
  00048	0f 84 61 01 00
	00		 je	 $LN2@operator

; 321  : 			{	// state okay, use facet to insert
; 322  : 			const _Nput& _Nput_fac = _USE(this->getloc(), _Nput);

  0004e	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00059	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0005d	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00065	48 03 c8	 add	 rcx, rax
  00068	48 8b c1	 mov	 rax, rcx
  0006b	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR $T4[rsp]
  00073	48 8b c8	 mov	 rcx, rax
  00076	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  0007b	48 89 44 24 40	 mov	 QWORD PTR tv65[rsp], rax
  00080	48 8b 44 24 40	 mov	 rax, QWORD PTR tv65[rsp]
  00085	48 89 44 24 48	 mov	 QWORD PTR tv200[rsp], rax
  0008a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv200[rsp]
  0008f	e8 00 00 00 00	 call	 ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
  00094	48 89 44 24 58	 mov	 QWORD PTR _Nput_fac$1[rsp], rax
  00099	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR $T4[rsp]
  000a1	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  000a6	90		 npad	 1

; 323  : 
; 324  : 			_TRY_IO_BEGIN
; 325  : 			if (_Nput_fac.put(_Iter(_Myios::rdbuf()), *this,
; 326  : 				_Myios::fill(), (unsigned long)_Val).failed())

  000a7	48 83 bc 24 f0
	00 00 00 00	 cmp	 QWORD PTR this$[rsp], 0
  000b0	75 0b		 jne	 SHORT $LN6@operator
  000b2	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv148[rsp], 0
  000bb	eb 22		 jmp	 SHORT $LN7@operator
$LN6@operator:
  000bd	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000c5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c8	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000cc	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d4	48 03 c8	 add	 rcx, rax
  000d7	48 8b c1	 mov	 rax, rcx
  000da	48 89 44 24 38	 mov	 QWORD PTR tv148[rsp], rax
$LN7@operator:
  000df	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ea	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000ee	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000f6	48 03 c8	 add	 rcx, rax
  000f9	48 8b c1	 mov	 rax, rcx
  000fc	48 8b c8	 mov	 rcx, rax
  000ff	e8 00 00 00 00	 call	 ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
  00104	88 44 24 30	 mov	 BYTE PTR tv203[rsp], al
  00108	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00110	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00113	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00117	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0011f	48 03 c8	 add	 rcx, rax
  00122	48 8b c1	 mov	 rax, rcx
  00125	48 8b c8	 mov	 rcx, rax
  00128	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  0012d	48 89 44 24 50	 mov	 QWORD PTR tv204[rsp], rax
  00132	48 8b 54 24 50	 mov	 rdx, QWORD PTR tv204[rsp]
  00137	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  0013f	e8 00 00 00 00	 call	 ??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >
  00144	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  0014c	48 8b f9	 mov	 rdi, rcx
  0014f	48 8b f0	 mov	 rsi, rax
  00152	b9 10 00 00 00	 mov	 ecx, 16
  00157	f3 a4		 rep movsb
  00159	8b 84 24 f8 00
	00 00		 mov	 eax, DWORD PTR _Val$[rsp]
  00160	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  00164	0f b6 44 24 30	 movzx	 eax, BYTE PTR tv203[rsp]
  00169	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  0016d	4c 8b 4c 24 38	 mov	 r9, QWORD PTR tv148[rsp]
  00172	4c 8d 84 24 a0
	00 00 00	 lea	 r8, QWORD PTR $T5[rsp]
  0017a	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  00182	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Nput_fac$1[rsp]
  00187	e8 00 00 00 00	 call	 ?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
  0018c	48 89 44 24 60	 mov	 QWORD PTR tv205[rsp], rax
  00191	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv205[rsp]
  00196	e8 00 00 00 00	 call	 ?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed
  0019b	0f b6 c0	 movzx	 eax, al
  0019e	85 c0		 test	 eax, eax
  001a0	74 0b		 je	 SHORT $LN4@operator

; 327  : 				_State |= ios_base::badbit;

  001a2	8b 44 24 34	 mov	 eax, DWORD PTR _State$[rsp]
  001a6	83 c8 04	 or	 eax, 4
  001a9	89 44 24 34	 mov	 DWORD PTR _State$[rsp], eax
$LN4@operator:
  001ad	eb 00		 jmp	 SHORT $LN2@operator
$LN13@operator:
$LN2@operator:

; 328  : 			_CATCH_IO_END
; 329  : 			}
; 330  : 
; 331  : 		_Myios::setstate(_State);

  001af	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001b7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001ba	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  001be	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001c6	48 03 c8	 add	 rcx, rax
  001c9	48 8b c1	 mov	 rax, rcx
  001cc	45 33 c0	 xor	 r8d, r8d
  001cf	8b 54 24 34	 mov	 edx, DWORD PTR _State$[rsp]
  001d3	48 8b c8	 mov	 rcx, rax
  001d6	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate

; 332  : 		return (*this);

  001db	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001e3	48 89 44 24 68	 mov	 QWORD PTR $T2[rsp], rax
  001e8	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _Ok$[rsp]
  001ed	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  001f2	48 8b 44 24 68	 mov	 rax, QWORD PTR $T2[rsp]

; 333  : 		}

  001f7	48 81 c4 d8 00
	00 00		 add	 rsp, 216		; 000000d8H
  001fe	5f		 pop	 rdi
  001ff	5e		 pop	 rsi
  00200	c3		 ret	 0
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv203 = 48
_State$ = 52
tv148 = 56
tv65 = 64
tv200 = 72
tv204 = 80
_Nput_fac$1 = 88
tv205 = 96
$T2 = 104
_Ok$ = 112
$T3 = 128
$T4 = 136
$T5 = 160
$T6 = 176
$T7 = 192
this$ = 240
_Val$ = 248
?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 70	 lea	 rcx, QWORD PTR _Ok$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$0
tv203 = 48
_State$ = 52
tv148 = 56
tv65 = 64
tv200 = 72
tv204 = 80
_Nput_fac$1 = 88
tv205 = 96
$T2 = 104
_Ok$ = 112
$T3 = 128
$T4 = 136
$T5 = 160
$T6 = 176
$T7 = 192
this$ = 240
_Val$ = 248
?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$1
  00018	40 55		 push	 rbp
  0001a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0001e	48 8b ea	 mov	 rbp, rdx
  00021	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00028	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$1
tv203 = 48
_State$ = 52
tv148 = 56
tv65 = 64
tv200 = 72
tv204 = 80
_Nput_fac$1 = 88
tv205 = 96
$T2 = 104
_Ok$ = 112
$T3 = 128
$T4 = 136
$T5 = 160
$T6 = 176
$T7 = 192
this$ = 240
_Val$ = 248
?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::catch$2

; 328  : 			_CATCH_IO_END

  00033	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00038	55		 push	 rbp
  00039	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0003d	48 8b ea	 mov	 rbp, rdx
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z$0:
  00040	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004a	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0004e	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	48 03 c8	 add	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	41 b0 01	 mov	 r8b, 1
  0005e	ba 04 00 00 00	 mov	 edx, 4
  00063	48 8b c8	 mov	 rcx, rax
  00066	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  0006b	90		 npad	 1
  0006c	48 8d 05 00 00
	00 00		 lea	 rax, $LN13@catch$2
  00073	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
  00079	cc		 int	 3
?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::catch$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv203 = 48
_State$ = 52
tv148 = 56
tv65 = 64
tv200 = 72
tv204 = 80
_Nput_fac$1 = 88
tv205 = 96
$T2 = 104
_Ok$ = 112
$T3 = 128
$T4 = 136
$T5 = 160
$T6 = 176
$T7 = 192
this$ = 240
_Val$ = 248
?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 70	 lea	 rcx, QWORD PTR _Ok$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv203 = 48
_State$ = 52
tv148 = 56
tv65 = 64
tv200 = 72
tv204 = 80
_Nput_fac$1 = 88
tv205 = 96
$T2 = 104
_Ok$ = 112
$T3 = 128
$T4 = 136
$T5 = 160
$T6 = 176
$T7 = 192
this$ = 240
_Val$ = 248
?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$1
  00018	40 55		 push	 rbp
  0001a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0001e	48 8b ea	 mov	 rbp, rdx
  00021	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00028	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv203 = 48
_State$ = 52
tv148 = 56
tv65 = 64
tv200 = 72
tv204 = 80
_Nput_fac$1 = 88
tv205 = 96
$T2 = 104
_Ok$ = 112
$T3 = 128
$T4 = 136
$T5 = 160
$T6 = 176
$T7 = 192
this$ = 240
_Val$ = 248
?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::catch$2

; 328  : 			_CATCH_IO_END

  00033	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00038	55		 push	 rbp
  00039	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0003d	48 8b ea	 mov	 rbp, rdx
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z$0:
  00040	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004a	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0004e	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	48 03 c8	 add	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	41 b0 01	 mov	 r8b, 1
  0005e	ba 04 00 00 00	 mov	 edx, 4
  00063	48 8b c8	 mov	 rcx, rax
  00066	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  0006b	90		 npad	 1
  0006c	48 8d 05 00 00
	00 00		 lea	 rax, $LN13@catch$2
  00073	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
  00079	cc		 int	 3
?catch$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::catch$2
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
_TEXT	SEGMENT
this$ = 48
_Pfn$ = 56
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT

; 197  : 		{	// call basic_ostream manipulator

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 198  : 		_DEBUG_POINTER(_Pfn);
; 199  : 		return ((*_Pfn)(*this));

  0000e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00013	ff 54 24 38	 call	 QWORD PTR _Pfn$[rsp]

; 200  : 		}

  00017	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001b	c3		 ret	 0
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv153 = 32
tv154 = 36
tv156 = 40
tv155 = 48
$T1 = 56
this$ = 80
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Osfx, COMDAT

; 165  : 		{	// perform any wrapup

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00009	48 c7 44 24 38
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 166  : 		_TRY_BEGIN
; 167  : 		if (this->good() && this->flags() & ios_base::unitbuf)

  00012	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001a	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00023	48 03 c8	 add	 rcx, rax
  00026	48 8b c1	 mov	 rax, rcx
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ?good@ios_base@std@@QEBA_NXZ ; std::ios_base::good
  00031	88 44 24 20	 mov	 BYTE PTR tv153[rsp], al
  00035	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv153[rsp]
  0003a	85 c0		 test	 eax, eax
  0003c	0f 84 8f 00 00
	00		 je	 $LN3@Osfx
  00042	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004a	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0004e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 03 c8	 add	 rcx, rax
  00056	48 8b c1	 mov	 rax, rcx
  00059	48 8b c8	 mov	 rcx, rax
  0005c	e8 00 00 00 00	 call	 ?flags@ios_base@std@@QEBAHXZ ; std::ios_base::flags
  00061	89 44 24 24	 mov	 DWORD PTR tv154[rsp], eax
  00065	8b 44 24 24	 mov	 eax, DWORD PTR tv154[rsp]
  00069	83 e0 02	 and	 eax, 2
  0006c	85 c0		 test	 eax, eax
  0006e	74 61		 je	 SHORT $LN3@Osfx

; 168  : 			if (_Myios::rdbuf()->pubsync() == -1)	// flush stream as needed

  00070	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	48 03 c8	 add	 rcx, rax
  00084	48 8b c1	 mov	 rax, rcx
  00087	48 8b c8	 mov	 rcx, rax
  0008a	e8 00 00 00 00	 call	 ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
  0008f	48 89 44 24 30	 mov	 QWORD PTR tv155[rsp], rax
  00094	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv155[rsp]
  00099	e8 00 00 00 00	 call	 ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
  0009e	89 44 24 28	 mov	 DWORD PTR tv156[rsp], eax
  000a2	83 7c 24 28 ff	 cmp	 DWORD PTR tv156[rsp], -1
  000a7	75 28		 jne	 SHORT $LN3@Osfx

; 169  : 				_Myios::setstate(ios_base::badbit);

  000a9	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b1	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000b5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000ba	48 03 c8	 add	 rcx, rax
  000bd	48 8b c1	 mov	 rax, rcx
  000c0	45 33 c0	 xor	 r8d, r8d
  000c3	ba 04 00 00 00	 mov	 edx, 4
  000c8	48 8b c8	 mov	 rcx, rax
  000cb	e8 00 00 00 00	 call	 ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
  000d0	90		 npad	 1
$LN3@Osfx:
  000d1	eb 00		 jmp	 SHORT $LN8@Osfx
$LN9@Osfx:
$LN8@Osfx:

; 170  : 		_CATCH_ALL
; 171  : 		_CATCH_END
; 172  : 		}

  000d3	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d7	c3		 ret	 0
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv153 = 32
tv154 = 36
tv156 = 40
tv155 = 48
$T1 = 56
this$ = 80
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0

; 170  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ$0:

; 170  : 		_CATCH_ALL
; 171  : 		_CATCH_END

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, $LN9@catch$0
  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5d		 pop	 rbp
  00019	c3		 ret	 0
  0001a	cc		 int	 3
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv153 = 32
tv154 = 36
tv156 = 40
tv155 = 48
$T1 = 56
this$ = 80
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0

; 170  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ$0:

; 171  : 		_CATCH_END

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, $LN9@catch$0
  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5d		 pop	 rbp
  00019	c3		 ret	 0
  0001a	cc		 int	 3
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
_TEXT	SEGMENT
tv80 = 32
tv79 = 40
_Ctype_fac$ = 48
$T1 = 56
$T2 = 64
this$ = 96
_Byte$ = 104
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z PROC ; std::basic_ios<char,std::char_traits<char> >::widen, COMDAT

; 130  : 		{	// convert _Byte to character using imbued locale

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0000d	48 c7 44 24 38
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 131  : 		const _Ctype& _Ctype_fac = _USE(getloc(), _Ctype);

  00016	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T2[rsp]
  0001b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00020	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  00025	48 89 44 24 20	 mov	 QWORD PTR tv80[rsp], rax
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR tv80[rsp]
  0002f	48 89 44 24 28	 mov	 QWORD PTR tv79[rsp], rax
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv79[rsp]
  00039	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
  0003e	48 89 44 24 30	 mov	 QWORD PTR _Ctype_fac$[rsp], rax
  00043	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T2[rsp]
  00048	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale

; 132  : 		return (_Ctype_fac.widen(_Byte));

  0004d	0f b6 54 24 68	 movzx	 edx, BYTE PTR _Byte$[rsp]
  00052	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ctype_fac$[rsp]
  00057	e8 00 00 00 00	 call	 ?widen@?$ctype@D@std@@QEBADD@Z ; std::ctype<char>::widen

; 133  : 		}

  0005c	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00060	c3		 ret	 0
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::widen
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv80 = 32
tv79 = 40
_Ctype_fac$ = 48
$T1 = 56
$T2 = 64
this$ = 96
_Byte$ = 104
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA PROC ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 40	 lea	 rcx, QWORD PTR $T2[rbp]
  0000d	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA ENDP ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv80 = 32
tv79 = 40
_Ctype_fac$ = 48
$T1 = 56
$T2 = 64
this$ = 96
_Byte$ = 104
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA PROC ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 40	 lea	 rcx, QWORD PTR $T2[rbp]
  0000d	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA ENDP ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
_TEXT	SEGMENT
this$ = 8
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ PROC ; std::basic_ios<char,std::char_traits<char> >::fill, COMDAT

; 112  : 		{	// return fill character

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 113  : 		return (_Fillch);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	0f b6 40 58	 movzx	 eax, BYTE PTR [rax+88]

; 114  : 		}

  0000e	c3		 ret	 0
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ENDP ; std::basic_ios<char,std::char_traits<char> >::fill
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::rdbuf, COMDAT

; 91   : 		{	// return stream buffer pointer

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 92   : 		return (_Mystrbuf);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]

; 93   : 		}

  0000e	c3		 ret	 0
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::rdbuf
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::tie, COMDAT

; 79   : 		{	// return tie pointer

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 80   : 		return (_Tiestr);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]

; 81   : 		}

  0000e	c3		 ret	 0
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::tie
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
this$ = 48
_State$ = 56
_Reraise$ = 64
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::setstate, COMDAT

; 58   : 		{	// merge _State into state, possibly reraise exception

$LN4:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 59   : 		if (_State != goodbit)

  00012	83 7c 24 38 00	 cmp	 DWORD PTR _State$[rsp], 0
  00017	74 20		 je	 SHORT $LN2@setstate

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0001e	e8 00 00 00 00	 call	 ?rdstate@ios_base@std@@QEBAHXZ ; std::ios_base::rdstate
  00023	0b 44 24 38	 or	 eax, DWORD PTR _State$[rsp]
  00027	44 0f b6 44 24
	40		 movzx	 r8d, BYTE PTR _Reraise$[rsp]
  0002d	8b d0		 mov	 edx, eax
  0002f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00034	e8 00 00 00 00	 call	 ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
$LN2@setstate:

; 61   : 		}

  00039	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003d	c3		 ret	 0
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::setstate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
tv73 = 32
this$ = 64
_State$ = 72
_Reraise$ = 80
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::clear, COMDAT

; 44   : 		{	// set state, possibly reraise exception

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00012	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 83 78 48 00	 cmp	 QWORD PTR [rax+72], 0
  0001c	75 0d		 jne	 SHORT $LN3@clear
  0001e	8b 44 24 48	 mov	 eax, DWORD PTR _State$[rsp]
  00022	83 c8 04	 or	 eax, 4
  00025	89 44 24 20	 mov	 DWORD PTR tv73[rsp], eax
  00029	eb 08		 jmp	 SHORT $LN4@clear
$LN3@clear:
  0002b	8b 44 24 48	 mov	 eax, DWORD PTR _State$[rsp]
  0002f	89 44 24 20	 mov	 DWORD PTR tv73[rsp], eax
$LN4@clear:
  00033	44 0f b6 44 24
	50		 movzx	 r8d, BYTE PTR _Reraise$[rsp]
  00039	8b 54 24 20	 mov	 edx, DWORD PTR tv73[rsp]
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear

; 46   : 			? (int)_State | (int)badbit : (int)_State), _Reraise);
; 47   : 		}

  00047	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004b	c3		 ret	 0
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ PROC		; std::ios_base::getloc, COMDAT

; 434  : 		{	// get locale

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 435  : 		return (*_Ploc);

  00016	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0001b	48 8b 50 40	 mov	 rdx, QWORD PTR [rax+64]
  0001f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00024	e8 00 00 00 00	 call	 ??0locale@std@@QEAA@AEBV01@@Z ; std::locale::locale
  00029	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  0002d	83 c8 01	 or	 eax, 1
  00030	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00034	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 436  : 		}

  00039	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003d	c3		 ret	 0
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ENDP		; std::ios_base::getloc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?width@ios_base@std@@QEAA_J_J@Z
_TEXT	SEGMENT
_Oldwidth$ = 0
this$ = 32
_Newwidth$ = 40
?width@ios_base@std@@QEAA_J_J@Z PROC			; std::ios_base::width, COMDAT

; 427  : 		{	// set width to argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 18	 sub	 rsp, 24

; 428  : 		streamsize _Oldwidth = _Wide;

  0000e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00013	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  00017	48 89 04 24	 mov	 QWORD PTR _Oldwidth$[rsp], rax

; 429  : 		_Wide = _Newwidth;

  0001b	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00020	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Newwidth$[rsp]
  00025	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 430  : 		return (_Oldwidth);

  00029	48 8b 04 24	 mov	 rax, QWORD PTR _Oldwidth$[rsp]

; 431  : 		}

  0002d	48 83 c4 18	 add	 rsp, 24
  00031	c3		 ret	 0
?width@ios_base@std@@QEAA_J_J@Z ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?width@ios_base@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?width@ios_base@std@@QEBA_JXZ PROC			; std::ios_base::width, COMDAT

; 422  : 		{	// return width

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 423  : 		return (_Wide);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]

; 424  : 		}

  0000e	c3		 ret	 0
?width@ios_base@std@@QEBA_JXZ ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?precision@ios_base@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?precision@ios_base@std@@QEBA_JXZ PROC			; std::ios_base::precision, COMDAT

; 410  : 		{	// return precision

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 411  : 		return (_Prec);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]

; 412  : 		}

  0000e	c3		 ret	 0
?precision@ios_base@std@@QEBA_JXZ ENDP			; std::ios_base::precision
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?flags@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?flags@ios_base@std@@QEBAHXZ PROC			; std::ios_base::flags, COMDAT

; 377  : 		{	// return format flags

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 378  : 		return (_Fmtfl);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	8b 40 18	 mov	 eax, DWORD PTR [rax+24]

; 379  : 		}

  0000d	c3		 ret	 0
?flags@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::flags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?good@ios_base@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 32
this$ = 64
?good@ios_base@std@@QEBA_NXZ PROC			; std::ios_base::good, COMDAT

; 338  : 		{	// test if no state bits are set

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 339  : 		return (rdstate() == goodbit);

  00009	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ?rdstate@ios_base@std@@QEBAHXZ ; std::ios_base::rdstate
  00013	85 c0		 test	 eax, eax
  00015	75 0a		 jne	 SHORT $LN3@good
  00017	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv67[rsp], 1
  0001f	eb 08		 jmp	 SHORT $LN4@good
$LN3@good:
  00021	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv67[rsp], 0
$LN4@good:
  00029	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv67[rsp]

; 340  : 		}

  0002e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00032	c3		 ret	 0
?good@ios_base@std@@QEBA_NXZ ENDP			; std::ios_base::good
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?rdstate@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?rdstate@ios_base@std@@QEBAHXZ PROC			; std::ios_base::rdstate, COMDAT

; 314  : 		{	// return stream state

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 315  : 		return (_Mystate);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	8b 40 10	 mov	 eax, DWORD PTR [rax+16]

; 316  : 		}

  0000d	c3		 ret	 0
?rdstate@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::rdstate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?clear@ios_base@std@@QEAAXH_N@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
$T4 = 80
$T5 = 120
$T6 = 160
this$ = 224
_State$ = 232
_Reraise$ = 240
?clear@ios_base@std@@QEAAXH_N@Z PROC			; std::ios_base::clear, COMDAT

; 287  : 		{	// set state, possibly reraise exception

$LN11:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 81 ec d8 00
	00 00		 sub	 rsp, 216		; 000000d8H

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00015	8b 84 24 e8 00
	00 00		 mov	 eax, DWORD PTR _State$[rsp]
  0001c	83 e0 17	 and	 eax, 23
  0001f	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00027	89 41 10	 mov	 DWORD PTR [rcx+16], eax

; 289  : 		if ((_Mystate & _Except) == 0)

  0002a	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0003a	8b 49 14	 mov	 ecx, DWORD PTR [rcx+20]
  0003d	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00040	23 c1		 and	 eax, ecx
  00042	85 c0		 test	 eax, eax
  00044	75 05		 jne	 SHORT $LN2@clear
  00046	e9 01 01 00 00	 jmp	 $LN3@clear
$LN2@clear:

; 290  : 			;
; 291  : 		else if (_Reraise)

  0004b	0f b6 84 24 f0
	00 00 00	 movzx	 eax, BYTE PTR _Reraise$[rsp]
  00053	85 c0		 test	 eax, eax
  00055	74 0e		 je	 SHORT $LN4@clear

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	e9 e7 00 00 00	 jmp	 $LN5@clear
$LN4@clear:

; 293  : 		else if (_Mystate & _Except & badbit)

  00065	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006d	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00075	8b 49 14	 mov	 ecx, DWORD PTR [rcx+20]
  00078	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0007b	23 c1		 and	 eax, ecx
  0007d	83 e0 04	 and	 eax, 4
  00080	85 c0		 test	 eax, eax
  00082	74 39		 je	 SHORT $LN6@clear

; 294  : 			_THROW_NCEE(failure, "ios_base::badbit set");

  00084	ba 01 00 00 00	 mov	 edx, 1
  00089	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0008e	e8 00 00 00 00	 call	 ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
  00093	4c 8b c0	 mov	 r8, rax
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
  0009d	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T4[rsp]
  000a2	e8 00 00 00 00	 call	 ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  000ae	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T4[rsp]
  000b3	e8 00 00 00 00	 call	 _CxxThrowException
  000b8	e9 8f 00 00 00	 jmp	 $LN7@clear
$LN6@clear:

; 295  : 		else if (_Mystate & _Except & failbit)

  000bd	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000c5	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000cd	8b 49 14	 mov	 ecx, DWORD PTR [rcx+20]
  000d0	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000d3	23 c1		 and	 eax, ecx
  000d5	83 e0 02	 and	 eax, 2
  000d8	85 c0		 test	 eax, eax
  000da	74 36		 je	 SHORT $LN8@clear

; 296  : 			_THROW_NCEE(failure, "ios_base::failbit set");

  000dc	ba 01 00 00 00	 mov	 edx, 1
  000e1	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T2[rsp]
  000e6	e8 00 00 00 00	 call	 ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
  000eb	4c 8b c0	 mov	 r8, rax
  000ee	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
  000f5	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T5[rsp]
  000fa	e8 00 00 00 00	 call	 ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
  000ff	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  00106	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T5[rsp]
  0010b	e8 00 00 00 00	 call	 _CxxThrowException

; 297  : 		else

  00110	eb 3a		 jmp	 SHORT $LN9@clear
$LN8@clear:

; 298  : 			_THROW_NCEE(failure, "ios_base::eofbit set");

  00112	ba 01 00 00 00	 mov	 edx, 1
  00117	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T3[rsp]
  0011c	e8 00 00 00 00	 call	 ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
  00121	4c 8b c0	 mov	 r8, rax
  00124	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
  0012b	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  00133	e8 00 00 00 00	 call	 ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
  00138	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  0013f	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  00147	e8 00 00 00 00	 call	 _CxxThrowException
$LN9@clear:
$LN7@clear:
$LN5@clear:
$LN3@clear:
$LN10@clear:

; 299  : 		}

  0014c	48 81 c4 d8 00
	00 00		 add	 rsp, 216		; 000000d8H
  00153	c3		 ret	 0
?clear@ios_base@std@@QEAAXH_N@Z ENDP			; std::ios_base::clear
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gfailure@ios_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfailure@ios_base@std@@UEAAPEAXI@Z PROC		; std::ios_base::failure::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1failure@ios_base@std@@UEAA@XZ
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_Gfailure@ios_base@std@@UEAAPEAXI@Z ENDP		; std::ios_base::failure::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0failure@ios_base@std@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0failure@ios_base@std@@QEAA@AEBV012@@Z PROC		; std::ios_base::failure::failure, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ??0system_error@std@@QEAA@AEBV01@@Z
  0001d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00029	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00035	c3		 ret	 0
??0failure@ios_base@std@@QEAA@AEBV012@@Z ENDP		; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1failure@ios_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1failure@ios_base@std@@UEAA@XZ PROC			; std::ios_base::failure::~failure, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ??1system_error@std@@UEAA@XZ
  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
??1failure@ios_base@std@@UEAA@XZ ENDP			; std::ios_base::failure::~failure
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 80
_Message$ = 88
_Errcode$ = 96
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z PROC ; std::ios_base::failure::failure, COMDAT

; 238  : 			{	// construct with message

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 237  : 			: system_error(_Errcode, _Message)

  00015	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  0001a	48 8b f8	 mov	 rdi, rax
  0001d	48 8b 74 24 60	 mov	 rsi, QWORD PTR _Errcode$[rsp]
  00022	b9 10 00 00 00	 mov	 ecx, 16
  00027	f3 a4		 rep movsb
  00029	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Message$[rsp]
  0002e	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00033	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00038	e8 00 00 00 00	 call	 ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z ; std::system_error::system_error

; 238  : 			{	// construct with message

  0003d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx

; 239  : 			}

  0004c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00055	5f		 pop	 rdi
  00056	5e		 pop	 rsi
  00057	c3		 ret	 0
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ENDP ; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
_TEXT	SEGMENT
$T1 = 32
??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ PROC ; std::_Immortalize<std::_Iostream_error_category>, COMDAT

; 697  : 	{	// return a reference to an object that will live forever

$LN5:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 698  : 	/* MAGIC */ static _Immortalizer<_Ty> _Static;

  0000d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:_Init_thread_epoch
  00012	8b c0		 mov	 eax, eax
  00014	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _tls_index
  0001a	65 48 8b 14 25
	58 00 00 00	 mov	 rdx, QWORD PTR gs:88
  00023	48 8b 0c ca	 mov	 rcx, QWORD PTR [rdx+rcx*8]
  00027	8b 04 08	 mov	 eax, DWORD PTR [rax+rcx]
  0002a	39 05 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, eax ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00030	7e 3a		 jle	 SHORT $LN2@Immortaliz
  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00039	e8 00 00 00 00	 call	 _Init_thread_header
  0003e	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, -1 ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00045	75 25		 jne	 SHORT $LN2@Immortaliz
  00047	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
  0004e	e8 00 00 00 00	 call	 ??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>
  00053	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''
  0005a	e8 00 00 00 00	 call	 atexit
  0005f	90		 npad	 1
  00060	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00067	e8 00 00 00 00	 call	 _Init_thread_footer
$LN2@Immortaliz:

; 699  : 	return (*reinterpret_cast<_Ty *>(&_Static._Storage));

  0006c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static

; 700  : 	}

  00073	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00077	c3		 ret	 0
??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ENDP ; std::_Immortalize<std::_Iostream_error_category>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
?dtor$0@?0???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@4HA PROC ; `std::_Immortalize<std::_Iostream_error_category>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00010	e8 00 00 00 00	 call	 _Init_thread_abort
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@4HA ENDP ; `std::_Immortalize<std::_Iostream_error_category>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
?dtor$0@?0???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@4HA PROC ; `std::_Immortalize<std::_Iostream_error_category>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00010	e8 00 00 00 00	 call	 _Init_thread_abort
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@4HA ENDP ; `std::_Immortalize<std::_Iostream_error_category>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Iostream_error_category@std@@UEAAPEAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1_Iostream_error_category@std@@UEAA@XZ
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 10 00 00 00	 mov	 edx, 16
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_G_Iostream_error_category@std@@UEAAPEAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_Iostream_error_category@std@@UEAA@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ??1_Generic_error_category@std@@UEAA@XZ
  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
??1_Iostream_error_category@std@@UEAA@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
_Errcode$ = 80
?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT

; 626  : 		{	// convert to name of error

$LN7:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00013	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 627  : 		if (_Errcode == (int)io_errc::stream)

  0001b	83 7c 24 50 01	 cmp	 DWORD PTR _Errcode$[rsp], 1
  00020	75 25		 jne	 SHORT $LN2@message

; 628  : 			return ("iostream stream error");

  00022	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
  00029	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0002e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00033	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00037	83 c8 01	 or	 eax, 1
  0003a	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0003e	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00043	eb 26		 jmp	 SHORT $LN1@message

; 629  : 		else

  00045	eb 24		 jmp	 SHORT $LN1@message
$LN2@message:

; 630  : 			return (_Generic_error_category::message(_Errcode));

  00047	44 8b 44 24 50	 mov	 r8d, DWORD PTR _Errcode$[rsp]
  0004c	48 8b 54 24 48	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  00051	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
  0005b	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  0005f	83 c8 01	 or	 eax, 1
  00062	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00066	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@message:

; 631  : 		}

  0006b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006f	c3		 ret	 0
?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?name@_Iostream_error_category@std@@UEBAPEBDXZ PROC	; std::_Iostream_error_category::name, COMDAT

; 621  : 		{	// get name of category

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 622  : 		return ("iostream");

  00005	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08LLGCOLLL@iostream?$AA@

; 623  : 		}

  0000c	c3		 ret	 0
?name@_Iostream_error_category@std@@UEBAPEBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_Iostream_error_category@std@@QEAA@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT

; 615  : 	_Iostream_error_category() _NOEXCEPT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 616  : 		{	// default constructor

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ??0_Generic_error_category@std@@QEAA@XZ ; std::_Generic_error_category::_Generic_error_category
  00013	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@
  0001f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 617  : 		_Addr = _Iostream_addr;

  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 c7 40 08 05
	00 00 00	 mov	 QWORD PTR [rax+8], 5

; 618  : 		}

  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00038	c3		 ret	 0
??0_Iostream_error_category@std@@QEAA@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Generic_error_category@std@@UEAAPEAXI@Z PROC	; std::_Generic_error_category::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1_Generic_error_category@std@@UEAA@XZ
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 10 00 00 00	 mov	 edx, 16
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_G_Generic_error_category@std@@UEAAPEAXI@Z ENDP	; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_Generic_error_category@std@@UEAA@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ??1error_category@std@@UEAA@XZ ; std::error_category::~error_category
  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
??1_Generic_error_category@std@@UEAA@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
_Errcode$ = 80
?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT

; 605  : 		{	// convert to name of error

$LN5:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00013	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 606  : 		return (_Syserror_map(_Errcode));

  0001b	8b 4c 24 50	 mov	 ecx, DWORD PTR _Errcode$[rsp]
  0001f	e8 00 00 00 00	 call	 ?_Syserror_map@std@@YAPEBDH@Z ; std::_Syserror_map
  00024	48 8b d0	 mov	 rdx, rax
  00027	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0002c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00031	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00035	83 c8 01	 or	 eax, 1
  00038	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0003c	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 607  : 		}

  00041	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00045	c3		 ret	 0
?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?name@_Generic_error_category@std@@UEBAPEBDXZ PROC	; std::_Generic_error_category::name, COMDAT

; 600  : 		{	// get name of category

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 601  : 		return ("generic");

  00005	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_07DCLBNMLN@generic?$AA@

; 602  : 		}

  0000c	c3		 ret	 0
?name@_Generic_error_category@std@@UEBAPEBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_Generic_error_category@std@@QEAA@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT

; 594  : 	_Generic_error_category() _NOEXCEPT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 595  : 		{	// default constructor

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ??0error_category@std@@QEAA@XZ ; std::error_category::error_category
  00013	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7_Generic_error_category@std@@6B@
  0001f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 596  : 		_Addr = _Generic_addr;

  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 c7 40 08 03
	00 00 00	 mov	 QWORD PTR [rax+8], 3

; 597  : 		}

  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00038	c3		 ret	 0
??0_Generic_error_category@std@@QEAA@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gsystem_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gsystem_error@std@@UEAAPEAXI@Z PROC			; std::system_error::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1system_error@std@@UEAA@XZ
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_Gsystem_error@std@@UEAAPEAXI@Z ENDP			; std::system_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0system_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0system_error@std@@QEAA@AEBV01@@Z PROC		; std::system_error::system_error, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ??0_System_error@std@@QEAA@AEBV01@@Z
  0001d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7system_error@std@@6B@
  00029	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00035	c3		 ret	 0
??0system_error@std@@QEAA@AEBV01@@Z ENDP		; std::system_error::system_error
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1system_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1system_error@std@@UEAA@XZ PROC			; std::system_error::~system_error, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ??1_System_error@std@@UEAA@XZ
  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
??1system_error@std@@UEAA@XZ ENDP			; std::system_error::~system_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
__$ArrayPad$ = 96
this$ = 144
_Errcode$ = 152
_Message$ = 160
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z PROC	; std::system_error::system_error, COMDAT

; 548  : 		{	// construct from error code and message string

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00015	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0001e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00025	48 33 c4	 xor	 rax, rsp
  00028	48 89 44 24 60	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 547  : 		: _Mybase(_Errcode, _Message)

  0002d	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Message$[rsp]
  00035	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T3[rsp]
  0003a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	90		 npad	 1
  00040	48 8d 44 24 30	 lea	 rax, QWORD PTR $T2[rsp]
  00045	48 8b f8	 mov	 rdi, rax
  00048	48 8b b4 24 98
	00 00 00	 mov	 rsi, QWORD PTR _Errcode$[rsp]
  00050	b9 10 00 00 00	 mov	 ecx, 16
  00055	f3 a4		 rep movsb
  00057	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T3[rsp]
  0005c	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T2[rsp]
  00061	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00069	e8 00 00 00 00	 call	 ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
  0006e	90		 npad	 1
  0006f	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T3[rsp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 548  : 		{	// construct from error code and message string

  00079	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00081	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7system_error@std@@6B@
  00088	48 89 08	 mov	 QWORD PTR [rax], rcx

; 549  : 		}

  0008b	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00098	48 33 cc	 xor	 rcx, rsp
  0009b	e8 00 00 00 00	 call	 __security_check_cookie
  000a0	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000a4	5f		 pop	 rdi
  000a5	5e		 pop	 rsi
  000a6	c3		 ret	 0
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z ENDP	; std::system_error::system_error
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
__$ArrayPad$ = 96
this$ = 144
_Errcode$ = 152
_Message$ = 160
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 40	 lea	 rcx, QWORD PTR $T3[rbp]
  0000d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
__$ArrayPad$ = 96
this$ = 144
_Errcode$ = 152
_Message$ = 160
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 40	 lea	 rcx, QWORD PTR $T3[rbp]
  0000d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_System_error@std@@UEAAPEAXI@Z PROC			; std::_System_error::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1_System_error@std@@UEAA@XZ
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_G_System_error@std@@UEAAPEAXI@Z ENDP			; std::_System_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_System_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 64
__that$ = 72
??0_System_error@std@@QEAA@AEBV01@@Z PROC		; std::_System_error::_System_error, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b 54 24 48	 mov	 rdx, QWORD PTR __that$[rsp]
  00015	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0001a	e8 00 00 00 00	 call	 ??0runtime_error@std@@QEAA@AEBV01@@Z
  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7_System_error@std@@6B@
  0002b	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00033	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __that$[rsp]
  00038	48 8d 78 18	 lea	 rdi, QWORD PTR [rax+24]
  0003c	48 8d 71 18	 lea	 rsi, QWORD PTR [rcx+24]
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 a4		 rep movsb
  00047	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00050	5f		 pop	 rdi
  00051	5e		 pop	 rsi
  00052	c3		 ret	 0
??0_System_error@std@@QEAA@AEBV01@@Z ENDP		; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_System_error@std@@UEAA@XZ PROC			; std::_System_error::~_System_error, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ??1runtime_error@std@@UEAA@XZ
  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
??1_System_error@std@@UEAA@XZ ENDP			; std::_System_error::~_System_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T1 = 32
tv131 = 40
tv69 = 48
tv133 = 56
$T2 = 64
$T3 = 80
$T4 = 96
$T5 = 128
__$ArrayPad$ = 160
this$ = 208
_Errcode$ = 216
_Message$ = 224
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_System_error::_System_error, COMDAT

; 523  : 		{	// construct from error code and message string

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 81 ec b8 00
	00 00		 sub	 rsp, 184		; 000000b8H
  00018	48 c7 44 24 40
	fe ff ff ff	 mov	 QWORD PTR $T2[rsp], -2
  00021	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00028	48 33 c4	 xor	 rax, rsp
  0002b	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 522  : 		: runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode)

  00033	48 8d 44 24 60	 lea	 rax, QWORD PTR $T4[rsp]
  00038	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003d	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR _Message$[rsp]
  00045	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004f	48 89 44 24 28	 mov	 QWORD PTR tv131[rsp], rax
  00054	48 8d 44 24 50	 lea	 rax, QWORD PTR $T3[rsp]
  00059	48 8b f8	 mov	 rdi, rax
  0005c	48 8b b4 24 d8
	00 00 00	 mov	 rsi, QWORD PTR _Errcode$[rsp]
  00064	b9 10 00 00 00	 mov	 ecx, 16
  00069	f3 a4		 rep movsb
  0006b	4c 8b 44 24 28	 mov	 r8, QWORD PTR tv131[rsp]
  00070	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T3[rsp]
  00075	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
  00082	48 89 44 24 30	 mov	 QWORD PTR tv69[rsp], rax
  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR tv69[rsp]
  0008c	48 89 44 24 38	 mov	 QWORD PTR tv133[rsp], rax
  00091	48 8b 54 24 38	 mov	 rdx, QWORD PTR tv133[rsp]
  00096	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009e	e8 00 00 00 00	 call	 ??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
  000a3	90		 npad	 1
  000a4	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  000ac	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 523  : 		{	// construct from error code and message string

  000b1	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000b9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7_System_error@std@@6B@
  000c0	48 89 08	 mov	 QWORD PTR [rax], rcx

; 522  : 		: runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode)

  000c3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000cb	48 8d 78 18	 lea	 rdi, QWORD PTR [rax+24]
  000cf	48 8b b4 24 d8
	00 00 00	 mov	 rsi, QWORD PTR _Errcode$[rsp]
  000d7	b9 10 00 00 00	 mov	 ecx, 16
  000dc	f3 a4		 rep movsb

; 524  : 		}

  000de	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e6	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000ee	48 33 cc	 xor	 rcx, rsp
  000f1	e8 00 00 00 00	 call	 __security_check_cookie
  000f6	48 81 c4 b8 00
	00 00		 add	 rsp, 184		; 000000b8H
  000fd	5f		 pop	 rdi
  000fe	5e		 pop	 rsi
  000ff	c3		 ret	 0
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_System_error::_System_error
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv131 = 40
tv69 = 48
tv133 = 56
$T2 = 64
$T3 = 80
$T4 = 96
$T5 = 128
__$ArrayPad$ = 160
this$ = 208
_Errcode$ = 216
_Message$ = 224
?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::_System_error::_System_error'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d 80 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00010	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::_System_error::_System_error'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv131 = 40
tv69 = 48
tv133 = 56
$T2 = 64
$T3 = 80
$T4 = 96
$T5 = 128
__$ArrayPad$ = 160
this$ = 208
_Errcode$ = 216
_Message$ = 224
?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::_System_error::_System_error'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 8d 80 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00010	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::_System_error::_System_error'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
_TEXT	SEGMENT
$T1 = 32
tv79 = 40
tv84 = 48
$T2 = 56
$T3 = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z PROC ; std::_System_error::_Makestr, COMDAT

; 513  : 		{	// compose error message

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00013	48 c7 44 24 38
	fe ff ff ff	 mov	 QWORD PTR $T2[rsp], -2
  0001c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00023	48 33 c4	 xor	 rax, rsp
  00026	48 89 44 24 60	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0002b	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 514  : 		if (!_Message.empty())

  00033	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003b	e8 00 00 00 00	 call	 ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
  00040	0f b6 c0	 movzx	 eax, al
  00043	85 c0		 test	 eax, eax
  00045	75 14		 jne	 SHORT $LN2@Makestr

; 515  : 			_Message.append(": ");

  00047	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5?$AA@
  0004e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Message$[rsp]
  00056	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN2@Makestr:

; 516  : 		_Message.append(_Errcode.message());

  0005b	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T3[rsp]
  00060	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Errcode$[rsp]
  00068	e8 00 00 00 00	 call	 ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
  0006d	48 89 44 24 28	 mov	 QWORD PTR tv79[rsp], rax
  00072	48 8b 44 24 28	 mov	 rax, QWORD PTR tv79[rsp]
  00077	48 89 44 24 30	 mov	 QWORD PTR tv84[rsp], rax
  0007c	48 8b 54 24 30	 mov	 rdx, QWORD PTR tv84[rsp]
  00081	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Message$[rsp]
  00089	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  0008e	90		 npad	 1
  0008f	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T3[rsp]
  00094	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 517  : 		return (_Message);

  00099	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR _Message$[rsp]
  000a1	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000a9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ae	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  000b2	83 c8 01	 or	 eax, 1
  000b5	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  000b9	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Message$[rsp]
  000c1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c6	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 518  : 		}

  000ce	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000d3	48 33 cc	 xor	 rcx, rsp
  000d6	e8 00 00 00 00	 call	 __security_check_cookie
  000db	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000df	c3		 ret	 0
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ENDP ; std::_System_error::_Makestr
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv79 = 40
tv84 = 48
$T2 = 56
$T3 = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  00010	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
$T1 = 32
tv79 = 40
tv84 = 48
$T2 = 56
$T3 = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
  0001b	40 55		 push	 rbp
  0001d	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00021	48 8b ea	 mov	 rbp, rdx
  00024	48 8d 4d 40	 lea	 rcx, QWORD PTR $T3[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv79 = 40
tv84 = 48
$T2 = 56
$T3 = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  00010	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5d		 pop	 rbp
  0001a	c3		 ret	 0
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv79 = 40
tv84 = 48
$T2 = 56
$T3 = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
  0001b	40 55		 push	 rbp
  0001d	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00021	48 8b ea	 mov	 rbp, rdx
  00024	48 8d 4d 40	 lea	 rcx, QWORD PTR $T3[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??8std@@YA_NAEBVerror_condition@0@0@Z
_TEXT	SEGMENT
tv78 = 32
tv72 = 36
tv69 = 40
_Left$ = 64
_Right$ = 72
??8std@@YA_NAEBVerror_condition@0@0@Z PROC		; std::operator==, COMDAT

; 392  : 	{	// test errors for equality

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 393  : 	return (_Left.category() == _Right.category()

  0000e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00013	e8 00 00 00 00	 call	 ?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ; std::error_condition::category
  00018	48 89 44 24 28	 mov	 QWORD PTR tv69[rsp], rax
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  00022	e8 00 00 00 00	 call	 ?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ; std::error_condition::category
  00027	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv69[rsp]
  0002c	48 8b d1	 mov	 rdx, rcx
  0002f	48 8b c8	 mov	 rcx, rax
  00032	e8 00 00 00 00	 call	 ??8error_category@std@@QEBA_NAEBV01@@Z ; std::error_category::operator==
  00037	0f b6 c0	 movzx	 eax, al
  0003a	85 c0		 test	 eax, eax
  0003c	74 2a		 je	 SHORT $LN3@operator
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  00043	e8 00 00 00 00	 call	 ?value@error_condition@std@@QEBAHXZ ; std::error_condition::value
  00048	89 44 24 24	 mov	 DWORD PTR tv72[rsp], eax
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00051	e8 00 00 00 00	 call	 ?value@error_condition@std@@QEBAHXZ ; std::error_condition::value
  00056	8b 4c 24 24	 mov	 ecx, DWORD PTR tv72[rsp]
  0005a	3b c8		 cmp	 ecx, eax
  0005c	75 0a		 jne	 SHORT $LN3@operator
  0005e	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv78[rsp], 1
  00066	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00068	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv78[rsp], 0
$LN4@operator:
  00070	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv78[rsp]

; 394  : 		&& _Left.value() == _Right.value());
; 395  : 	}

  00075	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00079	c3		 ret	 0
??8std@@YA_NAEBVerror_condition@0@0@Z ENDP		; std::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT

; 345  : 		{	// get category

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 346  : 		return (*_Mycat);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 347  : 		}

  0000e	c3		 ret	 0
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_condition@std@@QEBAHXZ PROC		; std::error_condition::value, COMDAT

; 340  : 		{	// get error code

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 341  : 		return (_Myval);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	8b 00		 mov	 eax, DWORD PTR [rax]

; 342  : 		}

  0000c	c3		 ret	 0
?value@error_condition@std@@QEBAHXZ ENDP		; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT

; 307  : 		{	// construct from error code and category

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  0000e	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR _Val$[rsp]
  00017	89 08		 mov	 DWORD PTR [rax], ecx
  00019	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0001e	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Cat$[rsp]
  00023	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 308  : 		}

  00027	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0002c	c3		 ret	 0
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
tv67 = 40
tv70 = 48
this$ = 80
__$ReturnUdt$ = 88
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::error_code::message, COMDAT

; 279  : 		{	// get name of error code

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0000e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 280  : 		return (category().message(value()));

  00016	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0001b	e8 00 00 00 00	 call	 ?category@error_code@std@@QEBAAEBVerror_category@2@XZ ; std::error_code::category
  00020	48 89 44 24 28	 mov	 QWORD PTR tv67[rsp], rax
  00025	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ?value@error_code@std@@QEBAHXZ ; std::error_code::value
  0002f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv67[rsp]
  00034	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00037	48 89 4c 24 30	 mov	 QWORD PTR tv70[rsp], rcx
  0003c	44 8b c0	 mov	 r8d, eax
  0003f	48 8b 54 24 58	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  00044	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv67[rsp]
  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR tv70[rsp]
  0004e	ff 50 10	 call	 QWORD PTR [rax+16]
  00051	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00055	83 c8 01	 or	 eax, 1
  00058	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0005c	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 281  : 		}

  00061	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00065	c3		 ret	 0
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::error_code::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_code@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_code::category, COMDAT

; 272  : 		{	// get category

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 273  : 		return (*_Mycat);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 274  : 		}

  0000e	c3		 ret	 0
?category@error_code@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_code@std@@QEBAHXZ PROC			; std::error_code::value, COMDAT

; 267  : 		{	// get error code

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 268  : 		return (_Myval);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	8b 00		 mov	 eax, DWORD PTR [rax]

; 269  : 		}

  0000c	c3		 ret	 0
?value@error_code@std@@QEBAHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0error_code@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z PROC	; std::error_code::error_code, COMDAT

; 234  : 		{	// construct from error code and category

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  0000e	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR _Val$[rsp]
  00017	89 08		 mov	 DWORD PTR [rax], ecx
  00019	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0001e	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Cat$[rsp]
  00023	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 235  : 		}

  00027	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0002c	c3		 ret	 0
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ENDP	; std::error_code::error_code
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gerror_category@std@@UEAAPEAXI@Z PROC		; std::error_category::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1error_category@std@@UEAA@XZ ; std::error_category::~error_category
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 10 00 00 00	 mov	 edx, 16
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_Gerror_category@std@@UEAAPEAXI@Z ENDP		; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv67 = 0
this$ = 32
_Right$ = 40
??8error_category@std@@QEBA_NAEBV01@@Z PROC		; std::error_category::operator==, COMDAT

; 191  : 		{	// compare categories for equality

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 18	 sub	 rsp, 24

; 192  : 		return (_Addr == _Right._Addr);

  0000e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00013	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  00018	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0001c	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  00020	75 09		 jne	 SHORT $LN3@operator
  00022	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  00029	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002b	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@operator:
  00032	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 193  : 		}

  00036	48 83 c4 18	 add	 rsp, 24
  0003a	c3		 ret	 0
??8error_category@std@@QEBA_NAEBV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
_TEXT	SEGMENT
tv74 = 32
this$ = 64
_Code$ = 72
_Errval$ = 80
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT

; 462  : 	{	// test if conditions same for this category

$LN5:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 463  : 	return (*this == _Code.category() && _Code.value() == _Errval);

  00013	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Code$[rsp]
  00018	e8 00 00 00 00	 call	 ?category@error_code@std@@QEBAAEBVerror_category@2@XZ ; std::error_code::category
  0001d	48 8b d0	 mov	 rdx, rax
  00020	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00025	e8 00 00 00 00	 call	 ??8error_category@std@@QEBA_NAEBV01@@Z ; std::error_category::operator==
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 1a		 je	 SHORT $LN3@equivalent
  00031	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Code$[rsp]
  00036	e8 00 00 00 00	 call	 ?value@error_code@std@@QEBAHXZ ; std::error_code::value
  0003b	3b 44 24 50	 cmp	 eax, DWORD PTR _Errval$[rsp]
  0003f	75 0a		 jne	 SHORT $LN3@equivalent
  00041	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv74[rsp], 1
  00049	eb 08		 jmp	 SHORT $LN4@equivalent
$LN3@equivalent:
  0004b	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv74[rsp], 0
$LN4@equivalent:
  00053	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv74[rsp]

; 464  : 	}

  00058	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005c	c3		 ret	 0
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Errval$ = 72
_Cond$ = 80
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT

; 455  : 	{	// test if error code same condition

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 456  : 	return (default_error_condition(_Errval) == _Cond);

  00012	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001a	44 8b 44 24 48	 mov	 r8d, DWORD PTR _Errval$[rsp]
  0001f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00029	ff 50 18	 call	 QWORD PTR [rax+24]
  0002c	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Cond$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??8std@@YA_NAEBVerror_condition@0@0@Z ; std::operator==

; 457  : 	}

  00039	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003d	c3		 ret	 0
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Errval$ = 64
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT

; 448  : 	{	// make error_condition for error code

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 449  : 	return (error_condition(_Errval, *this));

  00013	4c 8b 44 24 30	 mov	 r8, QWORD PTR this$[rsp]
  00018	8b 54 24 40	 mov	 edx, DWORD PTR _Errval$[rsp]
  0001c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00021	e8 00 00 00 00	 call	 ??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_condition::error_condition
  00026	48 8b 44 24 38	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 450  : 	}

  0002b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002f	c3		 ret	 0
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1error_category@std@@UEAA@XZ PROC			; std::error_category::~error_category, COMDAT

; 174  : 		{	// destroy the object

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7error_category@std@@6B@
  00011	48 89 08	 mov	 QWORD PTR [rax], rcx

; 175  : 		}

  00014	c3		 ret	 0
??1error_category@std@@UEAA@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0error_category@std@@QEAA@XZ PROC			; std::error_category::error_category, COMDAT

; 168  : 	/* constexpr */ error_category() _NOEXCEPT	// TRANSITION

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 169  : 		{	// default constructor

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7error_category@std@@6B@
  00011	48 89 08	 mov	 QWORD PTR [rax], rcx

; 170  : 		_Addr = reinterpret_cast<uintptr_t>(this);

  00014	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00019	48 8b 4c 24 08	 mov	 rcx, QWORD PTR this$[rsp]
  0001e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 171  : 		}

  00022	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00027	c3		 ret	 0
??0error_category@std@@QEAA@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?iostream_category@std@@YAAEBVerror_category@1@XZ
_TEXT	SEGMENT
$T1 = 32
?iostream_category@std@@YAAEBVerror_category@1@XZ PROC	; std::iostream_category, COMDAT

; 708  : 	{	// get iostream_category

$LN3:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  0000d	e8 00 00 00 00	 call	 ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>
  00012	90		 npad	 1

; 710  : 	}

  00013	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00017	c3		 ret	 0
?iostream_category@std@@YAAEBVerror_category@1@XZ ENDP	; std::iostream_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Errno$ = 56
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z PROC ; std::make_error_code, COMDAT

; 479  : 	{	// make an error_code

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 480  : 	return (error_code((int)_Errno, iostream_category()));

  0000d	e8 00 00 00 00	 call	 ?iostream_category@std@@YAAEBVerror_category@1@XZ ; std::iostream_category
  00012	4c 8b c0	 mov	 r8, rax
  00015	8b 54 24 38	 mov	 edx, DWORD PTR _Errno$[rsp]
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0001e	e8 00 00 00 00	 call	 ??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_code::error_code
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 481  : 	}

  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	c3		 ret	 0
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ENDP ; std::make_error_code
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Psave$1 = 32
_Pf$2 = 40
_Lock$3 = 48
_Pfmod$4 = 56
_Id$5 = 64
$T6 = 72
$T7 = 80
$T8 = 88
_Loc$ = 128
??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::ctype<char> >, COMDAT

; 553  : 	{	// get facet reference from locale

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00009	48 c7 44 24 50
	fe ff ff ff	 mov	 QWORD PTR $T7[rsp], -2

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

  00012	33 d2		 xor	 edx, edx
  00014	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  00019	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  0001e	90		 npad	 1

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

  0001f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<char> >::_Psave
  00026	48 89 44 24 20	 mov	 QWORD PTR _Psave$1[rsp], rax

; 562  : 
; 563  : 		size_t _Id = _Facet::id;

  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
  00032	e8 00 00 00 00	 call	 ??Bid@locale@std@@QEAA_KXZ ; std::locale::id::operator unsigned __int64
  00037	48 89 44 24 40	 mov	 QWORD PTR _Id$5[rsp], rax

; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);

  0003c	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Id$5[rsp]
  00041	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Loc$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet
  0004e	48 89 44 24 28	 mov	 QWORD PTR _Pf$2[rsp], rax

; 565  : 
; 566  : 		if (_Pf != 0)

  00053	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pf$2[rsp], 0
  00059	74 05		 je	 SHORT $LN2@use_facet
  0005b	e9 84 00 00 00	 jmp	 $LN3@use_facet
$LN2@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

  00060	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Psave$1[rsp], 0
  00066	74 0c		 je	 SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  0006d	48 89 44 24 28	 mov	 QWORD PTR _Pf$2[rsp], rax
  00072	eb 70		 jmp	 SHORT $LN3@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

  00074	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Loc$[rsp]
  0007c	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _Psave$1[rsp]
  00081	e8 00 00 00 00	 call	 ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::ctype<char>::_Getcat
  00086	48 83 f8 ff	 cmp	 rax, -1
  0008a	75 1e		 jne	 SHORT $LN6@use_facet

; 571  : 
; 572  :  #if _HAS_EXCEPTIONS
; 573  : 
; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

  0008c	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T8[rsp]
  00091	e8 00 00 00 00	 call	 ??0bad_cast@std@@QEAA@XZ ; std::bad_cast::bad_cast
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
  0009d	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T8[rsp]
  000a2	e8 00 00 00 00	 call	 _CxxThrowException
  000a7	90		 npad	 1

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else

  000a8	eb 3a		 jmp	 SHORT $LN3@use_facet
$LN6@use_facet:

; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

  000aa	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  000af	48 89 44 24 28	 mov	 QWORD PTR _Pf$2[rsp], rax

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

  000b4	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  000b9	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB, rax ; std::_Facetptr<std::ctype<char> >::_Psave

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;

  000c0	48 8b 44 24 20	 mov	 rax, QWORD PTR _Psave$1[rsp]
  000c5	48 89 44 24 38	 mov	 QWORD PTR _Pfmod$4[rsp], rax

; 586  : 			_Pfmod->_Incref();

  000ca	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pfmod$4[rsp]
  000cf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d2	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pfmod$4[rsp]
  000d7	ff 50 08	 call	 QWORD PTR [rax+8]

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

  000da	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pfmod$4[rsp]
  000df	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
$LN3@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

  000e4	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pf$2[rsp]
  000e9	48 89 44 24 48	 mov	 QWORD PTR $T6[rsp], rax
  000ee	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  000f3	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  000f8	48 8b 44 24 48	 mov	 rax, QWORD PTR $T6[rsp]

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

  000fd	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00101	c3		 ret	 0
$LN10@use_facet:
??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::ctype<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Psave$1 = 32
_Pf$2 = 40
_Lock$3 = 48
_Pfmod$4 = 56
_Id$5 = 64
$T6 = 72
$T7 = 80
$T8 = 88
_Loc$ = 128
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 30	 lea	 rcx, QWORD PTR _Lock$3[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Psave$1 = 32
_Pf$2 = 40
_Lock$3 = 48
_Pfmod$4 = 56
_Id$5 = 64
$T6 = 72
$T7 = 80
$T8 = 88
_Loc$ = 128
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8d 4d 30	 lea	 rcx, QWORD PTR _Lock$3[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$ctype@D@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$ctype@D@std@@MEAAPEAXI@Z PROC			; std::ctype<char>::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1?$ctype@D@std@@MEAA@XZ ; std::ctype<char>::~ctype<char>
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_G?$ctype@D@std@@MEAAPEAXI@Z ENDP			; std::ctype<char>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
__formal$ = 72
_Dest$ = 80
?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z PROC	; std::ctype<char>::do_narrow, COMDAT

; 2558 : 		{	// narrow elements in [_First, _Last) to chars

$LN3:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2559 : 		_DEBUG_RANGE_PTR(_First, _Last, _Dest);
; 2560 : 		_CSTD memcpy(_Dest, _First, _Last - _First);

  00018	48 8b 44 24 38	 mov	 rax, QWORD PTR _First$[rsp]
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Last$[rsp]
  00022	48 2b c8	 sub	 rcx, rax
  00025	48 8b c1	 mov	 rax, rcx
  00028	4c 8b c0	 mov	 r8, rax
  0002b	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First$[rsp]
  00030	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00035	e8 00 00 00 00	 call	 memcpy

; 2561 : 		return (_Last);

  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR _Last$[rsp]

; 2562 : 		}

  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	c3		 ret	 0
?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z ENDP	; std::ctype<char>::do_narrow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_narrow@?$ctype@D@std@@MEBADDD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
__formal$ = 24
?do_narrow@?$ctype@D@std@@MEBADDD@Z PROC		; std::ctype<char>::do_narrow, COMDAT

; 2552 : 		{	// narrow char

  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 2553 : 		return (_Ch);

  0000e	0f b6 44 24 10	 movzx	 eax, BYTE PTR _Ch$[rsp]

; 2554 : 		}

  00013	c3		 ret	 0
?do_narrow@?$ctype@D@std@@MEBADDD@Z ENDP		; std::ctype<char>::do_narrow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z PROC	; std::ctype<char>::do_widen, COMDAT

; 2545 : 		{	// widen chars in [_First, _Last)

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2546 : 		_DEBUG_RANGE_PTR(_First, _Last, _Dest);
; 2547 : 		_CSTD memcpy(_Dest, _First, _Last - _First);

  00018	48 8b 44 24 38	 mov	 rax, QWORD PTR _First$[rsp]
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Last$[rsp]
  00022	48 2b c8	 sub	 rcx, rax
  00025	48 8b c1	 mov	 rax, rcx
  00028	4c 8b c0	 mov	 r8, rax
  0002b	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First$[rsp]
  00030	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00035	e8 00 00 00 00	 call	 memcpy

; 2548 : 		return (_Last);

  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR _Last$[rsp]

; 2549 : 		}

  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	c3		 ret	 0
?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z ENDP	; std::ctype<char>::do_widen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_widen@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Byte$ = 16
?do_widen@?$ctype@D@std@@MEBADD@Z PROC			; std::ctype<char>::do_widen, COMDAT

; 2539 : 		{	// widen char

  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 2540 : 		return (_Byte);

  00009	0f b6 44 24 10	 movzx	 eax, BYTE PTR _Byte$[rsp]

; 2541 : 		}

  0000e	c3		 ret	 0
?do_widen@?$ctype@D@std@@MEBADD@Z ENDP			; std::ctype<char>::do_widen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z PROC	; std::ctype<char>::do_toupper, COMDAT

; 2531 : 		{	// convert [_First, _Last) in place to upper case

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2532 : 		_DEBUG_RANGE((const _Elem *)_First, _Last);
; 2533 : 		for (; _First != _Last; ++_First)

  00013	eb 0d		 jmp	 SHORT $LN4@do_toupper
$LN2@do_toupper:
  00015	48 8b 44 24 38	 mov	 rax, QWORD PTR _First$[rsp]
  0001a	48 ff c0	 inc	 rax
  0001d	48 89 44 24 38	 mov	 QWORD PTR _First$[rsp], rax
$LN4@do_toupper:
  00022	48 8b 44 24 40	 mov	 rax, QWORD PTR _Last$[rsp]
  00027	48 39 44 24 38	 cmp	 QWORD PTR _First$[rsp], rax
  0002c	74 22		 je	 SHORT $LN3@do_toupper

; 2534 : 			*_First = (_Elem)_Toupper((unsigned char)*_First, &_Ctype);

  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00033	48 83 c0 10	 add	 rax, 16
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003c	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0003f	48 8b d0	 mov	 rdx, rax
  00042	e8 00 00 00 00	 call	 _Toupper
  00047	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0004c	88 01		 mov	 BYTE PTR [rcx], al
  0004e	eb c5		 jmp	 SHORT $LN2@do_toupper
$LN3@do_toupper:

; 2535 : 		return ((const _Elem *)_First);

  00050	48 8b 44 24 38	 mov	 rax, QWORD PTR _First$[rsp]

; 2536 : 		}

  00055	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00059	c3		 ret	 0
?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z ENDP	; std::ctype<char>::do_toupper
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_toupper@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 48
_Ch$ = 56
?do_toupper@?$ctype@D@std@@MEBADD@Z PROC		; std::ctype<char>::do_toupper, COMDAT

; 2525 : 		{	// convert element to upper case

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2526 : 		return ((_Elem)_Toupper((unsigned char)_Ch, &_Ctype));

  0000d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00012	48 83 c0 10	 add	 rax, 16
  00016	0f b6 4c 24 38	 movzx	 ecx, BYTE PTR _Ch$[rsp]
  0001b	48 8b d0	 mov	 rdx, rax
  0001e	e8 00 00 00 00	 call	 _Toupper

; 2527 : 		}

  00023	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00027	c3		 ret	 0
?do_toupper@?$ctype@D@std@@MEBADD@Z ENDP		; std::ctype<char>::do_toupper
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z PROC	; std::ctype<char>::do_tolower, COMDAT

; 2517 : 		{	// convert [_First, _Last) in place to lower case

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2518 : 		_DEBUG_RANGE((const _Elem *)_First, _Last);
; 2519 : 		for (; _First != _Last; ++_First)

  00013	eb 0d		 jmp	 SHORT $LN4@do_tolower
$LN2@do_tolower:
  00015	48 8b 44 24 38	 mov	 rax, QWORD PTR _First$[rsp]
  0001a	48 ff c0	 inc	 rax
  0001d	48 89 44 24 38	 mov	 QWORD PTR _First$[rsp], rax
$LN4@do_tolower:
  00022	48 8b 44 24 40	 mov	 rax, QWORD PTR _Last$[rsp]
  00027	48 39 44 24 38	 cmp	 QWORD PTR _First$[rsp], rax
  0002c	74 22		 je	 SHORT $LN3@do_tolower

; 2520 : 			*_First = (_Elem)_Tolower((unsigned char)*_First, &_Ctype);

  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00033	48 83 c0 10	 add	 rax, 16
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003c	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0003f	48 8b d0	 mov	 rdx, rax
  00042	e8 00 00 00 00	 call	 _Tolower
  00047	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0004c	88 01		 mov	 BYTE PTR [rcx], al
  0004e	eb c5		 jmp	 SHORT $LN2@do_tolower
$LN3@do_tolower:

; 2521 : 		return ((const _Elem *)_First);

  00050	48 8b 44 24 38	 mov	 rax, QWORD PTR _First$[rsp]

; 2522 : 		}

  00055	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00059	c3		 ret	 0
?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z ENDP	; std::ctype<char>::do_tolower
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_tolower@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 48
_Ch$ = 56
?do_tolower@?$ctype@D@std@@MEBADD@Z PROC		; std::ctype<char>::do_tolower, COMDAT

; 2511 : 		{	// convert element to lower case

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2512 : 		return ((_Elem)_Tolower((unsigned char)_Ch, &_Ctype));

  0000d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00012	48 83 c0 10	 add	 rax, 16
  00016	0f b6 4c 24 38	 movzx	 ecx, BYTE PTR _Ch$[rsp]
  0001b	48 8b d0	 mov	 rdx, rax
  0001e	e8 00 00 00 00	 call	 _Tolower

; 2513 : 		}

  00023	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00027	c3		 ret	 0
?do_tolower@?$ctype@D@std@@MEBADD@Z ENDP		; std::ctype<char>::do_tolower
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Tidy@?$ctype@D@std@@IEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Tidy@?$ctype@D@std@@IEAAXXZ PROC			; std::ctype<char>::_Tidy, COMDAT

; 2501 : 		{	// free any allocated storage

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2502 : 		if (0 < _Ctype._Delfl)

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0000e	83 78 20 00	 cmp	 DWORD PTR [rax+32], 0
  00012	7e 10		 jle	 SHORT $LN2@Tidy

; 2503 : 			_CSTD free((void *)_Ctype._Table);

  00014	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00019	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  0001d	e8 00 00 00 00	 call	 free
  00022	eb 23		 jmp	 SHORT $LN3@Tidy
$LN2@Tidy:

; 2504 : 		else if (_Ctype._Delfl < 0)

  00024	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00029	83 78 20 00	 cmp	 DWORD PTR [rax+32], 0
  0002d	7d 18		 jge	 SHORT $LN4@Tidy

; 2505 : 			delete[] _Ctype._Table;

  0002f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00038	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00042	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
$LN4@Tidy:
$LN3@Tidy:

; 2506 : 
; 2507 : 		_CSTD free(_Ctype._LocaleName);

  00047	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00050	e8 00 00 00 00	 call	 free

; 2508 : 		}

  00055	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00059	c3		 ret	 0
?_Tidy@?$ctype@D@std@@IEAAXXZ ENDP			; std::ctype<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
_Lobj$ = 104
?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z PROC	; std::ctype<char>::_Init, COMDAT

; 2496 : 		{	// initialize from _Lobj

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 2497 : 		_Ctype = _Lobj._Getctype();

  00010	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00015	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  0001a	e8 00 00 00 00	 call	 ?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ ; std::_Locinfo::_Getctype
  0001f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00024	48 8d 79 10	 lea	 rdi, QWORD PTR [rcx+16]
  00028	48 8b f0	 mov	 rsi, rax
  0002b	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00030	f3 a4		 rep movsb

; 2498 : 		}

  00032	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00036	5f		 pop	 rdi
  00037	5e		 pop	 rsi
  00038	c3		 ret	 0
?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z ENDP	; std::ctype<char>::_Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??1?$ctype@D@std@@MEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$ctype@D@std@@MEAA@XZ PROC				; std::ctype<char>::~ctype<char>, COMDAT

; 2491 : 		{	// destroy the object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00012	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$ctype@D@std@@6B@
  0001e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2492 : 		_Tidy();

  00021	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00026	e8 00 00 00 00	 call	 ?_Tidy@?$ctype@D@std@@IEAAXXZ ; std::ctype<char>::_Tidy
  0002b	90		 npad	 1

; 2493 : 		}

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ??1ctype_base@std@@UEAA@XZ ; std::ctype_base::~ctype_base
  00036	90		 npad	 1
  00037	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003b	c3		 ret	 0
??1?$ctype@D@std@@MEAA@XZ ENDP				; std::ctype<char>::~ctype<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv89 = 48
tv132 = 56
tv128 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::ctype<char>::_Getcat, COMDAT

; 2468 : 		{	// return locale category mask and construct standard facet

$LN10:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00011	48 c7 44 24 50
	fe ff ff ff	 mov	 QWORD PTR $T4[rsp], -2
  0001a	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 2469 : 		if (_Ppf != 0 && *_Ppf == 0)

  00022	48 83 bc 24 d0
	00 00 00 00	 cmp	 QWORD PTR _Ppf$[rsp], 0
  0002b	0f 84 b3 00 00
	00		 je	 $LN2@Getcat
  00031	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Ppf$[rsp]
  00039	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003d	0f 85 a1 00 00
	00		 jne	 $LN2@Getcat

; 2470 : 			*_Ppf = new ctype<_Elem>(

  00043	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00048	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0004d	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  00052	48 83 7c 24 28
	00		 cmp	 QWORD PTR $T2[rsp], 0
  00058	74 4d		 je	 SHORT $LN4@Getcat
  0005a	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR _Ploc$[rsp]
  00062	e8 00 00 00 00	 call	 ?c_str@locale@std@@QEBAPEBDXZ ; std::locale::c_str
  00067	48 8b d0	 mov	 rdx, rax
  0006a	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T5[rsp]
  0006f	e8 00 00 00 00	 call	 ??0_Locinfo@std@@QEAA@PEBD@Z ; std::_Locinfo::_Locinfo
  00074	48 89 44 24 38	 mov	 QWORD PTR tv132[rsp], rax
  00079	48 8b 44 24 38	 mov	 rax, QWORD PTR tv132[rsp]
  0007e	48 89 44 24 40	 mov	 QWORD PTR tv128[rsp], rax
  00083	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00087	83 c8 01	 or	 eax, 1
  0008a	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0008e	45 33 c0	 xor	 r8d, r8d
  00091	48 8b 54 24 40	 mov	 rdx, QWORD PTR tv128[rsp]
  00096	48 8b 4c 24 28	 mov	 rcx, QWORD PTR $T2[rsp]
  0009b	e8 00 00 00 00	 call	 ??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z ; std::ctype<char>::ctype<char>
  000a0	48 89 44 24 30	 mov	 QWORD PTR tv89[rsp], rax
  000a5	eb 09		 jmp	 SHORT $LN5@Getcat
$LN4@Getcat:
  000a7	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR tv89[rsp], 0
$LN5@Getcat:
  000b0	48 8b 44 24 30	 mov	 rax, QWORD PTR tv89[rsp]
  000b5	48 89 44 24 48	 mov	 QWORD PTR $T3[rsp], rax
  000ba	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Ppf$[rsp]
  000c2	48 8b 4c 24 48	 mov	 rcx, QWORD PTR $T3[rsp]
  000c7	48 89 08	 mov	 QWORD PTR [rax], rcx
  000ca	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  000ce	83 e0 01	 and	 eax, 1
  000d1	85 c0		 test	 eax, eax
  000d3	74 0f		 je	 SHORT $LN2@Getcat
  000d5	83 64 24 20 fe	 and	 DWORD PTR $T1[rsp], -2
  000da	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T5[rsp]
  000df	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN2@Getcat:

; 2471 : 				_Locinfo(_Ploc->c_str()));
; 2472 : 		return (_X_CTYPE);

  000e4	b8 02 00 00 00	 mov	 eax, 2

; 2473 : 		}

  000e9	48 81 c4 c8 00
	00 00		 add	 rsp, 200		; 000000c8H
  000f0	c3		 ret	 0
?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::ctype<char>::_Getcat
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv89 = 48
tv132 = 56
tv128 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000e	48 8b 4d 28	 mov	 rcx, QWORD PTR $T2[rbp]
  00012	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$0
$T1 = 32
$T2 = 40
tv89 = 48
tv132 = 56
tv128 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$1@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$1
  0001d	40 55		 push	 rbp
  0001f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00023	48 8b ea	 mov	 rbp, rdx
  00026	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00029	83 e0 01	 and	 eax, 1
  0002c	85 c0		 test	 eax, eax
  0002e	74 0d		 je	 SHORT $LN8@dtor$1
  00030	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00034	48 8d 4d 58	 lea	 rcx, QWORD PTR $T5[rbp]
  00038	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN8@dtor$1:
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?dtor$1@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv89 = 48
tv132 = 56
tv128 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000e	48 8b 4d 28	 mov	 rcx, QWORD PTR $T2[rbp]
  00012	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv89 = 48
tv132 = 56
tv128 = 64
$T3 = 72
$T4 = 80
$T5 = 88
_Ppf$ = 208
_Ploc$ = 216
?dtor$1@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$1
  0001d	40 55		 push	 rbp
  0001f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00023	48 8b ea	 mov	 rbp, rdx
  00026	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00029	83 e0 01	 and	 eax, 1
  0002c	85 c0		 test	 eax, eax
  0002e	74 0d		 je	 SHORT $LN8@dtor$1
  00030	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00034	48 8d 4d 58	 lea	 rcx, QWORD PTR $T5[rbp]
  00038	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN8@dtor$1:
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?dtor$1@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z PROC		; std::ctype<char>::ctype<char>, COMDAT

; 2462 : 		{	// construct from current locale

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00013	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 2461 : 		: ctype_base(_Refs)

  0001c	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Refs$[rsp]
  00021	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00026	e8 00 00 00 00	 call	 ??0ctype_base@std@@QEAA@_K@Z ; std::ctype_base::ctype_base
  0002b	90		 npad	 1

; 2462 : 		{	// construct from current locale

  0002c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$ctype@D@std@@6B@
  00038	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2463 : 		_Init(_Lobj);

  0003b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Lobj$[rsp]
  00040	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00045	e8 00 00 00 00	 call	 ?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z ; std::ctype<char>::_Init
  0004a	90		 npad	 1

; 2464 : 		}

  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00054	c3		 ret	 0
??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z ENDP		; std::ctype<char>::ctype<char>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
?dtor$0@?0???0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA PROC ; `std::ctype<char>::ctype<char>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1ctype_base@std@@UEAA@XZ ; std::ctype_base::~ctype_base
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA ENDP ; `std::ctype<char>::ctype<char>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
?dtor$0@?0???0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA PROC ; `std::ctype<char>::ctype<char>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1ctype_base@std@@UEAA@XZ ; std::ctype_base::~ctype_base
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z@4HA ENDP ; `std::ctype<char>::ctype<char>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z PROC		; std::ctype<char>::widen, COMDAT

; 2421 : 		{	// widen chars in [_First, _Last)

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2422 : 		return (do_widen(_First, _Last, _Dest));

  00018	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00020	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Dest$[rsp]
  00025	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Last$[rsp]
  0002a	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First$[rsp]
  0002f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00034	ff 50 38	 call	 QWORD PTR [rax+56]

; 2423 : 		}

  00037	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003b	c3		 ret	 0
?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z ENDP		; std::ctype<char>::widen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?widen@?$ctype@D@std@@QEBADD@Z
_TEXT	SEGMENT
this$ = 48
_Byte$ = 56
?widen@?$ctype@D@std@@QEBADD@Z PROC			; std::ctype<char>::widen, COMDAT

; 2415 : 		{	// widen char

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2416 : 		return (do_widen(_Byte));

  0000d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00012	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00015	0f b6 54 24 38	 movzx	 edx, BYTE PTR _Byte$[rsp]
  0001a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0001f	ff 50 40	 call	 QWORD PTR [rax+64]

; 2417 : 		}

  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
?widen@?$ctype@D@std@@QEBADD@Z ENDP			; std::ctype<char>::widen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gctype_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gctype_base@std@@UEAAPEAXI@Z PROC			; std::ctype_base::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1ctype_base@std@@UEAA@XZ ; std::ctype_base::~ctype_base
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 10 00 00 00	 mov	 edx, 16
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_Gctype_base@std@@UEAAPEAXI@Z ENDP			; std::ctype_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??1ctype_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ctype_base@std@@UEAA@XZ PROC				; std::ctype_base::~ctype_base, COMDAT

; 2107 : 		{	// destroy the object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ctype_base@std@@6B@
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2108 : 		}

  00018	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0001d	e8 00 00 00 00	 call	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
??1ctype_base@std@@UEAA@XZ ENDP				; std::ctype_base::~ctype_base
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??0ctype_base@std@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 48
_Refs$ = 56
??0ctype_base@std@@QEAA@_K@Z PROC			; std::ctype_base::ctype_base, COMDAT

; 2103 : 		{	// default constructor

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2102 : 		: locale::facet(_Refs)

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Refs$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ??0facet@locale@std@@IEAA@_K@Z ; std::locale::facet::facet

; 2103 : 		{	// default constructor

  0001d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7ctype_base@std@@6B@
  00029	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2104 : 		}

  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00035	c3		 ret	 0
??0ctype_base@std@@QEAA@_K@Z ENDP			; std::ctype_base::ctype_base
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
_TEXT	SEGMENT
tv71 = 32
_Facptr$ = 40
_Ptr0$1 = 48
tv83 = 56
this$ = 80
_Id$ = 88
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z PROC	; std::locale::_Getfacet, COMDAT

; 458  : 		{	// look up a facet in locale object

$LN10:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  0000e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00013	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00017	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0001b	48 39 44 24 58	 cmp	 QWORD PTR _Id$[rsp], rax
  00020	73 1d		 jae	 SHORT $LN6@Getfacet
  00022	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0002b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0002f	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Id$[rsp]
  00034	48 8b 04 c8	 mov	 rax, QWORD PTR [rax+rcx*8]
  00038	48 89 44 24 20	 mov	 QWORD PTR tv71[rsp], rax
  0003d	eb 09		 jmp	 SHORT $LN7@Getfacet
$LN6@Getfacet:
  0003f	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR tv71[rsp], 0
$LN7@Getfacet:
  00048	48 8b 44 24 20	 mov	 rax, QWORD PTR tv71[rsp]
  0004d	48 89 44 24 28	 mov	 QWORD PTR _Facptr$[rsp], rax

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  00052	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Facptr$[rsp], 0
  00058	75 11		 jne	 SHORT $LN4@Getfacet
  0005a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0005f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00063	0f b6 40 24	 movzx	 eax, BYTE PTR [rax+36]
  00067	85 c0		 test	 eax, eax
  00069	75 09		 jne	 SHORT $LN2@Getfacet
$LN4@Getfacet:

; 462  : 			return (_Facptr);	// found facet or not transparent

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Facptr$[rsp]
  00070	eb 43		 jmp	 SHORT $LN1@Getfacet

; 463  : 		else

  00072	eb 41		 jmp	 SHORT $LN3@Getfacet
$LN2@Getfacet:

; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

  00074	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale
  00079	48 89 44 24 30	 mov	 QWORD PTR _Ptr0$1[rsp], rax

; 466  : 			return (_Id < _Ptr0->_Facetcount

  0007e	48 8b 44 24 30	 mov	 rax, QWORD PTR _Ptr0$1[rsp]
  00083	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00087	48 39 44 24 58	 cmp	 QWORD PTR _Id$[rsp], rax
  0008c	73 19		 jae	 SHORT $LN8@Getfacet
  0008e	48 8b 44 24 30	 mov	 rax, QWORD PTR _Ptr0$1[rsp]
  00093	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00097	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Id$[rsp]
  0009c	48 8b 04 c8	 mov	 rax, QWORD PTR [rax+rcx*8]
  000a0	48 89 44 24 38	 mov	 QWORD PTR tv83[rsp], rax
  000a5	eb 09		 jmp	 SHORT $LN9@Getfacet
$LN8@Getfacet:
  000a7	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv83[rsp], 0
$LN9@Getfacet:
  000b0	48 8b 44 24 38	 mov	 rax, QWORD PTR tv83[rsp]
$LN3@Getfacet:
$LN1@Getfacet:

; 467  : 				? _Ptr0->_Facetvec[_Id]	// get from current locale
; 468  : 				: 0);	// no entry in current locale
; 469  : 			}
; 470  : 		}

  000b5	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000b9	c3		 ret	 0
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ENDP	; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?c_str@locale@std@@QEBAPEBDXZ
_TEXT	SEGMENT
tv70 = 32
this$ = 64
?c_str@locale@std@@QEBAPEBDXZ PROC			; std::locale::c_str, COMDAT

; 453  : 		{	// return locale name as NTBS

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00013	75 0e		 jne	 SHORT $LN3@c_str
  00015	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  0001c	48 89 44 24 20	 mov	 QWORD PTR tv70[rsp], rax
  00021	eb 1a		 jmp	 SHORT $LN4@c_str
$LN3@c_str:
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0002c	48 83 c0 28	 add	 rax, 40			; 00000028H
  00030	48 8b c8	 mov	 rcx, rax
  00033	e8 00 00 00 00	 call	 ?c_str@?$_Yarn@D@std@@QEBAPEBDXZ ; std::_Yarn<char>::c_str
  00038	48 89 44 24 20	 mov	 QWORD PTR tv70[rsp], rax
$LN4@c_str:
  0003d	48 8b 44 24 20	 mov	 rax, QWORD PTR tv70[rsp]

; 455  : 		}

  00042	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00046	c3		 ret	 0
?c_str@locale@std@@QEBAPEBDXZ ENDP			; std::locale::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??1locale@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv84 = 48
$T3 = 56
this$ = 80
??1locale@std@@QEAA@XZ PROC				; std::locale::~locale, COMDAT

; 430  : 		{	// destroy the object

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00009	48 c7 44 24 38
	fe ff ff ff	 mov	 QWORD PTR $T3[rsp], -2

; 431  : 		if (_Ptr != 0)

  00012	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  0001c	74 55		 je	 SHORT $LN2@locale

; 432  : 			delete _Ptr->_Decref();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00027	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00030	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00033	ff 50 10	 call	 QWORD PTR [rax+16]
  00036	90		 npad	 1
  00037	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003c	48 8b 44 24 28	 mov	 rax, QWORD PTR $T2[rsp]
  00041	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00046	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  0004c	74 1c		 je	 SHORT $LN4@locale
  0004e	48 8b 44 24 20	 mov	 rax, QWORD PTR $T1[rsp]
  00053	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00056	ba 01 00 00 00	 mov	 edx, 1
  0005b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00060	ff 10		 call	 QWORD PTR [rax]
  00062	90		 npad	 1
  00063	48 89 44 24 30	 mov	 QWORD PTR tv84[rsp], rax
  00068	eb 09		 jmp	 SHORT $LN2@locale
$LN4@locale:
  0006a	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR tv84[rsp], 0
$LN2@locale:

; 433  : 		}

  00073	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00077	c3		 ret	 0
??1locale@std@@QEAA@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??0locale@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??0locale@std@@QEAA@AEBV01@@Z PROC			; std::locale::locale, COMDAT

; 325  : 		{	// construct by copying

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 324  : 		: _Ptr(_Right._Ptr)

  00017	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00021	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00025	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 326  : 		_Ptr->_Incref();

  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003e	ff 50 08	 call	 QWORD PTR [rax+8]
  00041	90		 npad	 1

; 327  : 		}

  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004b	c3		 ret	 0
??0locale@std@@QEAA@AEBV01@@Z ENDP			; std::locale::locale
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gfacet@locale@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfacet@locale@std@@MEAAPEAXI@Z PROC			; std::locale::facet::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 10 00 00 00	 mov	 edx, 16
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_Gfacet@locale@std@@MEAAPEAXI@Z ENDP			; std::locale::facet::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??1facet@locale@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1facet@locale@std@@MEAA@XZ PROC			; std::locale::facet::~facet, COMDAT

; 171  : 			{	// ensure that derived classes can be destroyed properly

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7facet@locale@std@@6B@
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx

; 172  : 			}

  00018	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0001d	e8 00 00 00 00	 call	 ??1_Facet_base@std@@UEAA@XZ ; std::_Facet_base::~_Facet_base
  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
??1facet@locale@std@@MEAA@XZ ENDP			; std::locale::facet::~facet
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??0facet@locale@std@@IEAA@_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Initrefs$ = 72
??0facet@locale@std@@IEAA@_K@Z PROC			; std::locale::facet::facet, COMDAT

; 165  : 		explicit __CLR_OR_THIS_CALL facet(size_t _Initrefs = 0)

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 166  : 			{	// construct with initial reference count

  00017	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0001c	e8 00 00 00 00	 call	 ??0_Facet_base@std@@QEAA@XZ
  00021	90		 npad	 1
  00022	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7facet@locale@std@@6B@
  0002e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 167  : 			_Init_atomic_counter(_Myrefs, (_Atomic_integral_t)_Initrefs);

  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c0 08	 add	 rax, 8
  0003a	8b 54 24 48	 mov	 edx, DWORD PTR _Initrefs$[rsp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Init_atomic_counter@std@@YAXAEAKK@Z ; std::_Init_atomic_counter
  00046	90		 npad	 1

; 168  : 			}

  00047	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00050	c3		 ret	 0
??0facet@locale@std@@IEAA@_K@Z ENDP			; std::locale::facet::facet
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Initrefs$ = 72
?dtor$0@?0???0facet@locale@std@@IEAA@_K@Z@4HA PROC	; `std::locale::facet::facet'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Facet_base@std@@UEAA@XZ ; std::_Facet_base::~_Facet_base
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0facet@locale@std@@IEAA@_K@Z@4HA ENDP	; `std::locale::facet::facet'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Initrefs$ = 72
?dtor$0@?0???0facet@locale@std@@IEAA@_K@Z@4HA PROC	; `std::locale::facet::facet'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Facet_base@std@@UEAA@XZ ; std::_Facet_base::~_Facet_base
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0facet@locale@std@@IEAA@_K@Z@4HA ENDP	; `std::locale::facet::facet'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
_TEXT	SEGMENT
this$ = 8
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ PROC ; std::locale::facet::_Decref, COMDAT

; 154  : 			{	// decrement use count

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 155  : 			if (_MT_DECR(_Myrefs) == 0)

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 83 c0 08	 add	 rax, 8
  0000e	b9 ff ff ff ff	 mov	 ecx, -1
  00013	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00017	ff c9		 dec	 ecx
  00019	8b c1		 mov	 eax, ecx
  0001b	85 c0		 test	 eax, eax
  0001d	75 09		 jne	 SHORT $LN2@Decref

; 156  : 				return (this);

  0001f	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00024	eb 04		 jmp	 SHORT $LN1@Decref

; 157  : 			else

  00026	eb 02		 jmp	 SHORT $LN3@Decref
$LN2@Decref:

; 158  : 				return (0);

  00028	33 c0		 xor	 eax, eax
$LN3@Decref:
$LN1@Decref:

; 159  : 			}

  0002a	c3		 ret	 0
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ENDP ; std::locale::facet::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Incref@facet@locale@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Incref@facet@locale@std@@UEAAXXZ PROC			; std::locale::facet::_Incref, COMDAT

; 149  : 			{	// increment use count

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 150  : 			_MT_INCR(_Myrefs);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 83 c0 08	 add	 rax, 8
  0000e	f0 ff 00	 lock inc DWORD PTR [rax]

; 151  : 			}

  00011	c3		 ret	 0
?_Incref@facet@locale@std@@UEAAXXZ ENDP			; std::locale::facet::_Incref
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??Bid@locale@std@@QEAA_KXZ
_TEXT	SEGMENT
_Lock$1 = 32
this$ = 64
??Bid@locale@std@@QEAA_KXZ PROC				; std::locale::id::operator unsigned __int64, COMDAT

; 114  : 			{	// get stamp, with lazy allocation

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 115  : 			if (_Id == 0)

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00012	75 3e		 jne	 SHORT $LN2@operator

; 116  : 				{	// still zero, allocate stamp
; 117  : 				_BEGIN_LOCK(_LOCK_LOCALE)

  00014	33 d2		 xor	 edx, edx
  00016	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _Lock$1[rsp]
  0001b	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit

; 118  : 					if (_Id == 0)

  00020	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00025	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00029	75 1d		 jne	 SHORT $LN3@operator

; 119  : 						_Id = ++_Id_cnt;

  0002b	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
  00031	ff c0		 inc	 eax
  00033	89 05 00 00 00
	00		 mov	 DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
  00039	48 63 05 00 00
	00 00		 movsxd	 rax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
  00040	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00045	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN3@operator:

; 120  : 				_END_LOCK()

  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _Lock$1[rsp]
  0004d	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
$LN2@operator:

; 121  : 				}
; 122  : 			return (_Id);

  00052	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00057	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 123  : 			}

  0005a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005e	c3		 ret	 0
??Bid@locale@std@@QEAA_KXZ ENDP				; std::locale::id::operator unsigned __int64
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
??0id@locale@std@@QEAA@_K@Z PROC			; std::locale::id::id, COMDAT

; 110  : 			{	// construct with specified stamp value

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 109  : 			: _Id(_Val)

  0000a	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR _Val$[rsp]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 111  : 			}

  00017	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0001c	c3		 ret	 0
??0id@locale@std@@QEAA@_K@Z ENDP			; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Facet_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Facet_base@std@@UEAAPEAXI@Z PROC			; std::_Facet_base::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1_Facet_base@std@@UEAA@XZ ; std::_Facet_base::~_Facet_base
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 08 00 00 00	 mov	 edx, 8
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_G_Facet_base@std@@UEAAPEAXI@Z ENDP			; std::_Facet_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Facet_base@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Facet_base@std@@QEAA@XZ PROC			; std::_Facet_base::_Facet_base, COMDAT
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00011	48 89 08	 mov	 QWORD PTR [rax], rcx
  00014	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00019	c3		 ret	 0
??0_Facet_base@std@@QEAA@XZ ENDP			; std::_Facet_base::_Facet_base
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
;	COMDAT ??1_Facet_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Facet_base@std@@UEAA@XZ PROC			; std::_Facet_base::~_Facet_base, COMDAT

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00011	48 89 08	 mov	 QWORD PTR [rax], rcx

; 25   : 		}

  00014	c3		 ret	 0
??1_Facet_base@std@@UEAA@XZ ENDP			; std::_Facet_base::~_Facet_base
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Tidy@?$_Yarn@_W@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Yarn@_W@std@@AEAAXXZ PROC			; std::_Yarn<wchar_t>::_Tidy, COMDAT

; 3796 : 		{	// discard any string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 3797 : 		if (_Myptr != 0)

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00012	74 0d		 je	 SHORT $LN2@Tidy

; 3798 : 
; 3799 :  #ifdef _DEBUG
; 3800 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3801 : 
; 3802 :  #else /* _DEBUG */
; 3803 : 			_CSTD free(_Myptr);

  00014	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00019	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0001c	e8 00 00 00 00	 call	 free
$LN2@Tidy:

; 3804 :  #endif /* _DEBUG */
; 3805 : 
; 3806 : 		_Myptr = 0;

  00021	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00026	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 3807 : 		}

  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	c3		 ret	 0
?_Tidy@?$_Yarn@_W@std@@AEAAXXZ ENDP			; std::_Yarn<wchar_t>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1?$_Yarn@_W@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Yarn@_W@std@@QEAA@XZ PROC				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>, COMDAT

; 3770 : 		{	// destroy the object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 3771 : 		_Tidy();

  00012	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00017	e8 00 00 00 00	 call	 ?_Tidy@?$_Yarn@_W@std@@AEAAXXZ ; std::_Yarn<wchar_t>::_Tidy
  0001c	90		 npad	 1

; 3772 : 		}

  0001d	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00021	c3		 ret	 0
??1?$_Yarn@_W@std@@QEAA@XZ ENDP				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0?$_Yarn@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Yarn@_W@std@@QEAA@XZ PROC				; std::_Yarn<wchar_t>::_Yarn<wchar_t>, COMDAT

; 3720 : 		{	// default construct

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 3719 : 		: _Myptr(0), _Nul(0)

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00011	33 c0		 xor	 eax, eax
  00013	48 8b 4c 24 08	 mov	 rcx, QWORD PTR this$[rsp]
  00018	66 89 41 08	 mov	 WORD PTR [rcx+8], ax

; 3721 : 		}

  0001c	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00021	c3		 ret	 0
??0?$_Yarn@_W@std@@QEAA@XZ ENDP				; std::_Yarn<wchar_t>::_Yarn<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Tidy@?$_Yarn@D@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Yarn@D@std@@AEAAXXZ PROC			; std::_Yarn<char>::_Tidy, COMDAT

; 3796 : 		{	// discard any string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 3797 : 		if (_Myptr != 0)

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00012	74 0d		 je	 SHORT $LN2@Tidy

; 3798 : 
; 3799 :  #ifdef _DEBUG
; 3800 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3801 : 
; 3802 :  #else /* _DEBUG */
; 3803 : 			_CSTD free(_Myptr);

  00014	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00019	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0001c	e8 00 00 00 00	 call	 free
$LN2@Tidy:

; 3804 :  #endif /* _DEBUG */
; 3805 : 
; 3806 : 		_Myptr = 0;

  00021	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00026	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 3807 : 		}

  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	c3		 ret	 0
?_Tidy@?$_Yarn@D@std@@AEAAXXZ ENDP			; std::_Yarn<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?c_str@?$_Yarn@D@std@@QEBAPEBDXZ
_TEXT	SEGMENT
tv68 = 0
this$ = 32
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ PROC			; std::_Yarn<char>::c_str, COMDAT

; 3780 : 		{	// return NTBS

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 3781 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  00009	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00012	74 0e		 je	 SHORT $LN3@c_str
  00014	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00019	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001c	48 89 04 24	 mov	 QWORD PTR tv68[rsp], rax
  00020	eb 0d		 jmp	 SHORT $LN4@c_str
$LN3@c_str:
  00022	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 83 c0 08	 add	 rax, 8
  0002b	48 89 04 24	 mov	 QWORD PTR tv68[rsp], rax
$LN4@c_str:
  0002f	48 8b 04 24	 mov	 rax, QWORD PTR tv68[rsp]

; 3782 : 		}

  00033	48 83 c4 18	 add	 rsp, 24
  00037	c3		 ret	 0
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ ENDP			; std::_Yarn<char>::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1?$_Yarn@D@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Yarn@D@std@@QEAA@XZ PROC				; std::_Yarn<char>::~_Yarn<char>, COMDAT

; 3770 : 		{	// destroy the object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 3771 : 		_Tidy();

  00012	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00017	e8 00 00 00 00	 call	 ?_Tidy@?$_Yarn@D@std@@AEAAXXZ ; std::_Yarn<char>::_Tidy
  0001c	90		 npad	 1

; 3772 : 		}

  0001d	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00021	c3		 ret	 0
??1?$_Yarn@D@std@@QEAA@XZ ENDP				; std::_Yarn<char>::~_Yarn<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0?$_Yarn@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Yarn@D@std@@QEAA@XZ PROC				; std::_Yarn<char>::_Yarn<char>, COMDAT

; 3720 : 		{	// default construct

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 3719 : 		: _Myptr(0), _Nul(0)

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00011	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  00016	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0

; 3721 : 		}

  0001a	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0001f	c3		 ret	 0
??0?$_Yarn@D@std@@QEAA@XZ ENDP				; std::_Yarn<char>::_Yarn<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ?_Gettrue@_Locinfo@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Gettrue@_Locinfo@std@@QEBAPEBDXZ PROC			; std::_Locinfo::_Gettrue, COMDAT

; 171  : 		{	// return true name (no C source)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 172  : 		return ("true");

  00005	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_04LOAJBDKD@true?$AA@

; 173  : 		}

  0000c	c3		 ret	 0
?_Gettrue@_Locinfo@std@@QEBAPEBDXZ ENDP			; std::_Locinfo::_Gettrue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ?_Getfalse@_Locinfo@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Getfalse@_Locinfo@std@@QEBAPEBDXZ PROC		; std::_Locinfo::_Getfalse, COMDAT

; 166  : 		{	// return false name (no C source)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 167  : 		return ("false");

  00005	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_05LAPONLG@false?$AA@

; 168  : 		}

  0000c	c3		 ret	 0
?_Getfalse@_Locinfo@std@@QEBAPEBDXZ ENDP		; std::_Locinfo::_Getfalse
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ
_TEXT	SEGMENT
this$ = 48
?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ PROC		; std::_Locinfo::_Getlconv, COMDAT

; 126  : 		{	// return localeconv stuff

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 127  : 		return (localeconv());

  00009	e8 00 00 00 00	 call	 localeconv

; 128  : 		}

  0000e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00012	c3		 ret	 0
?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ ENDP		; std::_Locinfo::_Getlconv
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 80
__$ArrayPad$ = 128
this$ = 176
__$ReturnUdt$ = 184
?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ PROC		; std::_Locinfo::_Getcvt, COMDAT

; 121  : 		{	// return codecvt stuff

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec 98 00
	00 00		 sub	 rsp, 152		; 00000098H
  00013	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001a	48 33 c4	 xor	 rax, rsp
  0001d	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 122  : 		return (::_Getcvt());

  00025	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002a	e8 00 00 00 00	 call	 _Getcvt
  0002f	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T2[rsp]
  00034	48 8b f9	 mov	 rdi, rcx
  00037	48 8b f0	 mov	 rsi, rax
  0003a	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0003f	f3 a4		 rep movsb
  00041	48 8d 44 24 50	 lea	 rax, QWORD PTR $T2[rsp]
  00046	48 8b bc 24 b8
	00 00 00	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  0004e	48 8b f0	 mov	 rsi, rax
  00051	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00056	f3 a4		 rep movsb
  00058	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 123  : 		}

  00060	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00068	48 33 cc	 xor	 rcx, rsp
  0006b	e8 00 00 00 00	 call	 __security_check_cookie
  00070	48 81 c4 98 00
	00 00		 add	 rsp, 152		; 00000098H
  00077	5f		 pop	 rdi
  00078	5e		 pop	 rsi
  00079	c3		 ret	 0
?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ ENDP		; std::_Locinfo::_Getcvt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
this$ = 128
__$ReturnUdt$ = 136
?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ PROC	; std::_Locinfo::_Getctype, COMDAT

; 116  : 		{	// return ctype stuff

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 117  : 		return (::_Getctype());

  00010	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T2[rsp]
  00015	e8 00 00 00 00	 call	 _Getctype
  0001a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001f	48 8b f9	 mov	 rdi, rcx
  00022	48 8b f0	 mov	 rsi, rax
  00025	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0002a	f3 a4		 rep movsb
  0002c	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00031	48 8b bc 24 88
	00 00 00	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  00039	48 8b f0	 mov	 rsi, rax
  0003c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00041	f3 a4		 rep movsb
  00043	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 118  : 		}

  0004b	48 83 c4 68	 add	 rsp, 104		; 00000068H
  0004f	5f		 pop	 rdi
  00050	5e		 pop	 rsi
  00051	c3		 ret	 0
?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ ENDP	; std::_Locinfo::_Getctype
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ??1_Locinfo@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1_Locinfo@std@@QEAA@XZ PROC				; std::_Locinfo::~_Locinfo, COMDAT

; 94   : 		{	// destroy the object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 95   : 		_Locinfo_dtor(this);

  00012	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00017	e8 00 00 00 00	 call	 ?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z ; std::_Locinfo::_Locinfo_dtor
  0001c	90		 npad	 1

; 96   : 		}

  0001d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 83 c0 58	 add	 rax, 88			; 00000058H
  00026	48 8b c8	 mov	 rcx, rax
  00029	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  0002e	90		 npad	 1
  0002f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c0 48	 add	 rax, 72			; 00000048H
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  00040	90		 npad	 1
  00041	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 83 c0 38	 add	 rax, 56			; 00000038H
  0004a	48 8b c8	 mov	 rcx, rax
  0004d	e8 00 00 00 00	 call	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
  00052	90		 npad	 1
  00053	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00058	48 83 c0 28	 add	 rax, 40			; 00000028H
  0005c	48 8b c8	 mov	 rcx, rax
  0005f	e8 00 00 00 00	 call	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
  00064	90		 npad	 1
  00065	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006a	48 83 c0 18	 add	 rax, 24
  0006e	48 8b c8	 mov	 rcx, rax
  00071	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  00076	90		 npad	 1
  00077	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007c	48 83 c0 08	 add	 rax, 8
  00080	48 8b c8	 mov	 rcx, rax
  00083	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  00088	90		 npad	 1
  00089	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008e	48 8b c8	 mov	 rcx, rax
  00091	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00096	90		 npad	 1
  00097	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0009b	c3		 ret	 0
??1_Locinfo@std@@QEAA@XZ ENDP				; std::_Locinfo::~_Locinfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ??0_Locinfo@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
??0_Locinfo@std@@QEAA@PEBD@Z PROC			; std::_Locinfo::_Locinfo, COMDAT

; 76   : 		{	// construct from NTBS

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 73   : 		: _Lock(_LOCK_LOCALE)

  00017	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0001c	33 d2		 xor	 edx, edx
  0001e	48 8b c8	 mov	 rcx, rax
  00021	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  00026	90		 npad	 1

; 76   : 		{	// construct from NTBS

  00027	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 83 c0 08	 add	 rax, 8
  00030	48 8b c8	 mov	 rcx, rax
  00033	e8 00 00 00 00	 call	 ??0?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::_Yarn<char>
  00038	90		 npad	 1
  00039	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c0 18	 add	 rax, 24
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??0?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::_Yarn<char>
  0004a	90		 npad	 1
  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c0 28	 add	 rax, 40			; 00000028H
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??0?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::_Yarn<wchar_t>
  0005c	90		 npad	 1
  0005d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00062	48 83 c0 38	 add	 rax, 56			; 00000038H
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ??0?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::_Yarn<wchar_t>
  0006e	90		 npad	 1
  0006f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00074	48 83 c0 48	 add	 rax, 72			; 00000048H
  00078	48 8b c8	 mov	 rcx, rax
  0007b	e8 00 00 00 00	 call	 ??0?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::_Yarn<char>
  00080	90		 npad	 1
  00081	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00086	48 83 c0 58	 add	 rax, 88			; 00000058H
  0008a	48 8b c8	 mov	 rcx, rax
  0008d	e8 00 00 00 00	 call	 ??0?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::_Yarn<char>
  00092	90		 npad	 1

; 77   : 		if (_Pch == 0)

  00093	48 83 7c 24 58
	00		 cmp	 QWORD PTR _Pch$[rsp], 0
  00099	75 22		 jne	 SHORT $LN2@Locinfo

; 78   : 			_THROW_NCEE(runtime_error, "bad locale name");

  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@
  000a2	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  000a7	e8 00 00 00 00	 call	 ??0runtime_error@std@@QEAA@PEBD@Z ; std::runtime_error::runtime_error
  000ac	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
  000b3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  000b8	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Locinfo:

; 79   : 		_Locinfo_ctor(this, _Pch);

  000bd	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Pch$[rsp]
  000c2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000c7	e8 00 00 00 00	 call	 ?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z ; std::_Locinfo::_Locinfo_ctor
  000cc	90		 npad	 1

; 80   : 		}

  000cd	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000d2	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d6	c3		 ret	 0
$LN11@Locinfo:
??0_Locinfo@std@@QEAA@PEBD@Z ENDP			; std::_Locinfo::_Locinfo
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
  00018	40 55		 push	 rbp
  0001a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0001e	48 8b ea	 mov	 rbp, rdx
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00025	48 83 c1 08	 add	 rcx, 8
  00029	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
  00034	40 55		 push	 rbp
  00036	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0003a	48 8b ea	 mov	 rbp, rdx
  0003d	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00041	48 83 c1 18	 add	 rcx, 24
  00045	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
  00050	40 55		 push	 rbp
  00052	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0005d	48 83 c1 28	 add	 rcx, 40			; 00000028H
  00061	e8 00 00 00 00	 call	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
  00066	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
  0006c	40 55		 push	 rbp
  0006e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00072	48 8b ea	 mov	 rbp, rdx
  00075	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00079	48 83 c1 38	 add	 rcx, 56			; 00000038H
  0007d	e8 00 00 00 00	 call	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
  00082	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00086	5d		 pop	 rbp
  00087	c3		 ret	 0
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
  00088	40 55		 push	 rbp
  0008a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0008e	48 8b ea	 mov	 rbp, rdx
  00091	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00095	48 83 c1 48	 add	 rcx, 72			; 00000048H
  00099	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  0009e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a2	5d		 pop	 rbp
  000a3	c3		 ret	 0
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
  000a4	40 55		 push	 rbp
  000a6	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  000aa	48 8b ea	 mov	 rbp, rdx
  000ad	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  000b1	48 83 c1 58	 add	 rcx, 88			; 00000058H
  000b5	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  000ba	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000be	5d		 pop	 rbp
  000bf	c3		 ret	 0
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
  00018	40 55		 push	 rbp
  0001a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0001e	48 8b ea	 mov	 rbp, rdx
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00025	48 83 c1 08	 add	 rcx, 8
  00029	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
  00034	40 55		 push	 rbp
  00036	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0003a	48 8b ea	 mov	 rbp, rdx
  0003d	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00041	48 83 c1 18	 add	 rcx, 24
  00045	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
  00050	40 55		 push	 rbp
  00052	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0005d	48 83 c1 28	 add	 rcx, 40			; 00000028H
  00061	e8 00 00 00 00	 call	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
  00066	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
  0006c	40 55		 push	 rbp
  0006e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00072	48 8b ea	 mov	 rbp, rdx
  00075	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00079	48 83 c1 38	 add	 rcx, 56			; 00000038H
  0007d	e8 00 00 00 00	 call	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
  00082	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00086	5d		 pop	 rbp
  00087	c3		 ret	 0
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
  00088	40 55		 push	 rbp
  0008a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0008e	48 8b ea	 mov	 rbp, rdx
  00091	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00095	48 83 c1 48	 add	 rcx, 72			; 00000048H
  00099	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  0009e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a2	5d		 pop	 rbp
  000a3	c3		 ret	 0
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Pch$ = 88
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
  000a4	40 55		 push	 rbp
  000a6	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  000aa	48 8b ea	 mov	 rbp, rdx
  000ad	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  000b1	48 83 c1 58	 add	 rcx, 88			; 00000058H
  000b5	e8 00 00 00 00	 call	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
  000ba	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000be	5d		 pop	 rbp
  000bf	c3		 ret	 0
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gbad_cast@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_cast@std@@UEAAPEAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1bad_cast@std@@UEAA@XZ
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 18 00 00 00	 mov	 edx, 24
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_Gbad_cast@std@@UEAAPEAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0bad_cast@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_cast@std@@QEAA@AEBV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  0001d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_cast@std@@6B@
  00029	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00035	c3		 ret	 0
??0bad_cast@std@@QEAA@AEBV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1bad_cast@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_cast@std@@UEAA@XZ PROC				; std::bad_cast::~bad_cast, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
??1bad_cast@std@@UEAA@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_cast@std@@QEAA@XZ PROC				; std::bad_cast::bad_cast, COMDAT

; 125  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 124  :         : exception("bad cast", 1)

  00009	41 b8 01 00 00
	00		 mov	 r8d, 1
  0000f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast?$AA@
  00016	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0001b	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception

; 125  :     {

  00020	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_cast@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 126  :     }

  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00038	c3		 ret	 0
??0bad_cast@std@@QEAA@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gruntime_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gruntime_error@std@@UEAAPEAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1runtime_error@std@@UEAA@XZ
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 18 00 00 00	 mov	 edx, 24
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_Gruntime_error@std@@UEAAPEAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0runtime_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0runtime_error@std@@QEAA@AEBV01@@Z PROC		; std::runtime_error::runtime_error, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  0001d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7runtime_error@std@@6B@
  00029	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00035	c3		 ret	 0
??0runtime_error@std@@QEAA@AEBV01@@Z ENDP		; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1runtime_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1runtime_error@std@@UEAA@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
??1runtime_error@std@@UEAA@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
;	COMDAT ??0runtime_error@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0runtime_error@std@@QEAA@PEBD@Z PROC			; std::runtime_error::runtime_error, COMDAT

; 168  : 		{	// construct from message string

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 167  : 		: _Mybase(_Message)

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBD@Z ; std::exception::exception

; 168  : 		{	// construct from message string

  0001d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7runtime_error@std@@6B@
  00029	48 89 08	 mov	 QWORD PTR [rax], rcx

; 169  : 		}

  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00035	c3		 ret	 0
??0runtime_error@std@@QEAA@PEBD@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
;	COMDAT ??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::runtime_error::runtime_error, COMDAT

; 163  : 		{	// construct from message string

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 162  : 		: _Mybase(_Message.c_str())

  0000e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Message$[rsp]
  00013	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00018	48 8b d0	 mov	 rdx, rax
  0001b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00020	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBD@Z ; std::exception::exception

; 163  : 		{	// construct from message string

  00025	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7runtime_error@std@@6B@
  00031	48 89 08	 mov	 QWORD PTR [rax], rcx

; 164  : 		}

  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003d	c3		 ret	 0
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT

; 2282 : 		{	// report an out_of_range error

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2283 : 		_Xout_of_range("invalid string position");

  00009	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00010	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
$LN2@Xran:

; 2284 : 		}

  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset, COMDAT

; 2270 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2271 : 		if (this->_Mysize() < _Off)

  0000e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00013	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00018	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Off$[rsp]
  0001d	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00020	73 0a		 jae	 SHORT $LN2@Check_offs

; 2272 : 			_Xran();

  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2273 : 		}

  0002c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00030	c3		 ret	 0
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 2265 : 		{	// report a length_error

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2266 : 		_Xlength_error("string too long");

  00009	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00010	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 2267 : 		}

  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
_TEXT	SEGMENT
_Ptr$1 = 32
tv87 = 40
tv132 = 48
tv155 = 56
this$ = 80
_Built$ = 88
_Newsize$ = 96
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT

; 2248 : 		{	// initialize buffer, deallocating any storage

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 2249 : 		if (!_Built)

  00012	0f b6 44 24 58	 movzx	 eax, BYTE PTR _Built$[rsp]
  00017	85 c0		 test	 eax, eax
  00019	75 05		 jne	 SHORT $LN2@Tidy
  0001b	e9 c1 00 00 00	 jmp	 $LN3@Tidy
$LN2@Tidy:

; 2250 : 			;
; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00020	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00025	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  0002a	48 83 38 10	 cmp	 QWORD PTR [rax], 16
  0002e	0f 82 ad 00 00
	00		 jb	 $LN4@Tidy

; 2252 : 			{	// copy any leftovers to small buffer and deallocate
; 2253 : 			pointer _Ptr = this->_Bx()._Ptr;

  00034	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00039	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 89 44 24 20	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 2254 : 			this->_Getal().destroy(_STD addressof(this->_Bx()._Ptr));

  00046	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char * __ptr64>
  00058	48 89 44 24 28	 mov	 QWORD PTR tv87[rsp], rax
  0005d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00062	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00067	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv87[rsp]
  0006c	48 8b d1	 mov	 rdx, rcx
  0006f	48 8b c8	 mov	 rcx, rax
  00072	e8 00 00 00 00	 call	 ??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>

; 2255 : 			if (0 < _Newsize)

  00077	48 83 7c 24 60
	00		 cmp	 QWORD PTR _Newsize$[rsp], 0
  0007d	76 2e		 jbe	 SHORT $LN5@Tidy

; 2256 : 				_Traits::copy(this->_Bx()._Buf,

  0007f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Ptr$1[rsp]
  00084	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00089	48 89 44 24 30	 mov	 QWORD PTR tv132[rsp], rax
  0008e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  00098	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Newsize$[rsp]
  0009d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv132[rsp]
  000a2	48 8b d1	 mov	 rdx, rcx
  000a5	48 8b c8	 mov	 rcx, rax
  000a8	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ; std::char_traits<char>::copy
$LN5@Tidy:

; 2257 : 					_Unfancy(_Ptr), _Newsize);
; 2258 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  000ad	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000b2	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000b7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ba	48 ff c0	 inc	 rax
  000bd	48 89 44 24 38	 mov	 QWORD PTR tv155[rsp], rax
  000c2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000c7	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  000cc	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv155[rsp]
  000d1	4c 8b c1	 mov	 r8, rcx
  000d4	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$1[rsp]
  000d9	48 8b c8	 mov	 rcx, rax
  000dc	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN4@Tidy:
$LN3@Tidy:

; 2259 : 			}
; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000e1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000e6	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000eb	48 c7 00 0f 00
	00 00		 mov	 QWORD PTR [rax], 15

; 2261 : 		_Eos(_Newsize);

  000f2	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000f7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000fc	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2262 : 		}

  00101	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00105	c3		 ret	 0
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z
_TEXT	SEGMENT
tv77 = 32
this$ = 64
_Ptr$ = 72
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT

; 2238 : 		{	// test if _Ptr points inside string

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2239 : 		if (_Ptr == nullptr_t{} || _Ptr < this->_Myptr()
; 2240 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0000e	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Ptr$[rsp], 0
  00014	74 3c		 je	 SHORT $LN4@Inside
  00016	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0001b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00020	48 39 44 24 48	 cmp	 QWORD PTR _Ptr$[rsp], rax
  00025	72 2b		 jb	 SHORT $LN4@Inside
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00031	48 89 44 24 20	 mov	 QWORD PTR tv77[rsp], rax
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv77[rsp]
  00045	48 03 08	 add	 rcx, QWORD PTR [rax]
  00048	48 8b c1	 mov	 rax, rcx
  0004b	48 3b 44 24 48	 cmp	 rax, QWORD PTR _Ptr$[rsp]
  00050	77 06		 ja	 SHORT $LN2@Inside
$LN4@Inside:

; 2241 : 			return (false);	// don't ask

  00052	32 c0		 xor	 al, al
  00054	eb 04		 jmp	 SHORT $LN1@Inside

; 2242 : 		else

  00056	eb 02		 jmp	 SHORT $LN3@Inside
$LN2@Inside:

; 2243 : 			return (true);

  00058	b0 01		 mov	 al, 1
$LN3@Inside:
$LN1@Inside:

; 2244 : 		}

  0005a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005e	c3		 ret	 0
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
_TEXT	SEGMENT
tv140 = 32
tv133 = 40
this$ = 64
_Newsize$ = 72
_Trim$ = 80
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT

; 2224 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

$LN13:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2225 : 		if (max_size() < _Newsize)

  00013	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0001d	48 3b 44 24 48	 cmp	 rax, QWORD PTR _Newsize$[rsp]
  00022	73 0a		 jae	 SHORT $LN2@Grow

; 2226 : 			_Xlen();	// result too long

  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00029	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Grow:

; 2227 : 		if (this->_Myres() < _Newsize)

  0002e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  00038	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  0003d	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00040	73 1e		 jae	 SHORT $LN3@Grow

; 2228 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00042	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0004c	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0004f	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00059	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  0005e	eb 6a		 jmp	 SHORT $LN4@Grow
$LN3@Grow:

; 2229 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

  00060	0f b6 44 24 50	 movzx	 eax, BYTE PTR _Trim$[rsp]
  00065	85 c0		 test	 eax, eax
  00067	74 4d		 je	 SHORT $LN5@Grow
  00069	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Newsize$[rsp], 16
  0006f	73 45		 jae	 SHORT $LN5@Grow

; 2230 : 			_Tidy(true,	// copy and deallocate if trimming to small string

  00071	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00076	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007e	48 39 44 24 48	 cmp	 QWORD PTR _Newsize$[rsp], rax
  00083	73 0c		 jae	 SHORT $LN9@Grow
  00085	48 8b 44 24 48	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008a	48 89 44 24 28	 mov	 QWORD PTR tv133[rsp], rax
  0008f	eb 12		 jmp	 SHORT $LN10@Grow
$LN9@Grow:
  00091	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00096	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0009b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009e	48 89 44 24 28	 mov	 QWORD PTR tv133[rsp], rax
$LN10@Grow:
  000a3	4c 8b 44 24 28	 mov	 r8, QWORD PTR tv133[rsp]
  000a8	b2 01		 mov	 dl, 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000af	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  000b4	eb 14		 jmp	 SHORT $LN6@Grow
$LN5@Grow:

; 2231 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2232 : 		else if (_Newsize == 0)

  000b6	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Newsize$[rsp], 0
  000bc	75 0c		 jne	 SHORT $LN7@Grow

; 2233 : 			_Eos(0);	// new size is zero, just null terminate

  000be	33 d2		 xor	 edx, edx
  000c0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000c5	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN7@Grow:
$LN6@Grow:
$LN4@Grow:

; 2234 : 		return (0 < _Newsize);	// return true only if more work to do

  000ca	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Newsize$[rsp], 0
  000d0	76 0a		 jbe	 SHORT $LN11@Grow
  000d2	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv140[rsp], 1
  000da	eb 08		 jmp	 SHORT $LN12@Grow
$LN11@Grow:
  000dc	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv140[rsp], 0
$LN12@Grow:
  000e4	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv140[rsp]
$LN8@Grow:

; 2235 : 		}

  000e9	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000ed	c3		 ret	 0
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
_Dx$ = 40
this$ = 64
_Newsize$ = 72
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT

; 2217 : 		{	// set new length and null terminator

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2218 : 		auto& _Dx = this->_Get_data();

  0000e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00013	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  00018	48 89 44 24 28	 mov	 QWORD PTR _Dx$[rsp], rax

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  0001d	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00022	48 8b 44 24 28	 mov	 rax, QWORD PTR _Dx$[rsp]
  00027	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  0002c	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00030	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Dx$[rsp]
  00035	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003a	48 03 44 24 48	 add	 rax, QWORD PTR _Newsize$[rsp]
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAXAEADAEBD@Z ; std::char_traits<char>::assign

; 2220 : 		}

  0004c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00050	c3		 ret	 0
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
_TEXT	SEGMENT
_Newres$ = 32
_Ptr$ = 40
tv75 = 48
tv91 = 56
tv92 = 64
tv138 = 72
tv152 = 80
tv216 = 88
tv165 = 96
tv217 = 104
tv181 = 112
tv196 = 120
$T1 = 128
this$ = 160
_Newsize$ = 168
_Oldlen$ = 176
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

$LN23:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 81 ec 98 00
	00 00		 sub	 rsp, 152		; 00000098H
  00016	48 c7 84 24 80
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T1[rsp], -2

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00022	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0002a	48 83 c8 0f	 or	 rax, 15
  0002e	48 89 44 24 20	 mov	 QWORD PTR _Newres$[rsp], rax

; 2184 : 		if (max_size() < _Newres)

  00033	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00040	48 3b 44 24 20	 cmp	 rax, QWORD PTR _Newres$[rsp]
  00045	73 12		 jae	 SHORT $LN2@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

  00047	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0004f	48 89 44 24 20	 mov	 QWORD PTR _Newres$[rsp], rax
  00054	e9 dd 00 00 00	 jmp	 $LN3@Copy
$LN2@Copy:

; 2186 : 		else if (this->_Myres() / 2 <= _Newres / 3)

  00059	33 d2		 xor	 edx, edx
  0005b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Newres$[rsp]
  00060	b9 03 00 00 00	 mov	 ecx, 3
  00065	48 f7 f1	 div	 rcx
  00068	48 89 44 24 30	 mov	 QWORD PTR tv75[rsp], rax
  0006d	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00075	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  0007a	33 d2		 xor	 edx, edx
  0007c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007f	b9 02 00 00 00	 mov	 ecx, 2
  00084	48 f7 f1	 div	 rcx
  00087	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv75[rsp]
  0008c	48 3b c1	 cmp	 rax, rcx
  0008f	77 05		 ja	 SHORT $LN4@Copy
  00091	e9 a0 00 00 00	 jmp	 $LN3@Copy
$LN4@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

  00096	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009e	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000a3	33 d2		 xor	 edx, edx
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	b9 02 00 00 00	 mov	 ecx, 2
  000ad	48 f7 f1	 div	 rcx
  000b0	48 89 44 24 38	 mov	 QWORD PTR tv91[rsp], rax
  000b5	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  000c2	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv91[rsp]
  000c7	48 2b c1	 sub	 rax, rcx
  000ca	48 89 44 24 40	 mov	 QWORD PTR tv92[rsp], rax
  000cf	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000dc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv92[rsp]
  000e1	48 39 08	 cmp	 QWORD PTR [rax], rcx
  000e4	77 3e		 ja	 SHORT $LN6@Copy

; 2189 : 			_Newres = this->_Myres()

  000e6	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ee	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000f3	33 d2		 xor	 edx, edx
  000f5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000f8	b9 02 00 00 00	 mov	 ecx, 2
  000fd	48 f7 f1	 div	 rcx
  00100	48 89 44 24 48	 mov	 QWORD PTR tv138[rsp], rax
  00105	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0010d	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  00112	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv138[rsp]
  00117	48 03 08	 add	 rcx, QWORD PTR [rax]
  0011a	48 8b c1	 mov	 rax, rcx
  0011d	48 89 44 24 20	 mov	 QWORD PTR _Newres$[rsp], rax

; 2190 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2191 : 		else

  00122	eb 12		 jmp	 SHORT $LN3@Copy
$LN6@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

  00124	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0012c	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00131	48 89 44 24 20	 mov	 QWORD PTR _Newres$[rsp], rax
$LN3@Copy:

; 2193 : 
; 2194 : 		pointer _Ptr;
; 2195 : 		_TRY_BEGIN
; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

  00136	48 8b 44 24 20	 mov	 rax, QWORD PTR _Newres$[rsp]
  0013b	48 ff c0	 inc	 rax
  0013e	48 89 44 24 50	 mov	 QWORD PTR tv152[rsp], rax
  00143	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0014b	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00150	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv152[rsp]
  00155	48 8b d1	 mov	 rdx, rcx
  00158	48 8b c8	 mov	 rcx, rax
  0015b	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  00160	48 89 44 24 58	 mov	 QWORD PTR tv216[rsp], rax
  00165	48 8b 44 24 58	 mov	 rax, QWORD PTR tv216[rsp]
  0016a	48 89 44 24 28	 mov	 QWORD PTR _Ptr$[rsp], rax
  0016f	eb 00		 jmp	 SHORT $LN18@Copy
$LN19@Copy:
$LN18@Copy:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END
; 2205 : 		_CATCH_END
; 2206 : 
; 2207 : 		if (0 < _Oldlen)

  00171	48 83 bc 24 b0
	00 00 00 00	 cmp	 QWORD PTR _Oldlen$[rsp], 0
  0017a	76 34		 jbe	 SHORT $LN10@Copy

; 2208 : 			_Traits::copy(_Unfancy(_Ptr), this->_Myptr(),

  0017c	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00184	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00189	48 89 44 24 70	 mov	 QWORD PTR tv181[rsp], rax
  0018e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00193	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00198	4c 8b 84 24 b0
	00 00 00	 mov	 r8, QWORD PTR _Oldlen$[rsp]
  001a0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv181[rsp]
  001a5	48 8b d1	 mov	 rdx, rcx
  001a8	48 8b c8	 mov	 rcx, rax
  001ab	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ; std::char_traits<char>::copy
$LN10@Copy:

; 2209 : 				_Oldlen);	// copy existing elements
; 2210 : 		_Tidy(true);

  001b0	45 33 c0	 xor	 r8d, r8d
  001b3	b2 01		 mov	 dl, 1
  001b5	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001bd	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Ptr);

  001c2	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ca	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  001cf	48 8b c8	 mov	 rcx, rax
  001d2	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char * __ptr64>
  001d7	48 89 44 24 78	 mov	 QWORD PTR tv196[rsp], rax
  001dc	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001e4	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  001e9	4c 8d 44 24 28	 lea	 r8, QWORD PTR _Ptr$[rsp]
  001ee	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv196[rsp]
  001f3	48 8b d1	 mov	 rdx, rcx
  001f6	48 8b c8	 mov	 rcx, rax
  001f9	e8 00 00 00 00	 call	 ??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>

; 2212 : 		this->_Myres() = _Newres;

  001fe	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00206	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  0020b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Newres$[rsp]
  00210	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2213 : 		_Eos(_Oldlen);

  00213	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR _Oldlen$[rsp]
  0021b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00223	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2214 : 		}

  00228	48 81 c4 98 00
	00 00		 add	 rsp, 152		; 00000098H
  0022f	c3		 ret	 0
$LN20@Copy:
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Newres$ = 32
_Ptr$ = 40
tv75 = 48
tv91 = 56
tv92 = 64
tv138 = 72
tv152 = 80
tv216 = 88
tv165 = 96
tv217 = 104
tv181 = 112
tv196 = 120
$T1 = 128
this$ = 160
_Newsize$ = 168
_Oldlen$ = 176
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1

; 2197 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$0:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR _Newsize$[rbp]
  00014	48 89 45 20	 mov	 QWORD PTR _Newres$[rbp], rax

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00018	48 8b 45 20	 mov	 rax, QWORD PTR _Newres$[rbp]
  0001c	48 ff c0	 inc	 rax
  0001f	48 89 45 60	 mov	 QWORD PTR tv165[rbp], rax
  00023	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0002a	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  0002f	48 8b 4d 60	 mov	 rcx, QWORD PTR tv165[rbp]
  00033	48 8b d1	 mov	 rdx, rcx
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  0003e	48 89 45 68	 mov	 QWORD PTR tv217[rbp], rax
  00042	48 8b 45 68	 mov	 rax, QWORD PTR tv217[rbp]
  00046	48 89 45 28	 mov	 QWORD PTR _Ptr$[rbp], rax
  0004a	eb 00		 jmp	 SHORT $LN16@catch$1
$LN17@catch$1:
$LN16@catch$1:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END
; 2205 : 		_CATCH_END

  0004c	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
  00059	cc		 int	 3
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1
_Newres$ = 32
_Ptr$ = 40
tv75 = 48
tv91 = 56
tv92 = 64
tv138 = 72
tv152 = 80
tv216 = 88
tv165 = 96
tv217 = 104
tv181 = 112
tv196 = 120
$T1 = 128
this$ = 160
_Newsize$ = 168
_Oldlen$ = 176
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL

  0005a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0005f	55		 push	 rbp
  00060	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00064	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$1:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

  00067	45 33 c0	 xor	 r8d, r8d
  0006a	b2 01		 mov	 dl, 1
  0006c	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00073	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;

  00078	33 d2		 xor	 edx, edx
  0007a	33 c9		 xor	 ecx, ecx
  0007c	e8 00 00 00 00	 call	 _CxxThrowException
  00081	90		 npad	 1

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END

  00082	48 8d 05 00 00
	00 00		 lea	 rax, $LN17@catch$0
  00089	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008d	5d		 pop	 rbp
  0008e	c3		 ret	 0
  0008f	cc		 int	 3
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Newres$ = 32
_Ptr$ = 40
tv75 = 48
tv91 = 56
tv92 = 64
tv138 = 72
tv152 = 80
tv216 = 88
tv165 = 96
tv217 = 104
tv181 = 112
tv196 = 120
$T1 = 128
this$ = 160
_Newsize$ = 168
_Oldlen$ = 176
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1

; 2197 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$0:

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR _Newsize$[rbp]
  00014	48 89 45 20	 mov	 QWORD PTR _Newres$[rbp], rax

; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00018	48 8b 45 20	 mov	 rax, QWORD PTR _Newres$[rbp]
  0001c	48 ff c0	 inc	 rax
  0001f	48 89 45 60	 mov	 QWORD PTR tv165[rbp], rax
  00023	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0002a	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  0002f	48 8b 4d 60	 mov	 rcx, QWORD PTR tv165[rbp]
  00033	48 8b d1	 mov	 rdx, rcx
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  0003e	48 89 45 68	 mov	 QWORD PTR tv217[rbp], rax
  00042	48 8b 45 68	 mov	 rax, QWORD PTR tv217[rbp]
  00046	48 89 45 28	 mov	 QWORD PTR _Ptr$[rbp], rax
  0004a	eb 00		 jmp	 SHORT $LN16@catch$1
$LN17@catch$1:
$LN16@catch$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END
; 2205 : 		_CATCH_END

  0004c	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
  00059	cc		 int	 3
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Newres$ = 32
_Ptr$ = 40
tv75 = 48
tv91 = 56
tv92 = 64
tv138 = 72
tv152 = 80
tv216 = 88
tv165 = 96
tv217 = 104
tv181 = 112
tv196 = 120
$T1 = 128
this$ = 160
_Newsize$ = 168
_Oldlen$ = 176
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0

; 2201 : 			_CATCH_ALL

  0005a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0005f	55		 push	 rbp
  00060	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00064	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$1:

; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

  00067	45 33 c0	 xor	 r8d, r8d
  0006a	b2 01		 mov	 dl, 1
  0006c	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00073	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

  00078	33 d2		 xor	 edx, edx
  0007a	33 c9		 xor	 ecx, ecx
  0007c	e8 00 00 00 00	 call	 _CxxThrowException
  00081	90		 npad	 1

; 2204 : 			_CATCH_END

  00082	48 8d 05 00 00
	00 00		 lea	 rax, $LN17@catch$0
  00089	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008d	5d		 pop	 rbp
  0008e	c3		 ret	 0
  0008f	cc		 int	 3
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
_Count$ = 64
_Ch$ = 72
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign, COMDAT

; 2174 : 		{	// assign _Count copies of _Ch beginning at _Off

$LN5:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2175 : 		if (_Count == 1)

  00018	48 83 7c 24 40
	01		 cmp	 QWORD PTR _Count$[rsp], 1
  0001e	75 1e		 jne	 SHORT $LN2@Chassign

; 2176 : 			_Traits::assign(*(this->_Myptr() + _Off), _Ch);

  00020	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00025	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  0002a	48 03 44 24 38	 add	 rax, QWORD PTR _Off$[rsp]
  0002f	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ch$[rsp]
  00034	48 8b c8	 mov	 rcx, rax
  00037	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAXAEADAEBD@Z ; std::char_traits<char>::assign

; 2177 : 		else

  0003c	eb 22		 jmp	 SHORT $LN3@Chassign
$LN2@Chassign:

; 2178 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00048	48 03 44 24 38	 add	 rax, QWORD PTR _Off$[rsp]
  0004d	44 0f b6 44 24
	48		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  00053	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  00058	48 8b c8	 mov	 rcx, rax
  0005b	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z ; std::char_traits<char>::assign
$LN3@Chassign:

; 2179 : 		}

  00060	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00064	c3		 ret	 0
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
_Ret$ = 32
this$ = 64
__$ReturnUdt$ = 72
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT

; 2168 : 		{	// return allocator object for values

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2169 : 		allocator_type _Ret(this->_Getal());

  0000e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00013	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00018	48 8b d0	 mov	 rdx, rax
  0001b	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _Ret$[rsp]
  00020	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@AEBV01@@Z ; std::allocator<char>::allocator<char>

; 2170 : 		return (_Ret);

  00025	48 8d 54 24 20	 lea	 rdx, QWORD PTR _Ret$[rsp]
  0002a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0002f	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@AEBV01@@Z ; std::allocator<char>::allocator<char>
  00034	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 2171 : 		}

  00039	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003d	c3		 ret	 0
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
_Max_effective_size$ = 32
this$ = 64
_Off$ = 72
_Size$ = 80
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size, COMDAT

; 2111 : 		{	// trims _Size to the longest it can be assuming a string starting at _Off

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  00013	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0001d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Off$[rsp]
  00022	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00025	48 2b c1	 sub	 rax, rcx
  00028	48 89 44 24 20	 mov	 QWORD PTR _Max_effective_size$[rsp], rax

; 2113 : 		if (_Size <= _Max_effective_size)

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _Max_effective_size$[rsp]
  00032	48 39 44 24 50	 cmp	 QWORD PTR _Size$[rsp], rax
  00037	77 09		 ja	 SHORT $LN2@Clamp_suff

; 2114 : 			return (_Size);

  00039	48 8b 44 24 50	 mov	 rax, QWORD PTR _Size$[rsp]
  0003e	eb 07		 jmp	 SHORT $LN1@Clamp_suff

; 2115 : 		else

  00040	eb 05		 jmp	 SHORT $LN3@Clamp_suff
$LN2@Clamp_suff:

; 2116 : 			return (_Max_effective_size);

  00042	48 8b 44 24 20	 mov	 rax, QWORD PTR _Max_effective_size$[rsp]
$LN3@Clamp_suff:
$LN1@Clamp_suff:

; 2117 : 		}

  00047	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004b	c3		 ret	 0
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv71 = 32
this$ = 64
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT

; 1803 : 		{	// test if sequence is empty

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1804 : 		return (this->_Mysize() == 0);

  00009	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00013	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00017	75 0a		 jne	 SHORT $LN3@empty
  00019	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv71[rsp], 1
  00021	eb 08		 jmp	 SHORT $LN4@empty
$LN3@empty:
  00023	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv71[rsp], 0
$LN4@empty:
  0002b	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv71[rsp]

; 1805 : 		}

  00030	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00034	c3		 ret	 0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Ch$ = 64
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT

; 1780 : 		{	// determine new length, padding with _Ch elements as needed

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1781 : 		if (_Newsize <= this->_Mysize())

  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0001d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00020	48 39 44 24 38	 cmp	 QWORD PTR _Newsize$[rsp], rax
  00025	77 11		 ja	 SHORT $LN2@resize

; 1782 : 			_Eos(_Newsize);

  00027	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  0002c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1783 : 		else

  00036	eb 2b		 jmp	 SHORT $LN3@resize
$LN2@resize:

; 1784 : 			append(_Newsize - this->_Mysize(), _Ch);

  00038	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  0004a	48 2b c8	 sub	 rcx, rax
  0004d	48 8b c1	 mov	 rax, rcx
  00050	44 0f b6 44 24
	40		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  00056	48 8b d0	 mov	 rdx, rax
  00059	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005e	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN3@resize:

; 1785 : 		}

  00063	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00067	c3		 ret	 0
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT

; 1775 : 		{	// determine new length, padding with null elements as needed

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1776 : 		resize(_Newsize, _Elem());

  0000e	45 33 c0	 xor	 r8d, r8d
  00011	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  00016	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0001b	e8 00 00 00 00	 call	 ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

; 1777 : 		}

  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	c3		 ret	 0
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
_Num$ = 40
tv75 = 48
this$ = 80
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 1769 : 		{	// return maximum possible length of sequence

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1770 : 		const size_type _Num = this->_Getal().max_size();

  00009	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00013	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00018	48 8b c8	 mov	 rcx, rax
  0001b	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
  00020	48 89 44 24 28	 mov	 QWORD PTR _Num$[rsp], rax

; 1771 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00025	48 83 7c 24 28
	01		 cmp	 QWORD PTR _Num$[rsp], 1
  0002b	77 0b		 ja	 SHORT $LN3@max_size
  0002d	48 c7 44 24 30
	01 00 00 00	 mov	 QWORD PTR tv75[rsp], 1
  00036	eb 0d		 jmp	 SHORT $LN4@max_size
$LN3@max_size:
  00038	48 8b 44 24 28	 mov	 rax, QWORD PTR _Num$[rsp]
  0003d	48 ff c8	 dec	 rax
  00040	48 89 44 24 30	 mov	 QWORD PTR tv75[rsp], rax
$LN4@max_size:
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR tv75[rsp]

; 1772 : 		}

  0004a	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0004e	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 48
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 1764 : 		{	// return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1765 : 		return (this->_Mysize());

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00013	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1766 : 		}

  00016	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001a	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 1742 : 		{	// return pointer to null-terminated nonmutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 1743 : 		return (this->_Myptr());

  00012	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00017	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  0001c	90		 npad	 1

; 1744 : 		}

  0001d	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00021	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 1692 : 		{	// subscript nonmutable sequence

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1693 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1694 : 		if (this->_Mysize() < _Off)	// sic
; 1695 : 			_DEBUG_ERROR("string subscript out of range");
; 1696 : 
; 1697 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1698 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1699 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1700 : 
; 1701 : 		return (this->_Myptr()[_Off]);

  0000e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00013	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00018	48 03 44 24 38	 add	 rax, QWORD PTR _Off$[rsp]

; 1702 : 		}

  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 1679 : 		{	// subscript mutable sequence

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1680 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1681 : 		if (this->_Mysize() < _Off)	// sic
; 1682 : 			_DEBUG_ERROR("string subscript out of range");
; 1683 : 
; 1684 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1685 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1686 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1687 : 
; 1688 : 		return (this->_Myptr()[_Off]);

  0000e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00013	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00018	48 03 44 24 38	 add	 rax, QWORD PTR _Off$[rsp]

; 1689 : 		}

  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z
_TEXT	SEGMENT
_Ptr$1 = 32
_Newsize$2 = 40
this$ = 64
_Off$ = 72
_Count$ = 80
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 1347 : 		{	// erase elements [_Off, _Off + _Count)

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1348 : 		_Check_offset(_Off);

  00013	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Off$[rsp]
  00018	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0001d	e8 00 00 00 00	 call	 ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1349 : 		if (this->_Mysize() - _Off <= _Count)

  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0002c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Off$[rsp]
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 2b c1	 sub	 rax, rcx
  00037	48 3b 44 24 50	 cmp	 rax, QWORD PTR _Count$[rsp]
  0003c	77 11		 ja	 SHORT $LN2@erase

; 1350 : 			_Eos(_Off);	// erase elements [_Off, ...)

  0003e	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Off$[rsp]
  00043	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00048	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
  0004d	eb 75		 jmp	 SHORT $LN3@erase
$LN2@erase:

; 1351 : 		else if (0 < _Count)

  0004f	48 83 7c 24 50
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00055	76 6d		 jbe	 SHORT $LN4@erase

; 1352 : 			{	// move elements down
; 1353 : 			value_type *_Ptr = this->_Myptr() + _Off;

  00057	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00061	48 03 44 24 48	 add	 rax, QWORD PTR _Off$[rsp]
  00066	48 89 44 24 20	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 1354 : 			size_type _Newsize = this->_Mysize() - _Count;

  0006b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00070	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00075	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  0007a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007d	48 2b c1	 sub	 rax, rcx
  00080	48 89 44 24 28	 mov	 QWORD PTR _Newsize$2[rsp], rax

; 1355 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

  00085	48 8b 44 24 48	 mov	 rax, QWORD PTR _Off$[rsp]
  0008a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Newsize$2[rsp]
  0008f	48 2b c8	 sub	 rcx, rax
  00092	48 8b c1	 mov	 rax, rcx
  00095	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  0009a	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$1[rsp]
  0009f	48 03 d1	 add	 rdx, rcx
  000a2	48 8b ca	 mov	 rcx, rdx
  000a5	4c 8b c0	 mov	 r8, rax
  000a8	48 8b d1	 mov	 rdx, rcx
  000ab	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Ptr$1[rsp]
  000b0	e8 00 00 00 00	 call	 ?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ; std::char_traits<char>::move

; 1356 : 			_Eos(_Newsize);

  000b5	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Newsize$2[rsp]
  000ba	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bf	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@erase:
$LN3@erase:

; 1357 : 			}
; 1358 : 		return (*this);

  000c4	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 1359 : 		}

  000c9	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000cd	c3		 ret	 0
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 1340 : 		{	// erase elements [_Off, ...)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1341 : 		_Check_offset(_Off);

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Off$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1342 : 		_Eos(_Off);

  0001d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Off$[rsp]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1343 : 		return (*this);

  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]

; 1344 : 		}

  00031	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00035	c3		 ret	 0
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
_TEXT	SEGMENT
_Num$ = 32
tv128 = 40
tv136 = 48
this$ = 80
_Off$ = 88
_Count$ = 96
_Ch$ = 104
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT

; 1278 : 		{	// insert _Count * _Ch at _Off

$LN5:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1279 : 		_Check_offset(_Off);

  00018	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Off$[rsp]
  0001d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00022	e8 00 00 00 00	 call	 ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1280 : 		if (npos - this->_Mysize() <= _Count)

  00027	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  0003b	48 2b c8	 sub	 rcx, rax
  0003e	48 8b c1	 mov	 rax, rcx
  00041	48 3b 44 24 60	 cmp	 rax, QWORD PTR _Count$[rsp]
  00046	77 0a		 ja	 SHORT $LN2@insert

; 1281 : 			_Xlen();	// result too long

  00048	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0004d	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@insert:

; 1282 : 		const size_type _Num = this->_Mysize() + _Count;

  00052	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0005c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005f	48 03 44 24 60	 add	 rax, QWORD PTR _Count$[rsp]
  00064	48 89 44 24 20	 mov	 QWORD PTR _Num$[rsp], rax

; 1283 : 		if (0 < _Count && _Grow(_Num))

  00069	48 83 7c 24 60
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0006f	0f 86 a0 00 00
	00		 jbe	 $LN3@insert
  00075	45 33 c0	 xor	 r8d, r8d
  00078	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Num$[rsp]
  0007d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00082	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00087	0f b6 c0	 movzx	 eax, al
  0008a	85 c0		 test	 eax, eax
  0008c	0f 84 83 00 00
	00		 je	 $LN3@insert

; 1284 : 			{	// make room and insert new stuff
; 1285 : 			_Traits::move(this->_Myptr() + _Off + _Count,

  00092	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00097	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0009c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Off$[rsp]
  000a1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a4	48 2b c1	 sub	 rax, rcx
  000a7	48 89 44 24 28	 mov	 QWORD PTR tv128[rsp], rax
  000ac	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  000b6	48 03 44 24 58	 add	 rax, QWORD PTR _Off$[rsp]
  000bb	48 89 44 24 30	 mov	 QWORD PTR tv136[rsp], rax
  000c0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000c5	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  000ca	48 03 44 24 58	 add	 rax, QWORD PTR _Off$[rsp]
  000cf	48 03 44 24 60	 add	 rax, QWORD PTR _Count$[rsp]
  000d4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv128[rsp]
  000d9	4c 8b c1	 mov	 r8, rcx
  000dc	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv136[rsp]
  000e1	48 8b d1	 mov	 rdx, rcx
  000e4	48 8b c8	 mov	 rcx, rax
  000e7	e8 00 00 00 00	 call	 ?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ; std::char_traits<char>::move

; 1286 : 				this->_Myptr() + _Off,
; 1287 : 				this->_Mysize() - _Off);	// empty out hole
; 1288 : 			_Chassign(_Off, _Count, _Ch);	// fill hole

  000ec	44 0f b6 4c 24
	68		 movzx	 r9d, BYTE PTR _Ch$[rsp]
  000f2	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Count$[rsp]
  000f7	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Off$[rsp]
  000fc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00101	e8 00 00 00 00	 call	 ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign

; 1289 : 			_Eos(_Num);

  00106	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Num$[rsp]
  0010b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00110	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@insert:

; 1290 : 			}
; 1291 : 		return (*this);

  00115	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
$LN4@insert:

; 1292 : 		}

  0011a	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0011e	c3		 ret	 0
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
_Ch$ = 64
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1186 : 		{	// assign _Count * _Ch

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1187 : 		if (_Count == npos)

  00013	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  0001a	48 39 44 24 38	 cmp	 QWORD PTR _Count$[rsp], rax
  0001f	75 0a		 jne	 SHORT $LN2@assign

; 1188 : 			_Xlen();	// result too long

  00021	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00026	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@assign:

; 1189 : 
; 1190 : 		if (_Grow(_Count))

  0002b	45 33 c0	 xor	 r8d, r8d
  0002e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Count$[rsp]
  00033	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  0003d	0f b6 c0	 movzx	 eax, al
  00040	85 c0		 test	 eax, eax
  00042	74 26		 je	 SHORT $LN3@assign

; 1191 : 			{	// make room and assign new stuff
; 1192 : 			_Chassign(0, _Count, _Ch);

  00044	44 0f b6 4c 24
	40		 movzx	 r9d, BYTE PTR _Ch$[rsp]
  0004a	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  0004f	33 d2		 xor	 edx, edx
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign

; 1193 : 			_Eos(_Count);

  0005b	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Count$[rsp]
  00060	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00065	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@assign:

; 1194 : 			}
; 1195 : 		return (*this);

  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
$LN4@assign:

; 1196 : 		}

  0006f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00073	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1180 : 		{	// assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1181 : 		_DEBUG_POINTER(_Ptr);
; 1182 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0000e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00013	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SA_KPEBD@Z ; std::char_traits<char>::length
  00018	4c 8b c0	 mov	 r8, rax
  0001b	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00020	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00025	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1183 : 		}

  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1165 : 		{	// assign [_Ptr, _Ptr + _Count)

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1166 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1167 : 		if (_Inside(_Ptr))

  00013	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00018	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0001d	e8 00 00 00 00	 call	 ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
  00022	0f b6 c0	 movzx	 eax, al
  00025	85 c0		 test	 eax, eax
  00027	74 2e		 je	 SHORT $LN2@assign

; 1168 : 			return (assign(*this,

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00033	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00038	48 2b c8	 sub	 rcx, rax
  0003b	48 8b c1	 mov	 rax, rcx
  0003e	4c 8b 4c 24 40	 mov	 r9, QWORD PTR _Count$[rsp]
  00043	4c 8b c0	 mov	 r8, rax
  00046	48 8b 54 24 30	 mov	 rdx, QWORD PTR this$[rsp]
  0004b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00055	eb 49		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 1169 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1170 : 
; 1171 : 		if (_Grow(_Count))

  00057	45 33 c0	 xor	 r8d, r8d
  0005a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0005f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00064	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00069	0f b6 c0	 movzx	 eax, al
  0006c	85 c0		 test	 eax, eax
  0006e	74 2b		 je	 SHORT $LN3@assign

; 1172 : 			{	// make room and assign new stuff
; 1173 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

  00070	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00075	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  0007a	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0007f	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00084	48 8b c8	 mov	 rcx, rax
  00087	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ; std::char_traits<char>::copy

; 1174 : 			_Eos(_Count);

  0008c	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  00091	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00096	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@assign:

; 1175 : 			}
; 1176 : 		return (*this);

  0009b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
$LN1@assign:

; 1177 : 		}

  000a0	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a4	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
tv91 = 32
this$ = 64
_Right$ = 72
_Roff$ = 80
_Count$ = 88
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1149 : 		{	// assign _Right [_Roff, _Roff + _Count)

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1150 : 		_Right._Check_offset(_Roff);

  00018	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Roff$[rsp]
  0001d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00022	e8 00 00 00 00	 call	 ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1151 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);

  00027	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Count$[rsp]
  0002c	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Roff$[rsp]
  00031	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
  0003b	48 89 44 24 58	 mov	 QWORD PTR _Count$[rsp], rax

; 1152 : 
; 1153 : 		if (this == &_Right)

  00040	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00045	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  0004a	75 30		 jne	 SHORT $LN2@assign

; 1154 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  0004c	48 8b 44 24 58	 mov	 rax, QWORD PTR _Count$[rsp]
  00051	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Roff$[rsp]
  00056	48 03 c8	 add	 rcx, rax
  00059	48 8b c1	 mov	 rax, rcx
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00064	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00069	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Roff$[rsp]
  0006e	33 d2		 xor	 edx, edx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00075	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  0007a	eb 5b		 jmp	 SHORT $LN3@assign
$LN2@assign:

; 1155 : 		else if (_Grow(_Count))

  0007c	45 33 c0	 xor	 r8d, r8d
  0007f	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Count$[rsp]
  00084	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00089	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  0008e	0f b6 c0	 movzx	 eax, al
  00091	85 c0		 test	 eax, eax
  00093	74 42		 je	 SHORT $LN4@assign

; 1156 : 			{	// make room and assign new stuff
; 1157 : 			_Traits::copy(this->_Myptr(),

  00095	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0009a	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  0009f	48 03 44 24 50	 add	 rax, QWORD PTR _Roff$[rsp]
  000a4	48 89 44 24 20	 mov	 QWORD PTR tv91[rsp], rax
  000a9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  000b3	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Count$[rsp]
  000b8	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv91[rsp]
  000bd	48 8b d1	 mov	 rdx, rcx
  000c0	48 8b c8	 mov	 rcx, rax
  000c3	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ; std::char_traits<char>::copy

; 1158 : 				_Right._Myptr() + _Roff, _Count);
; 1159 : 			_Eos(_Count);

  000c8	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Count$[rsp]
  000cd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000d2	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@assign:
$LN3@assign:

; 1160 : 			}
; 1161 : 		return (*this);

  000d7	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 1162 : 		}

  000dc	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000e0	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1143 : 		{	// assign _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1144 : 		return (assign(_Right, 0, npos));

  0000e	4c 8b 0d 00 00
	00 00		 mov	 r9, QWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  00015	45 33 c0	 xor	 r8d, r8d
  00018	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00022	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
_TEXT	SEGMENT
_Num$ = 32
this$ = 64
_Count$ = 72
_Ch$ = 80
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1111 : 		{	// append _Count * _Ch

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1112 : 		if (npos - this->_Mysize() <= _Count)

  00013	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0001d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00020	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  00027	48 2b c8	 sub	 rcx, rax
  0002a	48 8b c1	 mov	 rax, rcx
  0002d	48 3b 44 24 48	 cmp	 rax, QWORD PTR _Count$[rsp]
  00032	77 0a		 ja	 SHORT $LN2@append

; 1113 : 			_Xlen();	// result too long

  00034	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00039	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:

; 1114 : 
; 1115 : 		const size_type _Num = this->_Mysize() + _Count;

  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 03 44 24 48	 add	 rax, QWORD PTR _Count$[rsp]
  00050	48 89 44 24 20	 mov	 QWORD PTR _Num$[rsp], rax

; 1116 : 		if (0 < _Count && _Grow(_Num))

  00055	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0005b	76 4a		 jbe	 SHORT $LN3@append
  0005d	45 33 c0	 xor	 r8d, r8d
  00060	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Num$[rsp]
  00065	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  0006f	0f b6 c0	 movzx	 eax, al
  00072	85 c0		 test	 eax, eax
  00074	74 31		 je	 SHORT $LN3@append

; 1117 : 			{	// make room and append new stuff using assign
; 1118 : 			_Chassign(this->_Mysize(), _Count, _Ch);

  00076	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0007b	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00080	44 0f b6 4c 24
	50		 movzx	 r9d, BYTE PTR _Ch$[rsp]
  00086	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Count$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign

; 1119 : 			_Eos(_Num);

  00098	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Num$[rsp]
  0009d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@append:

; 1120 : 			}
; 1121 : 		return (*this);

  000a7	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
$LN4@append:

; 1122 : 		}

  000ac	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000b0	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1105 : 		{	// append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1106 : 		_DEBUG_POINTER(_Ptr);
; 1107 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  0000e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00013	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SA_KPEBD@Z ; std::char_traits<char>::length
  00018	4c 8b c0	 mov	 r8, rax
  0001b	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00020	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00025	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1108 : 		}

  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
_TEXT	SEGMENT
_Num$ = 32
tv144 = 40
this$ = 64
_Ptr$ = 72
_Count$ = 80
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1087 : 		{	// append [_Ptr, _Ptr + _Count)

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1088 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1089 : 		if (_Inside(_Ptr))

  00013	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00018	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0001d	e8 00 00 00 00	 call	 ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
  00022	0f b6 c0	 movzx	 eax, al
  00025	85 c0		 test	 eax, eax
  00027	74 31		 je	 SHORT $LN2@append

; 1090 : 			return (append(*this,

  00029	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  00033	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00038	48 2b c8	 sub	 rcx, rax
  0003b	48 8b c1	 mov	 rax, rcx
  0003e	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Count$[rsp]
  00043	4c 8b c0	 mov	 r8, rax
  00046	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  0004b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  00055	e9 ad 00 00 00	 jmp	 $LN1@append
$LN2@append:

; 1091 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1092 : 		if (npos - this->_Mysize() <= _Count)

  0005a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005f	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00064	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00067	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  0006e	48 2b c8	 sub	 rcx, rax
  00071	48 8b c1	 mov	 rax, rcx
  00074	48 3b 44 24 50	 cmp	 rax, QWORD PTR _Count$[rsp]
  00079	77 0a		 ja	 SHORT $LN3@append

; 1093 : 			_Xlen();	// result too long

  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN3@append:

; 1094 : 
; 1095 : 		const size_type _Num = this->_Mysize() + _Count;

  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0008a	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0008f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00092	48 03 44 24 50	 add	 rax, QWORD PTR _Count$[rsp]
  00097	48 89 44 24 20	 mov	 QWORD PTR _Num$[rsp], rax

; 1096 : 		if (0 < _Count && _Grow(_Num))

  0009c	48 83 7c 24 50
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  000a2	76 5e		 jbe	 SHORT $LN4@append
  000a4	45 33 c0	 xor	 r8d, r8d
  000a7	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Num$[rsp]
  000ac	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  000b6	0f b6 c0	 movzx	 eax, al
  000b9	85 c0		 test	 eax, eax
  000bb	74 45		 je	 SHORT $LN4@append

; 1097 : 			{	// make room and append new stuff
; 1098 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

  000bd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000c2	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  000c7	48 89 44 24 28	 mov	 QWORD PTR tv144[rsp], rax
  000cc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000d1	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  000d6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv144[rsp]
  000db	48 03 08	 add	 rcx, QWORD PTR [rax]
  000de	48 8b c1	 mov	 rax, rcx
  000e1	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  000e6	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  000eb	48 8b c8	 mov	 rcx, rax
  000ee	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ; std::char_traits<char>::copy

; 1099 : 			_Eos(_Num);

  000f3	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Num$[rsp]
  000f8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000fd	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@append:

; 1100 : 			}
; 1101 : 		return (*this);

  00102	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
$LN1@append:
$LN5@append:

; 1102 : 		}

  00107	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0010b	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
_Num$ = 32
tv140 = 40
tv133 = 48
this$ = 80
_Right$ = 88
_Roff$ = 96
_Count$ = 104
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1070 : 		{	// append _Right [_Roff, _Roff + _Count)

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1071 : 		_Right._Check_offset(_Roff);

  00018	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Roff$[rsp]
  0001d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00022	e8 00 00 00 00	 call	 ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset

; 1072 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);

  00027	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Count$[rsp]
  0002c	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Roff$[rsp]
  00031	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
  0003b	48 89 44 24 68	 mov	 QWORD PTR _Count$[rsp], rax

; 1073 : 		if (npos - this->_Mysize() <= _Count)

  00040	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00045	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  0004a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  00054	48 2b c8	 sub	 rcx, rax
  00057	48 8b c1	 mov	 rax, rcx
  0005a	48 3b 44 24 68	 cmp	 rax, QWORD PTR _Count$[rsp]
  0005f	77 0a		 ja	 SHORT $LN2@append

; 1074 : 			_Xlen();	// result too long

  00061	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:

; 1075 : 
; 1076 : 		const size_type _Num = this->_Mysize() + _Count;

  0006b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00070	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 03 44 24 68	 add	 rax, QWORD PTR _Count$[rsp]
  0007d	48 89 44 24 20	 mov	 QWORD PTR _Num$[rsp], rax

; 1077 : 		if (0 < _Count && _Grow(_Num))

  00082	48 83 7c 24 68
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00088	76 75		 jbe	 SHORT $LN3@append
  0008a	45 33 c0	 xor	 r8d, r8d
  0008d	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Num$[rsp]
  00092	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00097	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  0009c	0f b6 c0	 movzx	 eax, al
  0009f	85 c0		 test	 eax, eax
  000a1	74 5c		 je	 SHORT $LN3@append

; 1078 : 			{	// make room and append new stuff
; 1079 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),

  000a3	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  000a8	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  000ad	48 03 44 24 60	 add	 rax, QWORD PTR _Roff$[rsp]
  000b2	48 89 44 24 30	 mov	 QWORD PTR tv133[rsp], rax
  000b7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000bc	e8 00 00 00 00	 call	 ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
  000c1	48 89 44 24 28	 mov	 QWORD PTR tv140[rsp], rax
  000c6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000cb	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  000d0	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv140[rsp]
  000d5	48 03 08	 add	 rcx, QWORD PTR [rax]
  000d8	48 8b c1	 mov	 rax, rcx
  000db	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Count$[rsp]
  000e0	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv133[rsp]
  000e5	48 8b d1	 mov	 rdx, rcx
  000e8	48 8b c8	 mov	 rcx, rax
  000eb	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ; std::char_traits<char>::copy

; 1080 : 				_Right._Myptr() + _Roff, _Count);
; 1081 : 			_Eos(_Num);

  000f0	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Num$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000fa	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@append:

; 1082 : 			}
; 1083 : 		return (*this);

  000ff	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
$LN4@append:

; 1084 : 		}

  00104	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00108	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1064 : 		{	// append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1065 : 		return (append(_Right, 0, npos));

  0000e	4c 8b 0d 00 00
	00 00		 mov	 r9, QWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  00015	45 33 c0	 xor	 r8d, r8d
  00018	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00022	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1066 : 		}

  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
tv71 = 32
this$ = 64
_Right$ = 72
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 1023 : 		{	// assign _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1024 : 		if (this != &_Right)

  0000e	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00013	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  00018	74 6b		 je	 SHORT $LN2@operator

; 1025 : 			{	// different, assign it
; 1026 : 			if (this->_Getal() != _Right._Getal()
; 1027 : 				&& _Alty::propagate_on_container_copy_assignment::value)

  0001a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0001f	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00024	48 89 44 24 20	 mov	 QWORD PTR tv71[rsp], rax
  00029	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00033	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv71[rsp]
  00038	48 8b d1	 mov	 rdx, rcx
  0003b	48 8b c8	 mov	 rcx, rax
  0003e	e8 00 00 00 00	 call	 ??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::operator!=<std::allocator<char>,std::allocator<char> >
  00043	0f b6 c0	 movzx	 eax, al
  00046	85 c0		 test	 eax, eax
  00048	74 2c		 je	 SHORT $LN3@operator
  0004a	33 c0		 xor	 eax, eax
  0004c	85 c0		 test	 eax, eax
  0004e	74 26		 je	 SHORT $LN3@operator

; 1028 : 				{	// change allocator before copying
; 1029 : 				_Tidy(true);

  00050	45 33 c0	 xor	 r8d, r8d
  00053	b2 01		 mov	 dl, 1
  00055	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1030 : 				this->_Copy_alloc(_Right._Getal());

  0005f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00064	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00069	48 8b d0	 mov	 rdx, rax
  0006c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00071	e8 00 00 00 00	 call	 ?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Copy_alloc
$LN3@operator:

; 1031 : 				}
; 1032 : 
; 1033 : 			assign(_Right);

  00076	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN2@operator:

; 1034 : 			}
; 1035 : 		return (*this);

  00085	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 1036 : 		}

  0008a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0008e	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 1016 : 		{	// destroy the string

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 1017 : 		_Tidy(true);

  00012	45 33 c0	 xor	 r8d, r8d
  00015	b2 01		 mov	 dl, 1
  00017	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0001c	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00021	90		 npad	 1

; 1018 : 		}

  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
  0002c	90		 npad	 1
  0002d	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00031	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z
_TEXT	SEGMENT
tv78 = 32
tv86 = 40
tv140 = 48
tv142 = 56
tv170 = 64
tv182 = 72
this$ = 96
_Right$ = 104
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv, COMDAT

; 961  : 		{	// assign by moving _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 962  : 		if (_Right._Myres() < this->_BUF_SIZE)

  0000e	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Right$[rsp]
  00013	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  00018	48 83 38 10	 cmp	 QWORD PTR [rax], 16
  0001c	73 48		 jae	 SHORT $LN2@Assign_rv

; 963  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,

  0001e	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Right$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 ff c0	 inc	 rax
  0002e	48 89 44 24 20	 mov	 QWORD PTR tv78[rsp], rax
  00033	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Right$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  0003d	48 89 44 24 28	 mov	 QWORD PTR tv86[rsp], rax
  00042	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv78[rsp]
  00051	4c 8b c1	 mov	 r8, rcx
  00054	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv86[rsp]
  00059	48 8b d1	 mov	 rdx, rcx
  0005c	48 8b c8	 mov	 rcx, rax
  0005f	e8 00 00 00 00	 call	 ?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ; std::char_traits<char>::move

; 964  : 				_Right._Mysize() + 1);
; 965  : 		else

  00064	eb 59		 jmp	 SHORT $LN3@Assign_rv
$LN2@Assign_rv:

; 966  : 			{	// copy pointer
; 967  : 			this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Right._Bx()._Ptr);

  00066	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Right$[rsp]
  0006b	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  00070	48 89 44 24 30	 mov	 QWORD PTR tv140[rsp], rax
  00075	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007a	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  0007f	48 8b c8	 mov	 rcx, rax
  00082	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char * __ptr64>
  00087	48 89 44 24 38	 mov	 QWORD PTR tv142[rsp], rax
  0008c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00091	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00096	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv140[rsp]
  0009b	4c 8b c1	 mov	 r8, rcx
  0009e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv142[rsp]
  000a3	48 8b d1	 mov	 rdx, rcx
  000a6	48 8b c8	 mov	 rcx, rax
  000a9	e8 00 00 00 00	 call	 ??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>

; 968  : 			_Right._Bx()._Ptr = pointer();

  000ae	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Right$[rsp]
  000b3	e8 00 00 00 00	 call	 ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
  000b8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Assign_rv:

; 969  : 			}
; 970  : 		this->_Mysize() = _Right._Mysize();

  000bf	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Right$[rsp]
  000c4	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  000c9	48 89 44 24 40	 mov	 QWORD PTR tv170[rsp], rax
  000ce	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000d3	e8 00 00 00 00	 call	 ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
  000d8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv170[rsp]
  000dd	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000e0	48 89 08	 mov	 QWORD PTR [rax], rcx

; 971  : 		this->_Myres() = _Right._Myres();

  000e3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Right$[rsp]
  000e8	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000ed	48 89 44 24 48	 mov	 QWORD PTR tv182[rsp], rax
  000f2	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000f7	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  000fc	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv182[rsp]
  00101	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00104	48 89 08	 mov	 QWORD PTR [rax], rcx

; 972  : 		_Right._Tidy();

  00107	45 33 c0	 xor	 r8d, r8d
  0010a	33 d2		 xor	 edx, edx
  0010c	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Right$[rsp]
  00111	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 973  : 		}

  00116	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0011a	c3		 ret	 0
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
tv67 = 40
$T3 = 48
this$ = 80
_Right$ = 88
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 946  : 		{	// assign by moving _Right

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0000e	48 c7 44 24 30
	fe ff ff ff	 mov	 QWORD PTR $T3[rsp], -2

; 947  : 		if (this == &_Right)

  00017	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0001c	48 39 44 24 50	 cmp	 QWORD PTR this$[rsp], rax
  00021	75 05		 jne	 SHORT $LN2@assign

; 948  : 			;
; 949  : 		else if (get_allocator() != _Right.get_allocator()

  00023	e9 89 00 00 00	 jmp	 $LN3@assign
$LN2@assign:

; 950  : 			&& this->_BUF_SIZE <= _Right._Myres())

  00028	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0002d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00032	e8 00 00 00 00	 call	 ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
  00037	90		 npad	 1
  00038	48 89 44 24 28	 mov	 QWORD PTR tv67[rsp], rax
  0003d	48 8d 54 24 21	 lea	 rdx, QWORD PTR $T2[rsp]
  00042	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
  0004c	90		 npad	 1
  0004d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv67[rsp]
  00052	48 8b d1	 mov	 rdx, rcx
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ??$?9DD@std@@YA_NAEBV?$allocator@D@0@0@Z ; std::operator!=<char,char>
  0005d	90		 npad	 1
  0005e	0f b6 c0	 movzx	 eax, al
  00061	85 c0		 test	 eax, eax
  00063	74 23		 je	 SHORT $LN4@assign
  00065	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  0006f	90		 npad	 1
  00070	48 83 38 10	 cmp	 QWORD PTR [rax], 16
  00074	72 12		 jb	 SHORT $LN4@assign

; 951  : 			*this = _Right;

  00076	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Right$[rsp]
  0007b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00080	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  00085	90		 npad	 1

; 952  : 		else

  00086	eb 29		 jmp	 SHORT $LN3@assign
$LN4@assign:

; 953  : 			{	// not same, clear this and steal from _Right
; 954  : 			_Tidy(true);

  00088	45 33 c0	 xor	 r8d, r8d
  0008b	b2 01		 mov	 dl, 1
  0008d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00097	90		 npad	 1

; 955  : 			_Assign_rv(_STD forward<_Myt>(_Right));

  00098	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0009d	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  000a2	90		 npad	 1
  000a3	48 8b d0	 mov	 rdx, rax
  000a6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000ab	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
  000b0	90		 npad	 1
$LN3@assign:

; 956  : 			}
; 957  : 		return (*this);

  000b1	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 958  : 		}

  000b6	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000ba	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 911  : 		{	// construct by moving _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 910  : 		: _Mybase(_STD move(_Right._Getal()))

  00017	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0001c	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00021	90		 npad	 1
  00022	48 8b c8	 mov	 rcx, rax
  00025	e8 00 00 00 00	 call	 ??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
  0002a	90		 npad	 1
  0002b	48 8b d0	 mov	 rdx, rax
  0002e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
  00038	90		 npad	 1

; 912  : 		_Tidy();

  00039	45 33 c0	 xor	 r8d, r8d
  0003c	33 d2		 xor	 edx, edx
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00048	90		 npad	 1

; 913  : 		_Assign_rv(_STD forward<_Myt>(_Right));

  00049	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004e	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00053	90		 npad	 1
  00054	48 8b d0	 mov	 rdx, rax
  00057	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
  00061	90		 npad	 1

; 914  : 		}

  00062	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006b	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Count$ = 72
_Ch$ = 80
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 850  : 		{	// construct from _Count * _Ch

$LN4:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00013	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 849  : 		: _Mybase()

  0001c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00021	e8 00 00 00 00	 call	 ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
  00026	90		 npad	 1

; 851  : 		_Tidy();

  00027	45 33 c0	 xor	 r8d, r8d
  0002a	33 d2		 xor	 edx, edx
  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 852  : 		assign(_Count, _Ch);

  00036	44 0f b6 44 24
	50		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  0003c	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Count$[rsp]
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	90		 npad	 1

; 853  : 		}

  0004c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00055	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Count$ = 72
_Ch$ = 80
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Count$ = 72
_Ch$ = 80
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 836  : 		{	// construct from [_Ptr, <null>)

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 835  : 		: _Mybase()

  00017	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0001c	e8 00 00 00 00	 call	 ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
  00021	90		 npad	 1

; 837  : 		_Tidy();

  00022	45 33 c0	 xor	 r8d, r8d
  00025	33 d2		 xor	 edx, edx
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 838  : 		assign(_Ptr);

  00031	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00040	90		 npad	 1

; 839  : 		}

  00041	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004a	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 794  : 		{	// construct empty string

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 793  : 		: _Mybase()

  00012	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00017	e8 00 00 00 00	 call	 ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
  0001c	90		 npad	 1

; 795  : 		_Tidy();

  0001d	45 33 c0	 xor	 r8d, r8d
  00020	33 d2		 xor	 edx, edx
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  0002c	90		 npad	 1

; 796  : 		}

  0002d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00036	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
this$ = 64
_Right$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 780  : 		{	// construct by copying _Right

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 28
	fe ff ff ff	 mov	 QWORD PTR $T3[rsp], -2

; 777  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())

  00017	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0001c	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00021	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  00027	48 8d 54 24 21	 lea	 rdx, QWORD PTR $T2[rsp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
  00041	90		 npad	 1

; 781  : 		_Tidy();

  00042	45 33 c0	 xor	 r8d, r8d
  00045	33 d2		 xor	 edx, edx
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 782  : 		assign(_Right, 0, npos);

  00051	4c 8b 0d 00 00
	00 00		 mov	 r9, QWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  00058	45 33 c0	 xor	 r8d, r8d
  0005b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00060	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00065	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0006a	90		 npad	 1

; 783  : 		}

  0006b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00074	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	e8 00 00 00 00	 call	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
  00012	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00016	5d		 pop	 rbp
  00017	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b c8	 mov	 rcx, rax
  00011	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00016	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001a	c3		 ret	 0
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b c8	 mov	 rcx, rax
  00011	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  00016	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001a	c3		 ret	 0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 319  : 		{	// return const reference to second

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 320  : 		return (_Myval2);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]

; 321  : 		}

  0000a	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 314  : 		{	// return reference to second

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 315  : 		return (_Myval2);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]

; 316  : 		}

  0000a	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 299  : 		{	// return const reference to first

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 300  : 		return (*this);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]

; 301  : 		}

  0000a	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 294  : 		{	// return reference to first

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 295  : 		return (*this);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]

; 296  : 		}

  0000a	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 48
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres, COMDAT

; 733  : 		{	// return reference to _Myres

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 734  : 		return (_Get_data()._Myres);

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  00013	48 83 c0 18	 add	 rax, 24

; 735  : 		}

  00017	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001b	c3		 ret	 0
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ
_TEXT	SEGMENT
this$ = 48
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT

; 728  : 		{	// return const reference to _Mysize

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 729  : 		return (_Get_data()._Mysize);

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  00013	48 83 c0 10	 add	 rax, 16

; 730  : 		}

  00017	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001b	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 48
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT

; 723  : 		{	// return reference to _Mysize

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 724  : 		return (_Get_data()._Mysize);

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  00013	48 83 c0 10	 add	 rax, 16

; 725  : 		}

  00017	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001b	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx, COMDAT

; 713  : 		{	// return reference to _Bx

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 714  : 		return (_Get_data()._Bx);

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data

; 715  : 		}

  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 706  : 		{	// return const reference to _String_val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 707  : 		return (_Mypair._Get_second());

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b c8	 mov	 rcx, rax
  00011	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second

; 708  : 		}

  00016	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001a	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 701  : 		{	// return reference to _String_val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 702  : 		return (_Mypair._Get_second());

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b c8	 mov	 rcx, rax
  00011	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second

; 703  : 		}

  00016	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001a	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 696  : 		{	// return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 697  : 		return (_Mypair._Get_first());

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b c8	 mov	 rcx, rax
  00011	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 698  : 		}

  00016	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001a	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 691  : 		{	// return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 692  : 		return (_Mypair._Get_first());

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b c8	 mov	 rcx, rax
  00011	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 693  : 		}

  00016	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001a	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Copy_alloc, COMDAT

; 601  : 		{	// replace old allocator

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 602  : 		_Pocca(_Getal(), _Al);

  0000e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00013	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00018	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Al$[rsp]
  0001d	48 8b c8	 mov	 rcx, rax
  00020	e8 00 00 00 00	 call	 ??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >

; 603  : 		}

  00025	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00029	c3		 ret	 0
?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Copy_alloc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT

; 589  : 		{	// default construct allocator

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 588  : 		: _Mypair(_Zero_then_variadic_args_t())

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0000e	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00013	48 8b c8	 mov	 rcx, rax
  00016	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>

; 590  : 		}

  0001b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00020	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00024	c3		 ret	 0
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT

; 582  : 		{	// determine current pointer to buffer for nonmutable string

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 583  : 		return (_Get_data()._Myptr());

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  00013	48 8b c8	 mov	 rcx, rax
  00016	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 584  : 		}

  0001b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001f	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 48
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT

; 577  : 		{	// determine current pointer to buffer for mutable string

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 578  : 		return (_Get_data()._Myptr());

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  00013	48 8b c8	 mov	 rcx, rax
  00016	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 579  : 		}

  0001b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001f	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b c8	 mov	 rcx, rax
  00011	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00016	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001a	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 533  : 			{	// user-provided, for fancy pointers

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 534  : 			}

  00005	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 528  : 		_Bxty()

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 529  : 			{	// user-provided, for fancy pointers
; 530  : 			}

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
tv72 = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 520  : 		{	// determine current pointer to buffer for nonmutable string

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 521  : 		return (this->_BUF_SIZE <= _Myres

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 83 78 18 10	 cmp	 QWORD PTR [rax+24], 16
  00013	72 14		 jb	 SHORT $LN3@Myptr
  00015	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0001a	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0001d	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00022	48 89 44 24 20	 mov	 QWORD PTR tv72[rsp], rax
  00027	eb 0a		 jmp	 SHORT $LN4@Myptr
$LN3@Myptr:
  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 89 44 24 20	 mov	 QWORD PTR tv72[rsp], rax
$LN4@Myptr:
  00033	48 8b 44 24 20	 mov	 rax, QWORD PTR tv72[rsp]

; 522  : 			? _Unfancy(_Bx._Ptr)
; 523  : 			: _Bx._Buf);
; 524  : 		}

  00038	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003c	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
tv72 = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 513  : 		{	// determine current pointer to buffer for mutable string

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 83 78 18 10	 cmp	 QWORD PTR [rax+24], 16
  00013	72 14		 jb	 SHORT $LN3@Myptr
  00015	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0001a	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0001d	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00022	48 89 44 24 20	 mov	 QWORD PTR tv72[rsp], rax
  00027	eb 0a		 jmp	 SHORT $LN4@Myptr
$LN3@Myptr:
  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 89 44 24 20	 mov	 QWORD PTR tv72[rsp], rax
$LN4@Myptr:
  00033	48 8b 44 24 20	 mov	 rax, QWORD PTR tv72[rsp]

; 515  : 			? _Unfancy(_Bx._Ptr)
; 516  : 			: _Bx._Buf);
; 517  : 		}

  00038	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003c	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 498  : 		{	// initialize values

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 495  : 		: _Bx(),

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8b c8	 mov	 rcx, rax
  00011	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 496  : 		_Mysize(0),

  00016	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0001b	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 497  : 		_Myres(0)

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 499  : 		}

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00039	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT

; 1007 : 		{	// get maximum size

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1008 : 		return (_Mytraits::max_size(*this));

  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size

; 1009 : 		}

  00017	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001b	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT

; 986  : 		{	// deallocate object at _Ptr, ignore size

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

  00013	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  00018	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00022	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z ; std::allocator<char>::deallocate

; 988  : 		}

  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	c3		 ret	 0
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT

; 975  : 		{	// allocate array of _Count elements

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 976  : 		return (_Mybase::allocate(_Count));

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Count$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00018	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 977  : 		}

  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT

; 946  : 		{	// construct by moving

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 945  : 		: _Mybase(_STD move(_Right))

  0000e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00013	e8 00 00 00 00	 call	 ??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
  00018	48 8b d0	 mov	 rdx, rax
  0001b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00020	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@AEBV01@@Z ; std::allocator<char>::allocator<char>

; 947  : 		}

  00025	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT

; 936  : 		{	// construct default allocator (do nothing)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 935  : 		: _Mybase()

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0000e	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>

; 937  : 		}

  00013	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00018	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001c	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
__formal$ = 80
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 912  : 		{	// get allocator to use

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 913  : 		return (_Mytraits::select_on_container_copy_construction(*this));

  00013	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  00018	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001d	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
  00022	48 8b d0	 mov	 rdx, rax
  00025	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0002a	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
  0002f	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 914  : 		}

  00034	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00038	c3		 ret	 0
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Al$ = 56
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 874  : 		{	// get allocator to use

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 875  : 		return (_Al);

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Al$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00018	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@AEBV01@@Z ; std::allocator<char>::allocator<char>
  0001d	48 8b 44 24 30	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 876  : 		}

  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
_Al$ = 48
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 868  : 		{	// get maximum size

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 869  : 		return (_Al.max_size());

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0000e	e8 00 00 00 00	 call	 ?max_size@?$allocator@D@std@@QEBA_KXZ ; std::allocator<char>::max_size

; 870  : 		}

  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@D@std@@QEBA_KXZ PROC		; std::allocator<char>::max_size, COMDAT

; 748  : 		{	// estimate maximum array size

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

  00005	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 750  : 		}

  0000c	c3		 ret	 0
?max_size@?$allocator@D@std@@QEBA_KXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 724  : 		{	// allocate array of _Count elements

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

  0000e	41 b0 01	 mov	 r8b, 1
  00011	ba 01 00 00 00	 mov	 edx, 1
  00016	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  0001b	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPEAX_K0_N@Z ; std::_Allocate

; 726  : 		}

  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 719  : 		{	// deallocate object at _Ptr

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00013	41 b8 01 00 00
	00		 mov	 r8d, 1
  00019	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0001e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Deallocate@std@@YAXPEAX_K1@Z ; std::_Deallocate

; 721  : 		}

  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??0?$allocator@D@std@@QEAA@AEBV01@@Z PROC		; std::allocator<char>::allocator<char>, COMDAT

; 703  : 	allocator(const allocator<_Ty>&) _THROW0()

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 704  : 		{	// construct by copying (do nothing)
; 705  : 		}

  0000a	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000f	c3		 ret	 0
??0?$allocator@D@std@@QEAA@AEBV01@@Z ENDP		; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 699  : 	allocator() _THROW0()

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
;	COMDAT ?_Init_atomic_counter@std@@YAXAEAKK@Z
_TEXT	SEGMENT
_Counter$ = 8
_Value$ = 16
?_Init_atomic_counter@std@@YAXAEAKK@Z PROC		; std::_Init_atomic_counter, COMDAT

; 62   : 	{	// non-atomically initialize counter

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 63   : 	_Counter = _Value;

  00009	48 8b 44 24 08	 mov	 rax, QWORD PTR _Counter$[rsp]
  0000e	8b 4c 24 10	 mov	 ecx, DWORD PTR _Value$[rsp]
  00012	89 08		 mov	 DWORD PTR [rax], ecx

; 64   : 	}

  00014	c3		 ret	 0
?_Init_atomic_counter@std@@YAXAEAKK@Z ENDP		; std::_Init_atomic_counter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPEAX_K1@Z
_TEXT	SEGMENT
_Ptr_user$1 = 32
_Ptr_container$2 = 40
_User_size$ = 48
_Ptr_ptr$3 = 56
_Ptr$ = 80
_Count$ = 88
_Sz$ = 96
?_Deallocate@std@@YAXPEAX_K1@Z PROC			; std::_Deallocate, COMDAT

; 92   : 	{	// deallocate storage for _Count elements of size _Sz

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00013	33 d2		 xor	 edx, edx
  00015	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  0001c	48 f7 74 24 60	 div	 QWORD PTR _Sz$[rsp]
  00021	48 39 44 24 58	 cmp	 QWORD PTR _Count$[rsp], rax
  00026	76 05		 jbe	 SHORT $LN2@Deallocate
  00028	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
$LN2@Deallocate:

; 95   : 	const size_t _User_size = _Count * _Sz;

  0002d	48 8b 44 24 58	 mov	 rax, QWORD PTR _Count$[rsp]
  00032	48 0f af 44 24
	60		 imul	 rax, QWORD PTR _Sz$[rsp]
  00038	48 89 44 24 30	 mov	 QWORD PTR _User_size$[rsp], rax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0003d	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _User_size$[rsp], 4096 ; 00001000H
  00046	0f 82 89 00 00
	00		 jb	 $LN3@Deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);

  0004c	48 8b 44 24 50	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00051	48 89 44 24 20	 mov	 QWORD PTR _Ptr_user$1[rsp], rax

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00056	48 8b 44 24 20	 mov	 rax, QWORD PTR _Ptr_user$1[rsp]
  0005b	48 83 e0 1f	 and	 rax, 31
  0005f	48 85 c0	 test	 rax, rax
  00062	74 05		 je	 SHORT $LN4@Deallocate
  00064	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
$LN4@Deallocate:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

  00069	48 8b 44 24 20	 mov	 rax, QWORD PTR _Ptr_user$1[rsp]
  0006e	48 83 e8 08	 sub	 rax, 8
  00072	48 89 44 24 38	 mov	 QWORD PTR _Ptr_ptr$3[rsp], rax

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00077	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_ptr$3[rsp]
  0007c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007f	48 89 44 24 28	 mov	 QWORD PTR _Ptr_container$2[rsp], rax

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00084	48 8b 44 24 20	 mov	 rax, QWORD PTR _Ptr_user$1[rsp]
  00089	48 39 44 24 28	 cmp	 QWORD PTR _Ptr_container$2[rsp], rax
  0008e	72 05		 jb	 SHORT $LN5@Deallocate
  00090	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
$LN5@Deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00095	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptr_container$2[rsp]
  0009a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Ptr_user$1[rsp]
  0009f	48 2b c8	 sub	 rcx, rax
  000a2	48 8b c1	 mov	 rax, rcx
  000a5	48 83 f8 08	 cmp	 rax, 8
  000a9	73 05		 jae	 SHORT $LN6@Deallocate
  000ab	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
$LN6@Deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000b0	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptr_container$2[rsp]
  000b5	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Ptr_user$1[rsp]
  000ba	48 2b c8	 sub	 rcx, rax
  000bd	48 8b c1	 mov	 rax, rcx
  000c0	48 83 f8 27	 cmp	 rax, 39			; 00000027H
  000c4	76 05		 jbe	 SHORT $LN7@Deallocate
  000c6	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
$LN7@Deallocate:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000cb	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptr_container$2[rsp]
  000d0	48 89 44 24 50	 mov	 QWORD PTR _Ptr$[rsp], rax
$LN3@Deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000d5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000da	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN8@Deallocate:

; 133  : 	}

  000df	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000e3	c3		 ret	 0
?_Deallocate@std@@YAXPEAX_K1@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPEAX_K0_N@Z
_TEXT	SEGMENT
_Ptr$ = 32
_User_size$ = 40
_Ptr_container$1 = 48
_Block_size$2 = 56
_Count$ = 80
_Sz$ = 88
_Try_aligned_allocation$ = 96
?_Allocate@std@@YAPEAX_K0_N@Z PROC			; std::_Allocate, COMDAT

; 48   : 	{	// allocate storage for _Count elements of size _Sz

$LN10:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 49   : 	void *_Ptr = 0;

  00013	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR _Ptr$[rsp], 0

; 50   : 
; 51   : 	if (_Count == 0)

  0001c	48 83 7c 24 50
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00022	75 0a		 jne	 SHORT $LN2@Allocate

; 52   : 		return (_Ptr);

  00024	48 8b 44 24 20	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00029	e9 c5 00 00 00	 jmp	 $LN1@Allocate
$LN2@Allocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  0002e	33 d2		 xor	 edx, edx
  00030	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  00037	48 f7 74 24 58	 div	 QWORD PTR _Sz$[rsp]
  0003c	48 3b 44 24 50	 cmp	 rax, QWORD PTR _Count$[rsp]
  00041	73 05		 jae	 SHORT $LN3@Allocate

; 56   : 		_Xbad_alloc();	// report no memory

  00043	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN3@Allocate:

; 57   : 	const size_t _User_size = _Count * _Sz;

  00048	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  0004d	48 0f af 44 24
	58		 imul	 rax, QWORD PTR _Sz$[rsp]
  00053	48 89 44 24 28	 mov	 QWORD PTR _User_size$[rsp], rax

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00058	0f b6 44 24 60	 movzx	 eax, BYTE PTR _Try_aligned_allocation$[rsp]
  0005d	85 c0		 test	 eax, eax
  0005f	74 71		 je	 SHORT $LN4@Allocate
  00061	48 81 7c 24 28
	00 10 00 00	 cmp	 QWORD PTR _User_size$[rsp], 4096 ; 00001000H
  0006a	72 66		 jb	 SHORT $LN4@Allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0006c	48 8b 44 24 28	 mov	 rax, QWORD PTR _User_size$[rsp]
  00071	48 83 c0 27	 add	 rax, 39			; 00000027H
  00075	48 89 44 24 38	 mov	 QWORD PTR _Block_size$2[rsp], rax

; 66   : 		if (_Block_size <= _User_size)

  0007a	48 8b 44 24 28	 mov	 rax, QWORD PTR _User_size$[rsp]
  0007f	48 39 44 24 38	 cmp	 QWORD PTR _Block_size$2[rsp], rax
  00084	77 05		 ja	 SHORT $LN6@Allocate

; 67   : 			_Xbad_alloc();	// report no memory

  00086	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN6@Allocate:

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  0008b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Block_size$2[rsp]
  00090	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00095	48 89 44 24 30	 mov	 QWORD PTR _Ptr_container$1[rsp], rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0009a	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Ptr_container$1[rsp], 0
  000a0	75 05		 jne	 SHORT $LN7@Allocate
  000a2	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
$LN7@Allocate:

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  000a7	48 8b 44 24 30	 mov	 rax, QWORD PTR _Ptr_container$1[rsp]
  000ac	48 83 c0 27	 add	 rax, 39			; 00000027H
  000b0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000b4	48 89 44 24 20	 mov	 QWORD PTR _Ptr$[rsp], rax

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  000b9	b8 08 00 00 00	 mov	 eax, 8
  000be	48 6b c0 ff	 imul	 rax, rax, -1
  000c2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000c7	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Ptr_container$1[rsp]
  000cc	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

  000d0	eb 1c		 jmp	 SHORT $LN5@Allocate
$LN4@Allocate:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  000d2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _User_size$[rsp]
  000d7	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  000dc	48 89 44 24 20	 mov	 QWORD PTR _Ptr$[rsp], rax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  000e1	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Ptr$[rsp], 0
  000e7	75 05		 jne	 SHORT $LN8@Allocate
  000e9	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
$LN8@Allocate:
$LN5@Allocate:

; 85   : 		}
; 86   : 	return (_Ptr);

  000ee	48 8b 44 24 20	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN1@Allocate:
$LN9@Allocate:

; 87   : 	}

  000f3	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000f7	c3		 ret	 0
?_Allocate@std@@YAPEAX_K0_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT

; 606  : 		return (EOF);

  00000	b8 ff ff ff ff	 mov	 eax, -1

; 607  : 		}

  00005	c3		 ret	 0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 0
_Left$ = 32
_Right$ = 40
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT

; 594  : 		{	// test for metacharacter equality

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 18	 sub	 rsp, 24

; 595  : 		return (_Left == _Right);

  0000e	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00013	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  00018	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0001a	39 08		 cmp	 DWORD PTR [rax], ecx
  0001c	75 09		 jne	 SHORT $LN3@eq_int_typ
  0001e	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv65[rsp], 1
  00025	eb 07		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  00027	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv65[rsp], 0
$LN4@eq_int_typ:
  0002e	0f b6 04 24	 movzx	 eax, BYTE PTR tv65[rsp]

; 596  : 		}

  00032	48 83 c4 18	 add	 rsp, 24
  00036	c3		 ret	 0
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHAEBD@Z
_TEXT	SEGMENT
_Ch$ = 8
?to_int_type@?$char_traits@D@std@@SAHAEBD@Z PROC	; std::char_traits<char>::to_int_type, COMDAT

; 588  : 		{	// convert character to metacharacter

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 589  : 		return ((unsigned char)_Ch);

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR _Ch$[rsp]
  0000a	0f b6 00	 movzx	 eax, BYTE PTR [rax]

; 590  : 		}

  0000d	c3		 ret	 0
?to_int_type@?$char_traits@D@std@@SAHAEBD@Z ENDP	; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 564  : 		{	// assign an element

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 565  : 		_Left = _Right;

  0000a	48 8b 44 24 08	 mov	 rax, QWORD PTR _Left$[rsp]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR _Right$[rsp]
  00014	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00017	88 08		 mov	 BYTE PTR [rax], cl

; 566  : 		}

  00019	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Ch$ = 64
?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z PROC	; std::char_traits<char>::assign, COMDAT

; 559  : 		{	// assign _Count * _Ch to [_First, ...)

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  00013	0f be 44 24 40	 movsx	 eax, BYTE PTR _Ch$[rsp]
  00018	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  0001d	8b d0		 mov	 edx, eax
  0001f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00024	e8 00 00 00 00	 call	 memset

; 561  : 		}

  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z ENDP	; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
tv69 = 32
_First1$ = 64
_First2$ = 72
_Count$ = 80
?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z PROC	; std::char_traits<char>::move, COMDAT

; 552  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 553  : 		return (_Count == 0 ? _First1

  00013	48 83 7c 24 50
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00019	75 0c		 jne	 SHORT $LN3@move
  0001b	48 8b 44 24 40	 mov	 rax, QWORD PTR _First1$[rsp]
  00020	48 89 44 24 20	 mov	 QWORD PTR tv69[rsp], rax
  00025	eb 19		 jmp	 SHORT $LN4@move
$LN3@move:
  00027	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0002c	48 8b 54 24 48	 mov	 rdx, QWORD PTR _First2$[rsp]
  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First1$[rsp]
  00036	e8 00 00 00 00	 call	 memmove
  0003b	48 89 44 24 20	 mov	 QWORD PTR tv69[rsp], rax
$LN4@move:
  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR tv69[rsp]

; 554  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));
; 555  : 		}

  00045	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00049	c3		 ret	 0
?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ENDP	; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
tv69 = 32
_First1$ = 64
_First2$ = 72
_Count$ = 80
?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z PROC	; std::char_traits<char>::copy, COMDAT

; 529  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 530  : 		return (_Count == 0 ? _First1

  00013	48 83 7c 24 50
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00019	75 0c		 jne	 SHORT $LN3@copy
  0001b	48 8b 44 24 40	 mov	 rax, QWORD PTR _First1$[rsp]
  00020	48 89 44 24 20	 mov	 QWORD PTR tv69[rsp], rax
  00025	eb 19		 jmp	 SHORT $LN4@copy
$LN3@copy:
  00027	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0002c	48 8b 54 24 48	 mov	 rdx, QWORD PTR _First2$[rsp]
  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First1$[rsp]
  00036	e8 00 00 00 00	 call	 memcpy
  0003b	48 89 44 24 20	 mov	 QWORD PTR tv69[rsp], rax
$LN4@copy:
  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR tv69[rsp]

; 531  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));
; 532  : 		}

  00045	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00049	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ENDP	; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SA_KPEBD@Z
_TEXT	SEGMENT
tv68 = 32
_First$ = 64
?length@?$char_traits@D@std@@SA_KPEBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 522  : 		{	// find length of null-terminated string

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 523  : 		return (*_First == 0 ? 0

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR _First$[rsp]
  0000e	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00011	85 c0		 test	 eax, eax
  00013	75 0b		 jne	 SHORT $LN3@length
  00015	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR tv68[rsp], 0
  0001e	eb 0f		 jmp	 SHORT $LN4@length
$LN3@length:
  00020	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  00025	e8 00 00 00 00	 call	 strlen
  0002a	48 89 44 24 20	 mov	 QWORD PTR tv68[rsp], rax
$LN4@length:
  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR tv68[rsp]

; 524  : 			: _CSTD strlen(_First));
; 525  : 		}

  00034	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00038	c3		 ret	 0
?length@?$char_traits@D@std@@SA_KPEBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 87   :     {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 88   :         (void)_Size;
; 89   :         return _Where;

  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR _Where$[rsp]

; 90   :     }

  0000f	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00012	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00017	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $LN2@scalar
  00022	ba 18 00 00 00	 mov	 edx, 24
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 88   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 89   :         return _Data._What ? _Data._What : "Unknown exception";

  00009	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00013	74 0f		 je	 SHORT $LN3@what
  00015	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0001a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0001e	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00022	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00024	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
  0002b	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  0002f	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 90   :     }

  00033	48 83 c4 18	 add	 rsp, 24
  00037	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 83   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx

; 84   :         __std_exception_destroy(&_Data);

  00018	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 83 c0 08	 add	 rax, 8
  00021	48 8b c8	 mov	 rcx, rax
  00024	e8 00 00 00 00	 call	 __std_exception_destroy

; 85   :     }

  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 65   :         : _Data()

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b f8	 mov	 rdi, rax
  0002a	33 c0		 xor	 eax, eax
  0002c	b9 10 00 00 00	 mov	 ecx, 16
  00031	f3 aa		 rep stosb

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 83 c0 08	 add	 rax, 8
  0003c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00041	48 83 c1 08	 add	 rcx, 8
  00045	48 8b d0	 mov	 rdx, rax
  00048	e8 00 00 00 00	 call	 __std_exception_copy

; 68   :     }

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5f		 pop	 rdi
  00057	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 60   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 59   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 61   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 62   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 32
this$ = 64
_Message$ = 72
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT

; 53   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 52   :         : _Data()

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b f8	 mov	 rdi, rax
  0002a	33 c0		 xor	 eax, eax
  0002c	b9 10 00 00 00	 mov	 ecx, 16
  00031	f3 aa		 rep stosb

; 54   :         __std_exception_data _InitData = { _Message, true };

  00033	48 8b 44 24 48	 mov	 rax, QWORD PTR _Message$[rsp]
  00038	48 89 44 24 20	 mov	 QWORD PTR _InitData$[rsp], rax
  0003d	c6 44 24 28 01	 mov	 BYTE PTR _InitData$[rsp+8], 1

; 55   :         __std_exception_copy(&_InitData, &_Data);

  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c0 08	 add	 rax, 8
  0004b	48 8b d0	 mov	 rdx, rax
  0004e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$[rsp]
  00053	e8 00 00 00 00	 call	 __std_exception_copy

; 56   :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\stdio.h
;	COMDAT sprintf_s
_TEXT	SEGMENT
_Result$ = 48
_ArgList$ = 56
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
sprintf_s PROC						; COMDAT

; 1839 :         {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1840 :             int _Result;
; 1841 :             va_list _ArgList;
; 1842 :             __crt_va_start(_ArgList, _Format);

  00018	e8 00 00 00 00	 call	 ??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
  0001d	48 8d 44 24 68	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00022	48 89 44 24 38	 mov	 QWORD PTR _ArgList$[rsp], rax

; 1843 :             _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  00027	48 8b 44 24 38	 mov	 rax, QWORD PTR _ArgList$[rsp]
  0002c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00031	45 33 c9	 xor	 r9d, r9d
  00034	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Format$[rsp]
  00039	48 8b 54 24 58	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  0003e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00043	e8 00 00 00 00	 call	 _vsprintf_s_l
  00048	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1844 :             __crt_va_end(_ArgList);

  0004c	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 1845 :             return _Result;

  00055	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]

; 1846 :         }

  00059	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0005d	c3		 ret	 0
sprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\stdio.h
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Result$ = 48
tv73 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vsprintf_s_l PROC					; COMDAT

; 1495 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1496 :         int const _Result = __stdio_common_vsprintf_s(

  00018	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0001d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00022	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00027	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  0002c	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00031	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  00036	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  0003b	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00040	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00043	e8 00 00 00 00	 call	 __stdio_common_vsprintf_s
  00048	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1497 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1498 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1499 : 
; 1500 :         return _Result < 0 ? -1 : _Result;

  0004c	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00051	7d 0a		 jge	 SHORT $LN3@vsprintf_s
  00053	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv73[rsp], -1
  0005b	eb 08		 jmp	 SHORT $LN4@vsprintf_s
$LN3@vsprintf_s:
  0005d	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00061	89 44 24 34	 mov	 DWORD PTR tv73[rsp], eax
$LN4@vsprintf_s:
  00065	8b 44 24 34	 mov	 eax, DWORD PTR tv73[rsp]

; 1501 :     }

  00069	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0006d	c3		 ret	 0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ PROC ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00000	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ENDP ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :         static unsigned __int64 _OptionsStorage;
; 87   :         return &_OptionsStorage;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 88   :     }

  00007	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\corecrt_math.h
;	COMDAT frexpl
_TEXT	SEGMENT
_X$ = 48
_Y$ = 56
frexpl	PROC						; COMDAT

; 862  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [rsp+8], xmm0
  0000b	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 863  :         return frexp((double)_X, _Y);

  0000f	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Y$[rsp]
  00014	f2 0f 10 44 24
	30		 movsd	 xmm0, QWORD PTR _X$[rsp]
  0001a	e8 00 00 00 00	 call	 frexp

; 864  :     }

  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
frexpl	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\corecrt_math.h
;	COMDAT fabsl
_TEXT	SEGMENT
_X$ = 48
fabsl	PROC						; COMDAT

; 841  :     {

$LN3:
  00000	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [rsp+8], xmm0
  00006	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 842  :         return fabs((double)_X);

  0000a	f2 0f 10 44 24
	30		 movsd	 xmm0, QWORD PTR _X$[rsp]
  00010	e8 00 00 00 00	 call	 fabs

; 843  :     }

  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
fabsl	ENDP
_TEXT	ENDS
END
